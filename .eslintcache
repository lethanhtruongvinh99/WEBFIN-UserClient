[{"D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\index.js":"1","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\reportWebVitals.js":"2","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\App.js":"3","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\store\\index.js":"4","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\history.js":"5","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\actions\\user-actions.js":"6","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\containers\\login-form\\index.js":"7","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\containers\\register-form\\index.js":"8","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\reducers\\header-reducer.js":"9","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\reducers\\user-reducer.js":"10","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\containers\\auth-redirect\\index.js":"11","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\containers\\the-layout\\index.js":"12","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\containers\\recovery-password\\index.js":"13","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\containers\\verify-account\\index.js":"14","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\constants\\action-types.js":"15","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\utils\\NetworkUtils.js":"16","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\utils\\NotificationUtils.js":"17","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\containers\\history\\index.js":"18","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\containers\\leaderboard\\index.js":"19","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\containers\\user-profile\\index.js":"20","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\containers\\homepage\\index.js":"21","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\containers\\room\\index.js":"22","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\containers\\rooms\\index.js":"23","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\components\\header\\index.js":"24","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\api\\index.js":"25","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\actions\\header-action.js":"26","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\components\\room-item\\index.js":"27","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\components\\quick-join-button\\index.js":"28","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\components\\leaderboard-row\\index.js":"29","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\components\\move\\index.js":"30","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\components\\game\\index.js":"31","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\components\\chat-messages\\index.js":"32","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\containers\\homepage\\components\\online-users.js":"33","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\containers\\homepage\\components\\create-room-modal.js":"34","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\containers\\homepage\\components\\enter-password-modal.js":"35","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\components\\invite-modal\\index.js":"36","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\components\\online-user\\index.js":"37","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\components\\board\\index.js":"38","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\components\\square\\index.js":"39","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\components\\leaderboard-item\\index.js":"40","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\utils\\NetwordUtils2.js":"41"},{"size":594,"mtime":1609555790584,"results":"42","hashOfConfig":"43"},{"size":375,"mtime":1609229438829,"results":"44","hashOfConfig":"43"},{"size":1495,"mtime":1610028084234,"results":"45","hashOfConfig":"43"},{"size":384,"mtime":1609942583360,"results":"46","hashOfConfig":"43"},{"size":96,"mtime":1609555790583,"results":"47","hashOfConfig":"43"},{"size":392,"mtime":1609942583315,"results":"48","hashOfConfig":"43"},{"size":5630,"mtime":1609945242837,"results":"49","hashOfConfig":"43"},{"size":4911,"mtime":1609945242838,"results":"50","hashOfConfig":"43"},{"size":554,"mtime":1609942583360,"results":"51","hashOfConfig":"43"},{"size":700,"mtime":1609229438829,"results":"52","hashOfConfig":"43"},{"size":670,"mtime":1609229438825,"results":"53","hashOfConfig":"43"},{"size":1148,"mtime":1609995761623,"results":"54","hashOfConfig":"43"},{"size":2609,"mtime":1609555790574,"results":"55","hashOfConfig":"43"},{"size":1156,"mtime":1609555790583,"results":"56","hashOfConfig":"43"},{"size":222,"mtime":1609942583329,"results":"57","hashOfConfig":"43"},{"size":441,"mtime":1609945307931,"results":"58","hashOfConfig":"43"},{"size":286,"mtime":1609229438830,"results":"59","hashOfConfig":"43"},{"size":1342,"mtime":1610028978968,"results":"60","hashOfConfig":"43"},{"size":2008,"mtime":1610029838532,"results":"61","hashOfConfig":"43"},{"size":2354,"mtime":1609942583360,"results":"62","hashOfConfig":"43"},{"size":5712,"mtime":1609995761622,"results":"63","hashOfConfig":"43"},{"size":5630,"mtime":1609995761623,"results":"64","hashOfConfig":"43"},{"size":1940,"mtime":1610029674453,"results":"65","hashOfConfig":"43"},{"size":3454,"mtime":1609995761588,"results":"66","hashOfConfig":"43"},{"size":114,"mtime":1609229438821,"results":"67","hashOfConfig":"43"},{"size":247,"mtime":1609942583315,"results":"68","hashOfConfig":"43"},{"size":1672,"mtime":1610029641730,"results":"69","hashOfConfig":"43"},{"size":1003,"mtime":1609942583328,"results":"70","hashOfConfig":"43"},{"size":1084,"mtime":1610029773000,"results":"71","hashOfConfig":"43"},{"size":703,"mtime":1609942583327,"results":"72","hashOfConfig":"43"},{"size":5106,"mtime":1609555790527,"results":"73","hashOfConfig":"43"},{"size":749,"mtime":1609942583315,"results":"74","hashOfConfig":"43"},{"size":583,"mtime":1609995761621,"results":"75","hashOfConfig":"43"},{"size":3021,"mtime":1609995761610,"results":"76","hashOfConfig":"43"},{"size":1568,"mtime":1609995761621,"results":"77","hashOfConfig":"43"},{"size":949,"mtime":1609942583316,"results":"78","hashOfConfig":"43"},{"size":1037,"mtime":1609942583328,"results":"79","hashOfConfig":"43"},{"size":786,"mtime":1609995761546,"results":"80","hashOfConfig":"43"},{"size":222,"mtime":1609555790542,"results":"81","hashOfConfig":"43"},{"size":1268,"mtime":1610029947472,"results":"82","hashOfConfig":"43"},{"size":332,"mtime":1610024533207,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"11nxiyq",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"86"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"86"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"86"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"86"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"86"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"86"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\index.js",[],["179","180"],"D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\reportWebVitals.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\App.js",["181","182"],"import React from 'react';\r\nimport\r\n{\r\n  Route, Router,\r\n  Switch, Redirect\r\n} from 'react-router-dom';\r\nimport './App.css';\r\nimport AuthRedirect from './containers/auth-redirect/index';\r\nimport LoginForm from './containers/login-form/index';\r\nimport RecoveryPassword from './containers/recovery-password';\r\nimport RegisterForm from './containers/register-form/index';\r\nimport Verify from './containers/verify-account';\r\nimport { history } from './history';\r\nimport LayoutCustom from './containers/the-layout/index';\r\nimport { connect } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { login } from './actions/user-actions';\r\n\r\nfunction App(props)\r\n{\r\n  useEffect(() =>\r\n  {\r\n    const token = localStorage.getItem('token');\r\n    if (token)\r\n    {\r\n      props.login(token);\r\n    }\r\n  }, [])\r\n  return (\r\n    <Router history={history}>\r\n      <Switch>\r\n        <Route exact path=\"/auth/:token\" component={AuthRedirect} />\r\n        <Route exact path=\"/login\" component={LoginForm} />\r\n        <Route exact path=\"/register\" component={RegisterForm} />\r\n        <Route exact path=\"/verify\" component={Verify} />\r\n        <Route exact path=\"/recovery\" component={RecoveryPassword} />\r\n        <Route path=\"/\" component={LayoutCustom} />\r\n      </Switch>\r\n    </Router>\r\n\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) =>\r\n{\r\n  return {\r\n    token: state.user.token,\r\n  }\r\n}\r\n\r\nconst mapDispacthToProps = { login };\r\n\r\nexport default connect(mapStateToProps, mapDispacthToProps)(App);\r\n","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\store\\index.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\history.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\actions\\user-actions.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\containers\\login-form\\index.js",["183","184"],"import React, { useEffect, useState } from \"react\";\r\nimport { Form, Input, Button, Checkbox, Divider, Spin, Modal } from \"antd\";\r\nimport\r\n{\r\n  UserOutlined,\r\n  LockOutlined,\r\n  FacebookFilled,\r\n  GoogleCircleFilled,\r\n} from \"@ant-design/icons\";\r\nimport callServer from \"../../utils/NetworkUtils\";\r\nimport showNotification from \"../../utils/NotificationUtils\";\r\nimport { socket } from \"../../api\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/user-actions\";\r\nimport \"./index.css\";\r\n\r\nconst mapDispatchToProps = { login };\r\nconst mapStateToProps = (state) =>\r\n{\r\n  const { token } = state.user;\r\n  return { token };\r\n};\r\n\r\nconst LoginForm = (props) =>\r\n{\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const [recoveryPasswordUsername, setRecoveryPasswordUsername] = useState(\"\");\r\n\r\n  const showModal = () =>\r\n  {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = async () =>\r\n  {\r\n    const data = { username: recoveryPasswordUsername };\r\n    const result = await callServer(process.env.REACT_APP_HOST_NAME + '/auth/recoveryrequest', \"post\", data);\r\n    if (result.auth)\r\n    {\r\n      showNotification(\"error\", result.message);\r\n      setIsModalVisible(false);\r\n    } else\r\n    {\r\n      showNotification(\"error\", result.message);\r\n    }\r\n\r\n  };\r\n\r\n  const handleCancel = () =>\r\n  {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleRecoveryUsername = (e) =>\r\n  {\r\n    setRecoveryPasswordUsername(e.target.value);\r\n  }\r\n\r\n  useEffect(() =>\r\n  {\r\n    console.log(\"Login Form\");\r\n  }, []);\r\n\r\n  const onFinish = async (values) =>\r\n  {\r\n    console.log(\"Received values of form: \", values);\r\n    setIsLoading(true);\r\n    const data = {\r\n      ...values,\r\n    };\r\n\r\n    const result = await callServer(\r\n      process.env.REACT_APP_HOST_NAME + \"/auth/login\",\r\n      \"post\",\r\n      data\r\n    );\r\n    // console.log(result);\r\n    if (result.auth)\r\n    {\r\n      setIsLoading(false);\r\n      localStorage.setItem(\"token\", result.accessToken);\r\n      props.login(result.accessToken);\r\n      socket.emit(\"login\", { token: result.accessToken });\r\n      props.history.push(\"/home\");\r\n    } else\r\n    {\r\n      setIsLoading(false);\r\n      showNotification(\"error\", result.message);\r\n    }\r\n  };\r\n\r\n  const handleRegisterClick = () =>\r\n  {\r\n    props.history.push(\"/register\");\r\n  };\r\n\r\n  const handleFacebookLogin = () =>\r\n  {\r\n    window.open(process.env.REACT_APP_HOST_NAME + \"/auth/facebook\", \"_self\");\r\n  };\r\n\r\n  const handleGoogleLogin = () =>\r\n  {\r\n    window.open(process.env.REACT_APP_HOST_NAME + \"/auth/google\", \"_self\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h1 style={{ textAlign: \"center\", fontSize: \"32px\" }}>Login</h1>\r\n      <Form\r\n        name=\"normal_login\"\r\n        className=\"login-form\"\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n      >\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={handleGoogleLogin}\r\n          danger\r\n          className=\"login-form-button\"\r\n          style={{ margin: \"10px 0px\" }}\r\n          icon={<GoogleCircleFilled />}\r\n        >\r\n          Đăng nhập bằng Google\r\n        </Button>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={handleFacebookLogin}\r\n          className=\"login-form-button\"\r\n          style={{ margin: \"10px 0px\" }}\r\n          icon={<FacebookFilled />}\r\n        >\r\n          Đăng nhập bằng Facebook\r\n        </Button>\r\n        <Divider />\r\n        <Form.Item\r\n          name=\"username\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Username!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Tên tài khoản\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Password!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            type=\"password\"\r\n            placeholder=\"Mật khẩu\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n\r\n          <a href=\"\" className=\"login-form-forgot\" onClick={(e) => { e.preventDefault(); showModal() }}>\r\n            Quên mật khẩu\r\n          </a>\r\n        </Form.Item>\r\n        {isLoading ? (\r\n          <div className=\"loading-spinner\">\r\n            <Spin size=\"large\" />\r\n          </div>\r\n        ) : null}\r\n        <Form.Item className=\"button-row\">\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            Đăng nhập\r\n          </Button>\r\n          <div style={{ margin: \"15px 0px\", textAlign: \"center\" }}>Hoặc</div>\r\n          <Button type=\"dashed\" onClick={handleRegisterClick}>\r\n            Đăng ký\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n      <>\r\n        <Modal\r\n          centered\r\n          title=\"Khôi phục mật khẩu\"\r\n          visible={isModalVisible}\r\n          onOk={handleOk}\r\n          onCancel={handleCancel}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Username\"\r\n            onChange={e => handleRecoveryUsername(e)}\r\n          />\r\n        </Modal>\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\containers\\register-form\\index.js",["185","186"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Input, Button, DatePicker, Spin } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport \"./index.css\";\r\nimport callServer from \"../../utils/NetworkUtils\";\r\nimport showNotification from \"../../utils/NotificationUtils\";\r\nimport { socket } from \"../../api\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/user-actions\";\r\n\r\nconst mapDispatchToProps = { login };\r\nconst mapStateToProps = (state) =>\r\n{\r\n  const { token } = state.user;\r\n  return { token };\r\n};\r\n\r\nconst RegisterForm = (props) =>\r\n{\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const onFinish = async (values) =>\r\n  {\r\n    console.log(\"Received values of form: \", values);\r\n    setIsLoading(true);\r\n    if (values.password !== values.passwordConfirm)\r\n    {\r\n      showNotification(\"error\", \"Password does not match!\");\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      ...values,\r\n      role: 0,\r\n      isCreatedAt: new Date(),\r\n    };\r\n\r\n    const result = await callServer(\r\n      process.env.REACT_APP_HOST_NAME + \"/auth/signup\",\r\n      \"post\",\r\n      data\r\n    );\r\n    if (result.auth)\r\n    {\r\n      setIsLoading(false);\r\n      // localStorage.setItem(\"token\", result.accessToken);\r\n      // props.login(result.accessToken);\r\n      // socket.emit(\"login\", { token: result.accessToken });\r\n      // props.history.push(\"/home\");\r\n      showNotification(\"success\", result.message);\r\n    } else\r\n    {\r\n      setIsLoading(false);\r\n      showNotification(\"error\", result.message);\r\n    }\r\n  };\r\n\r\n  const handleLoginClick = () =>\r\n  {\r\n    props.history.push(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-container\">\r\n      <h1 style={{ textAlign: \"center\", margin: \"40px 0px\", fontSize: \"32px\" }}>\r\n        Register\r\n      </h1>\r\n      <Form\r\n        name=\"normal_register\"\r\n        className=\"register-form\"\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n      >\r\n        <Form.Item\r\n          name=\"username\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Username!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Username\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"email\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Email!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Email\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"fullName\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your full name!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Full name\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"dob\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your DOB!\",\r\n            },\r\n          ]}\r\n        >\r\n          <DatePicker placeholder=\"Date of birth\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Password!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"passwordConfirm\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please confirm your Password!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n          />\r\n        </Form.Item>\r\n        {isLoading ? (\r\n          <div className=\"loading-spinner\">\r\n            <Spin size=\"large\" />\r\n          </div>\r\n        ) : null}\r\n        <Form.Item className=\"button-row\">\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"register-form-button\"\r\n          >\r\n            Register\r\n          </Button>\r\n\r\n          <div style={{ margin: \"15px 0px\", textAlign: \"center\" }}>Or</div>\r\n          <Button type=\"dashed\" onClick={handleLoginClick}>\r\n            Log in\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterForm);\r\n","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\reducers\\header-reducer.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\reducers\\user-reducer.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\containers\\auth-redirect\\index.js",["187"],"import React, { useEffect } from \"react\";\r\nimport { socket } from \"../../api\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/user-actions\";\r\n\r\nconst mapDispatchToProps = { login };\r\nconst mapStateToProps = (state) => {\r\n  const { token } = state.user;\r\n  return { token };\r\n};\r\n\r\nconst AuthRedirect = (props) => {\r\n  useEffect(() => {\r\n    const token = props.match.params.token;\r\n    localStorage.setItem(\"token\", token);\r\n    props.login(token);\r\n    socket.emit(\"login\", { token: token });\r\n    props.history.push(\"/home\");\r\n  }, []);\r\n  return <></>;\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthRedirect);\r\n","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\containers\\the-layout\\index.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\containers\\recovery-password\\index.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\containers\\verify-account\\index.js",["188"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport callServer from \"../../utils/NetworkUtils\";\r\nimport { Button } from \"antd\";\r\nconst Verify = (props) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const history = useHistory();\r\n  const token = history.location.search.split(\"?\")[1];\r\n  const handleBackToLogin = () => {\r\n    props.history.push(\"/login\");\r\n  };\r\n  const verifyStart = async (data) => {\r\n    setIsLoading(true);\r\n    const result = await callServer(\r\n      process.env.REACT_APP_HOST_NAME + \"/auth/verify\",\r\n      \"post\",\r\n      data\r\n    );\r\n    console.log(result);\r\n    if (result.auth) {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const data = { token: token };\r\n    verifyStart(data);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        <p>Verifying </p>\r\n      ) : (\r\n        <div>\r\n          <p>Verified</p>\r\n          <Button type=\"link\" onClick={() => handleBackToLogin()}>\r\n            Back to login\r\n          </Button>\r\n        </div>\r\n      )}\r\n      <h1>Verify Account</h1>\r\n    </div>\r\n  );\r\n};\r\nexport default Verify;\r\n","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\constants\\action-types.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\utils\\NetworkUtils.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\utils\\NotificationUtils.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\containers\\history\\index.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\containers\\leaderboard\\index.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\containers\\user-profile\\index.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\containers\\homepage\\index.js",["189"],"import { EnterOutlined, EyeOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { Button, Col, Form, Input, Row } from \"antd\";\r\nimport { React, useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { onlineUsersChanged } from \"../../actions/user-actions\";\r\nimport { socket } from \"../../api\";\r\nimport callServer from \"../../utils/NetworkUtils\";\r\nimport QuickJoinButton from \"./../../components/quick-join-button/index\";\r\nimport showNotification from './../../utils/NotificationUtils';\r\nimport CreateRoomModal from './components/create-room-modal';\r\nimport EnterPasswordModal from './components/enter-password-modal';\r\nimport OnlineUsers from './components/online-users';\r\nimport \"./index.css\";\r\n\r\nconst mapDispatchToProps = { onlineUsersChanged };\r\nconst mapStateToProps = (state) =>\r\n{\r\n  const { onlineUsers, token } = state.user;\r\n  return { onlineUsers, token };\r\n};\r\n\r\nconst Homepage = (props) =>\r\n{\r\n  const [joinButtonLoading, setJoinButtonLoading] = useState(false);\r\n  const [observerButtonLoading, setObserveButtonLoading] = useState(false);\r\n  const [joinMode, setJoinMode] = useState('play')\r\n  const [isModalVisible, setModalVisible] = useState(false);\r\n  const [passwordModalVisible, setPasswordModalVisible] = useState(false);\r\n  const [roomPassword, setRoomPassword] = useState(\"\");\r\n  const [roomId, setRoomId] = useState(\"\");\r\n\r\n\r\n  useEffect(() =>\r\n  {\r\n    socket.on(\"onlineUsersChanged\", (data) =>\r\n    {\r\n      props.onlineUsersChanged(data.onlineUsers);\r\n    });\r\n  }, []);\r\n\r\n  const openCreateRoomModal = () =>\r\n  {\r\n    setModalVisible(true);\r\n  };\r\n\r\n  const handleJoinRoom = async (value) =>\r\n  {\r\n\r\n    if (joinMode === 'play')\r\n    {\r\n      setJoinButtonLoading(true);\r\n    } else setObserveButtonLoading(true);\r\n\r\n    //logged in and not logged in\r\n    //the first is logged in case\r\n    const data = { roomId: value.roomId };\r\n    const result = await callServer(\r\n      process.env.REACT_APP_HOST_NAME + \"/room/join\",\r\n      \"post\",\r\n      data\r\n    );\r\n    console.log(result);\r\n    if (result.auth)\r\n    {\r\n      // console.log(result.data._id);\r\n      if (result.data.password)\r\n      {\r\n        setRoomPassword(result.data.password);\r\n        setRoomId(result.data._id);\r\n        setPasswordModalVisible(true);\r\n      }\r\n      else props.history.push(`/room/${result.data._id}`);\r\n    }\r\n    else\r\n    {\r\n      showNotification(\"error\", \"Không tìm thấy phòng!\")\r\n    }\r\n\r\n    if (joinMode === 'play')\r\n    {\r\n      setJoinButtonLoading(false);\r\n    } else setObserveButtonLoading(false);\r\n  };\r\n\r\n  const handleEnterPassword = async (value) =>\r\n  {\r\n    if (value.roomPassword === roomPassword)\r\n    {\r\n      props.history.push(`/room/${roomId}`);\r\n    }\r\n    else\r\n    {\r\n      showNotification(\"error\", \"Sai mật khẩu!\")\r\n    }\r\n  }\r\n\r\n  const handleCreateRoom = async (values) =>\r\n  {\r\n    const data = { ...values };\r\n    // console.log(data);\r\n    const result = await callServer(\r\n      process.env.REACT_APP_HOST_NAME + \"/room/add\",\r\n      \"post\",\r\n      data\r\n    );\r\n    // console.log(result);\r\n    //Call API to create a room, after that, receive room id to go to /room?id={roomId response from server}\r\n    props.history.push(`/room/${result._id}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <QuickJoinButton />\r\n      <Row style={{ marginTop: \"45px\" }}>\r\n        <h1 style={{ textAlign: \"center\", margin: \"auto\" }}>\r\n          Caro Online\r\n        </h1>\r\n      </Row>\r\n      <Row>\r\n        <Form onFinish={(e) => { handleJoinRoom(e) }}>\r\n          <Form.Item\r\n            name=\"roomId\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Vui lòng nhập Id phòng muốn tham gia\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              className=\"input\"\r\n              placeholder=\"ID của phòng muốn tham gia\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Row gutter={[16, 0]} style={{ marginTop: '15px' }} justify=\"center\">\r\n              {props.token ? <Col>\r\n                <Button\r\n                  loading={joinButtonLoading}\r\n                  htmlType=\"submit\"\r\n                  type=\"primary\"\r\n                  onClick={() => { setJoinMode('play') }}\r\n                  icon={<EnterOutlined />}\r\n                >\r\n                  Tham gia\r\n</Button>\r\n              </Col> : \"\"}\r\n              <Col>\r\n                <Button\r\n                  loading={observerButtonLoading}\r\n                  htmlType=\"submit\"\r\n                  icon={<EyeOutlined />}\r\n                  onClick={() => setJoinMode('observe')}\r\n                >\r\n                  Theo dõi\r\n</Button>\r\n              </Col>\r\n              {props.token ? <Col>\r\n                <Button\r\n                  type=\"dashed\"\r\n                  icon={<PlusOutlined />}\r\n                  onClick={openCreateRoomModal}\r\n                >\r\n                  Tạo phòng\r\n</Button>\r\n              </Col> : \"\"}\r\n            </Row>\r\n          </Form.Item>\r\n        </Form>\r\n      </Row>\r\n\r\n      {props.token ? <><h2 style={{ textAlign: \"center\", margin: \"30px auto\" }}>Đang online</h2>\r\n        <Row gutter={[16, 0]} className=\"avatar-row\" justify=\"center\">\r\n          <OnlineUsers onlineUsers={props.onlineUsers} />\r\n        </Row></> : \"\"}\r\n\r\n      <CreateRoomModal isModalVisible={isModalVisible} handleCreateRoom={handleCreateRoom} setModalVisible={setModalVisible} />\r\n      <EnterPasswordModal passwordModalVisible={passwordModalVisible} handleEnterPassword={handleEnterPassword} setPasswordModalVisible={setPasswordModalVisible} />\r\n\r\n    </div>\r\n  );\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Homepage);\r\n","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\containers\\room\\index.js",["190","191"],"import { Col, Row, Statistic, Empty, Button, Avatar } from \"antd\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport { React, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { socket } from \"../../api\";\r\nimport ChatMessage from \"../../components/chat-messages/index\";\r\nimport Game from \"../../components/game/index\";\r\nimport callServer from \"../../utils/NetworkUtils\";\r\nimport \"./index.css\";\r\nimport Move from \"./../../components/move/index\";\r\nimport { connect } from 'react-redux';\r\nimport { roomJoined, roomLeft } from './../../actions/header-action';\r\nimport { animateScroll } from \"react-scroll\";\r\n\r\n\r\nconst Room = (props) =>\r\n{\r\n  const token = localStorage.getItem(\"token\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [turnName, setTurnName] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState(\"\");\r\n  const roomId = props.match.params.id;\r\n\r\n  useEffect(() =>\r\n  {\r\n\r\n    props.roomJoined([]);\r\n\r\n    const fetchRoomDetails = async () =>\r\n    {\r\n      const result = await callServer(process.env.REACT_APP_HOST_NAME + '/room/detail', 'POST', { roomId: roomId })\r\n      setMessages(result.data.messages)\r\n      console.log(result);\r\n    }\r\n\r\n    fetchRoomDetails();\r\n\r\n\r\n    socket.emit(\"join\", { roomId, token });\r\n\r\n    socket.on(\"turnName\", (response) =>\r\n    {\r\n      //console.log(\"---- SOCKET: ON_turnName: \", response);\r\n      setTurnName(response);\r\n    });\r\n\r\n    socket.on(\"message\", (response) =>\r\n    {\r\n      setMessages(messages.concat(response));\r\n      scrollToBottom();\r\n    });\r\n\r\n    socket.on(\"Username\", (response) =>\r\n    {\r\n      setUsername(response);\r\n      // console.log(\"----Socket: ON Username -----\");\r\n      // console.log(\"RESPONE: \", response);\r\n      // console.log(\"USERNAME: \", username);\r\n    });\r\n\r\n    return (() =>\r\n    {\r\n      props.roomLeft();\r\n    })\r\n\r\n  }, []);\r\n\r\n  function scrollToBottom()\r\n  {\r\n    animateScroll.scrollToBottom({\r\n      containerId: \"chatBox\"\r\n    });\r\n  }\r\n\r\n\r\n  const sendMessage = async (e) =>\r\n  {\r\n    e.preventDefault();\r\n\r\n    //console.log(roomId + \" \" + message);\r\n\r\n    if (message)\r\n    {\r\n      let newMsg = {\r\n        content: message,\r\n        username: 'Tôi',\r\n      }\r\n      setMessages([...messages, newMsg]);\r\n      setMessage(\"\");\r\n\r\n      scrollToBottom();\r\n\r\n      const result = await callServer(\r\n        process.env.REACT_APP_HOST_NAME + \"/message/add\",\r\n        \"post\",\r\n        { roomId: roomId, content: message }\r\n      );\r\n      //console.log(result);\r\n      if (result.status === 200)\r\n      {\r\n        socket.emit(\"sendMessage\", { roomId, message, token });\r\n      }\r\n      // console.log(message);\r\n    }\r\n  };\r\n  // console.log(messages);\r\n  return (\r\n    <div style={{ padding: \"50px\" }}>\r\n      <Row justify=\"space-between\" align=\"middle\">\r\n        <Col xs={24} sm={24} md={5} lg={5} >\r\n          <Row justify=\"center\" align=\"middle\" gutter={30}>\r\n            <Col>\r\n              <Avatar size={48} src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n            </Col>\r\n            <Col>\r\n              <Avatar size={48} src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n            </Col>\r\n            <Col>\r\n              <Button disabled={props.token ? false : true} type=\"primary\">Bắt đầu trận</Button>\r\n            </Col>\r\n            <Col>\r\n              <Button disabled={props.token ? false : true} danger>Xin hoà</Button>\r\n            </Col>\r\n          </Row>\r\n          <Row\r\n            style={{ height: \"10vh\", marginTop: '30px' }}\r\n            justify=\"space-between\"\r\n            align=\"middle\"\r\n          >\r\n            <Col>\r\n              <Statistic title=\"Player turn\" value=\"nhatvinh43\" />\r\n            </Col>\r\n            <Col>\r\n              <Statistic title=\"Symbol\" value=\"X \" />\r\n            </Col>\r\n            <Col>\r\n              <Statistic title=\"Time left\" value=\"00:15\" />\r\n            </Col>\r\n          </Row>\r\n          <Row style={{ overflowY: \"scroll\", height: \"65vh\" }}>\r\n            <Move />\r\n            <Move />\r\n            <Move />\r\n            <Move />\r\n            <Move />\r\n            <Move />\r\n            <Move />\r\n            <Move />\r\n          </Row>\r\n        </Col>\r\n\r\n        <Col className=\"playing-area\">\r\n          <Game Username={username} size={20} TurnName={turnName}></Game>\r\n        </Col>\r\n\r\n        <Col className=\"chat-box\" span={6}>\r\n          <Row id=\"chatBox\" style={{ height: '75vh', overflowY: 'scroll' }} align={messages ? 'top' : \"middle\"}>\r\n            <Col>\r\n              {messages ? messages.map((item, index) => (\r\n                <ChatMessage\r\n                  key={index}\r\n                  content={item.content}\r\n                  username={item.username}\r\n                />\r\n              )) : <Empty />}\r\n            </Col>\r\n          </Row>\r\n\r\n\r\n          <Row>\r\n            <TextArea\r\n              disabled={props.token ? false : true}\r\n              placeholder=\"Type your message here\"\r\n              autoSize={{ minRows: 2, maxRows: 2 }}\r\n              className=\"message-input-box\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              onPressEnter={(e) => sendMessage(e)}\r\n              required={true}\r\n            />\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) =>\r\n{\r\n  return {\r\n    token: state.user.token,\r\n  }\r\n}\r\nconst mapDispatchToProps = { roomJoined, roomLeft };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Room);\r\n","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\containers\\rooms\\index.js",["192"],"D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\components\\header\\index.js",["193","194"],"import React, { useState } from \"react\";\r\nimport { PageHeader, Button, Tooltip, Avatar, Layout, Tabs, Row, Col } from \"antd\";\r\nimport { history } from \"../../history\";\r\nimport \"./index.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { socket } from \"../../api\";\r\nimport { logout } from \"../../actions/user-actions\";\r\nimport InviteModal from \"./../invite-modal/index\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\nconst mapDispatchToProps = { logout };\r\n\r\nconst HeaderCustom = (props) =>\r\n{\r\n  const [activeKey, setActiveKey] = useState(\"home\");\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  const handleLogoutClick = () =>\r\n  {\r\n    socket.emit(\"logout\", {});\r\n    props.logout();\r\n    localStorage.removeItem(\"token\");\r\n    history.push(\"/home\");\r\n  };\r\n\r\n  const handleLoginClick = () =>\r\n  {\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  const handleRegisterClick = () =>\r\n  {\r\n    history.push(\"/register\");\r\n  };\r\n\r\n  const logout = [\r\n    <Button danger onClick={handleLogoutClick}>\r\n      Logout\r\n    </Button>,\r\n  ];\r\n  const loginAndRegister = [\r\n    <Row gutter={15} align=\"middle\">\r\n      <Col>\r\n        <Button type=\"primary\" onClick={handleRegisterClick}>\r\n          Đăng ký\r\n        </Button>\r\n      </Col>\r\n      <Col>\r\n        <Button onClick={handleLoginClick}>Đăng nhập</Button>\r\n      </Col>\r\n    </Row>,\r\n  ];\r\n  const content = props.token ? logout : loginAndRegister;\r\n\r\n  return (\r\n    <Layout.Header>\r\n      <PageHeader\r\n        className=\"header\"\r\n        ghost={false}\r\n        style={{ zIndex: \"1\" }}\r\n        onBack={() => window.history.back()}\r\n        title=\"Title\"\r\n        subTitle=\"This is a subtitle\"\r\n        extra={[\r\n          <Row gutter={45} align=\"middle\">\r\n            {props.roomJoined && props.token ? (\r\n              <Row gutter={45}>\r\n                <Col>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    onClick={() =>\r\n                    {\r\n                      setModalOpen(!modalOpen);\r\n                    }}\r\n                  >\r\n                    Mời\r\n        </Button>\r\n                </Col>\r\n              </Row>\r\n\r\n\r\n            ) : \"\"}\r\n            {props.roomJoined ? \"\" : (\r\n              <Col style={{ margin: \"auto\" }}>\r\n                <Tabs\r\n                  style={{ marginTop: \"15px\" }}\r\n                  activeKey={activeKey}\r\n                  centered\r\n                  size=\"large\"\r\n                  onTabClick={(key) =>\r\n                  {\r\n                    setActiveKey(key);\r\n                    history.push(\"/\" + key);\r\n                  }}\r\n                >\r\n                  <TabPane tab=\"Tham gia\" key=\"home\" />\r\n                  <TabPane tab=\"Phòng chơi\" key=\"rooms\" />\r\n                  {props.token ? <><TabPane tab=\"Xếp hạng\" key=\"leaderboard\" />\r\n                    <TabPane tab=\"Lịch sử\" key=\"history\" /> </>\r\n                    : \"\"}\r\n                </Tabs>\r\n              </Col>\r\n            )}\r\n            <Col>{content}</Col>\r\n          </Row>,\r\n        ]}\r\n      ></PageHeader>\r\n      <InviteModal\r\n        modalOpen={modalOpen}\r\n        onClose={() =>\r\n        {\r\n          setModalOpen(!modalOpen);\r\n        }}\r\n      />\r\n    </Layout.Header>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) =>\r\n{\r\n  const { token } = state.user;\r\n  const { roomJoined } = state.header;\r\n  return { token, roomJoined };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderCustom);\r\n","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\api\\index.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\actions\\header-action.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\components\\room-item\\index.js",["195","196"],"D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\components\\quick-join-button\\index.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\components\\leaderboard-row\\index.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\components\\move\\index.js",["197"],"import\r\n{\r\n  Avatar,\r\n\r\n\r\n\r\n  Comment, Tooltip\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport \"./index.css\";\r\n\r\nconst Move = (props) =>\r\n{\r\n  return (\r\n    <Comment\r\n      className=\"move\"\r\n      author={<a>Han Solo</a>}\r\n      avatar={\r\n        <Avatar\r\n          src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n          alt=\"Han Solo\"\r\n        />\r\n      }\r\n      content={<p>{props.comment ? props.comment : \"Di chuyển tới (1,3)\"}</p>}\r\n      datetime={\r\n        <Tooltip title={moment().format(\"YYYY-MM-DD HH:mm:ss\")}>\r\n          <span>{moment().fromNow()}</span>\r\n        </Tooltip>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default Move;\r\n","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\components\\game\\index.js",["198","199","200","201","202"],"import { React, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { socket } from \"../../api\";\r\nimport Board from \"../../components/board/index\";\r\nimport { Col, Row, Statistic } from 'antd';\r\nimport \"./index.css\";\r\nimport Move from './../move/index';\r\n\r\n\r\nfunction Game(props)\r\n{\r\n  const token = localStorage.getItem(\"token\");\r\n  const _history = useHistory();\r\n  const urlToken = _history.location.pathname.split(\"/\");\r\n  const roomIdT = urlToken[urlToken.length - 1];\r\n  const [isFinish, setIsFinish] = useState(false);\r\n  const [isMyTurn, setIsMyTurn] = useState(true);\r\n  //const [turnName, setTurnName] = useState(props.turnName);\r\n  const [state, setState] = useState({\r\n    squares: initMatrix(props.size),\r\n    lastMove: -1,\r\n  });\r\n  const username = props.Username;\r\n  const sizeBoard = props.size;\r\n  const turnName = props.TurnName;\r\n\r\n  useEffect(() =>\r\n  {\r\n    socket.on(\"sendMove\", (response) =>\r\n    {\r\n      // console.log(\" ON sendMove ---- Opponent username:\", response.username);\r\n      // console.log(\" ON sendMove ---- Opponent turnname:\", response.opponentTurnName);\r\n      if (response.username !== username && isFinish === false)\r\n      {\r\n        let squares = state.squares;\r\n        const i = Math.floor(response.move / sizeBoard);\r\n        const j = response.move % sizeBoard;\r\n        squares[i][j] = response.opponentTurnName;\r\n        setState({\r\n          squares: squares,\r\n          lastMove: response.move,\r\n        });\r\n        setIsMyTurn(true);\r\n        if (calculateWinner(state.squares, state.lastMove))\r\n        {\r\n          setIsFinish(true);\r\n        }\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const sendMove = async (move, opponentTurnName) =>\r\n  {\r\n    socket.emit(\"sendMove\", { roomIdT, move, token, opponentTurnName });\r\n  };\r\n\r\n  const handleClick = (i) =>\r\n  {\r\n    let squares = state.squares;\r\n    let x = Math.floor(i / squares[0].length);\r\n    let y = i % squares[0].length;\r\n    if (\r\n      !isMyTurn ||\r\n      isFinish ||\r\n      calculateWinner(state.squares, state.lastMove) ||\r\n      squares[x][y]\r\n    )\r\n    {\r\n      return;\r\n    }\r\n    squares[x][y] = turnName;\r\n    setState({\r\n      squares,\r\n      lastMove: i,\r\n    });\r\n    setIsMyTurn(false);\r\n    if (calculateWinner(squares, i))\r\n    {\r\n      setIsFinish(true);\r\n    }\r\n    sendMove(i, turnName);\r\n  };\r\n\r\n  // const winner = calculateWinner(state.squares, state.lastMove);\r\n  // let status;\r\n  // if (winner) {\r\n  //   status = \"Winner: \" + winner;\r\n  // } else {\r\n  //   if (isFull(state.squares)) status = \"### DRAW ###\";\r\n  //   else {\r\n  //     var opponentTurnName = turnName === \"X\" ? \"O\" : \"X\";\r\n  //     status = \"Next player: \" + (isMyTurn ? turnName : opponentTurnName);\r\n  //   }\r\n  // }\r\n  return (\r\n    <Col className=\"game-area\">\r\n      <Board\r\n        squares={state.squares}\r\n        onClick={(i) => handleClick(i)}\r\n        size={props.size}\r\n      />\r\n    </Col>\r\n  );\r\n}\r\n\r\nfunction calculateWinner(squares, lastMove)\r\n{\r\n  if (lastMove < 0) return null;\r\n  var i = Math.floor(lastMove / squares[0].length);\r\n  var j = lastMove % squares[i].length;\r\n  var prevTurn = squares[i][j];\r\n  console.log(\"CAL WINNER:\", checkWin(squares, i, j));\r\n  if (checkWin(squares, i, j)) return prevTurn;\r\n  return null;\r\n}\r\n\r\nfunction isValidCord(sizeBoard, x, y)\r\n{\r\n  return !(x < 0 || x >= sizeBoard || y < 0 || y >= sizeBoard);\r\n}\r\n\r\n// i,j là nước mới đánh\r\n// return true khi nước cờ (i,j) dành chiến thắng\r\n//        false khi chưa ai thắng\r\nfunction checkWin(squares, i, j)\r\n{\r\n  var prevTurn = squares[i][j];\r\n  var count = 1;\r\n  var x = i;\r\n  var y = j;\r\n\r\n  // Thứ tự hướng duyệt:\r\n  // 1. dọc : xuống, lên\r\n  // 2. ngang: xuống, lên\r\n  // 3. chéo chính: xuống, lên\r\n  // 4. chéo phụ: xuống , lên\r\n  var dX = [0, 0, 1, -1, 1, -1, -1, 1];\r\n  var dY = [1, -1, 0, 0, 1, -1, 1, -1];\r\n\r\n  // k= 0,1  --> duyệt dọc\r\n  // k= 2,3  --> duyệt ngang\r\n  // k= 4,5  --> duyệt chéo chính\r\n  // k= 6,7  --> duyệt chéo phụ\r\n  for (var k = 0; k < dX.length; ++k)\r\n  {\r\n    // k chẵn thì reset biến count\r\n    // ví dụ k= 0; k= 1 thì vẫn là duyệt trên 1 cột nên count giữ nguyên để phía dưới cộng dồn\r\n    if (k % 2 === 0)\r\n    {\r\n      count = 1;\r\n    }\r\n\r\n    while (\r\n      isValidCord(squares[0].length, x + dX[k], y + dY[k]) &&\r\n      squares[(x += dX[k])][(y += dY[k])] === prevTurn\r\n    )\r\n    {\r\n      ++count;\r\n      if (count === 5)\r\n      {\r\n        return true;\r\n      }\r\n    }\r\n    // đặt lại giá trị ban đầu để duyệt theo hướng khác\r\n    x = i;\r\n    y = j;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction isFull(squares)\r\n{\r\n  for (let i = 0; i < squares[0].length; i++)\r\n  {\r\n    for (let j = 0; j < squares[0].length; j++)\r\n    {\r\n      if (squares[i][j]) return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\nfunction initMatrix(size)\r\n{\r\n  var matrix = [];\r\n  for (var i = 0; i < size; i++)\r\n  {\r\n    matrix[i] = [];\r\n    for (var j = 0; j < size; j++)\r\n    {\r\n      matrix[i][j] = null;\r\n    }\r\n  }\r\n  return matrix;\r\n}\r\nexport default Game;\r\n","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\components\\chat-messages\\index.js",["203","204"],"import\r\n{\r\n  Avatar,\r\n  Col,\r\n  Row,\r\n  Comment, Tooltip\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\n\r\nconst ChatMessage = (props) =>\r\n{\r\n  return (\r\n    <Row>\r\n\r\n      <Comment\r\n        author={<a>{props.username}</a>}\r\n        avatar={\r\n          <Avatar\r\n            src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n            alt=\"Han Solo\"\r\n          />\r\n        }\r\n        content={\r\n          <p>\r\n            {props.content}\r\n          </p>\r\n        }\r\n        datetime={\r\n          <Tooltip title={moment().format(\"YYYY-MM-DD HH:mm:ss\")}>\r\n            <span>{moment().fromNow()}</span>\r\n          </Tooltip>\r\n        }\r\n      />\r\n    </Row>\r\n\r\n  );\r\n};\r\n\r\nexport default ChatMessage;\r\n","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\containers\\homepage\\components\\online-users.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\containers\\homepage\\components\\create-room-modal.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\containers\\homepage\\components\\enter-password-modal.js",["205","206","207","208"],"import { useState } from 'react';\r\nimport callServer from './../../../utils/NetworkUtils';\r\nimport \r\n{\r\n    Button,\r\n    Col,\r\n    Form,\r\n    Input,\r\n    Modal,\r\n    Row\r\n} from \"antd\";\r\nconst EnterPasswordModal = (props) =>\r\n{\r\n\r\n    const handleOk = () =>\r\n    {\r\n        props.setPasswordModalVisible(false);\r\n    };\r\n\r\n    const handleCancel = () =>\r\n    {\r\n        props.setPasswordModalVisible(false);\r\n    };\r\n\r\n    return (<Modal\r\n        centered\r\n        footer={false}\r\n        visible={props.passwordModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n    >\r\n        <div className=\"board-modal\">\r\n            <h1>Nhập mật khẩu</h1>\r\n\r\n            <Form\r\n                onFinish={props.handleEnterPassword}\r\n                className=\"board-form\"\r\n            >\r\n                <Form.Item\r\n                    style={{ marginTop: \"15px\" }}\r\n                    name=\"roomPassword\"\r\n                    rules={[{ required: true, message: \"Vui lòng nhập mật khẩu!\" }]}\r\n                >\r\n                    <Input className=\"board-input\" placeholder=\"Mật khẩu\" type=\"password\" />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button\r\n                        style={{ marginBottom: \"15px\" }}\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                    >\r\n                        Xác nhận\r\n              </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    </Modal>)\r\n}\r\n\r\nexport default EnterPasswordModal;","D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\components\\invite-modal\\index.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\components\\online-user\\index.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\components\\board\\index.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\components\\square\\index.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\components\\leaderboard-item\\index.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\WEBFIN-UserClient\\src\\utils\\NetwordUtils2.js",[],{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","severity":1,"message":"214","line":5,"column":11,"nodeType":"215","messageId":"216","endLine":5,"endColumn":19},{"ruleId":"217","severity":1,"message":"218","line":28,"column":6,"nodeType":"219","endLine":28,"endColumn":8,"suggestions":"220"},{"ruleId":"213","severity":1,"message":"221","line":2,"column":31,"nodeType":"215","messageId":"216","endLine":2,"endColumn":39},{"ruleId":"222","severity":1,"message":"223","line":172,"column":11,"nodeType":"224","endLine":172,"endColumn":105},{"ruleId":"213","severity":1,"message":"225","line":1,"column":27,"nodeType":"215","messageId":"216","endLine":1,"endColumn":36},{"ruleId":"213","severity":1,"message":"226","line":7,"column":10,"nodeType":"215","messageId":"216","endLine":7,"endColumn":16},{"ruleId":"217","severity":1,"message":"218","line":19,"column":6,"nodeType":"219","endLine":19,"endColumn":8,"suggestions":"227"},{"ruleId":"217","severity":1,"message":"228","line":27,"column":6,"nodeType":"219","endLine":27,"endColumn":8,"suggestions":"229"},{"ruleId":"217","severity":1,"message":"218","line":39,"column":6,"nodeType":"219","endLine":39,"endColumn":8,"suggestions":"230"},{"ruleId":"213","severity":1,"message":"231","line":4,"column":10,"nodeType":"215","messageId":"216","endLine":4,"endColumn":20},{"ruleId":"217","severity":1,"message":"232","line":67,"column":6,"nodeType":"219","endLine":67,"endColumn":8,"suggestions":"233"},{"ruleId":"217","severity":1,"message":"234","line":21,"column":6,"nodeType":"219","endLine":21,"endColumn":8,"suggestions":"235"},{"ruleId":"213","severity":1,"message":"236","line":2,"column":30,"nodeType":"215","messageId":"216","endLine":2,"endColumn":37},{"ruleId":"213","severity":1,"message":"237","line":2,"column":39,"nodeType":"215","messageId":"216","endLine":2,"endColumn":45},{"ruleId":"213","severity":1,"message":"238","line":1,"column":16,"nodeType":"215","messageId":"216","endLine":1,"endColumn":24},{"ruleId":"213","severity":1,"message":"225","line":1,"column":26,"nodeType":"215","messageId":"216","endLine":1,"endColumn":35},{"ruleId":"222","severity":1,"message":"239","line":18,"column":15,"nodeType":"224","endLine":18,"endColumn":18},{"ruleId":"213","severity":1,"message":"240","line":5,"column":15,"nodeType":"215","messageId":"216","endLine":5,"endColumn":18},{"ruleId":"213","severity":1,"message":"241","line":5,"column":20,"nodeType":"215","messageId":"216","endLine":5,"endColumn":29},{"ruleId":"213","severity":1,"message":"242","line":7,"column":8,"nodeType":"215","messageId":"216","endLine":7,"endColumn":12},{"ruleId":"217","severity":1,"message":"243","line":50,"column":6,"nodeType":"219","endLine":50,"endColumn":8,"suggestions":"244"},{"ruleId":"213","severity":1,"message":"245","line":171,"column":10,"nodeType":"215","messageId":"216","endLine":171,"endColumn":16},{"ruleId":"213","severity":1,"message":"246","line":4,"column":3,"nodeType":"215","messageId":"216","endLine":4,"endColumn":6},{"ruleId":"222","severity":1,"message":"239","line":17,"column":17,"nodeType":"224","endLine":17,"endColumn":20},{"ruleId":"213","severity":1,"message":"238","line":1,"column":10,"nodeType":"215","messageId":"216","endLine":1,"endColumn":18},{"ruleId":"213","severity":1,"message":"247","line":2,"column":8,"nodeType":"215","messageId":"216","endLine":2,"endColumn":18},{"ruleId":"213","severity":1,"message":"246","line":6,"column":5,"nodeType":"215","messageId":"216","endLine":6,"endColumn":8},{"ruleId":"213","severity":1,"message":"240","line":10,"column":5,"nodeType":"215","messageId":"216","endLine":10,"endColumn":8},"no-native-reassign",["248"],"no-negated-in-lhs",["249"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["250"],"'Checkbox' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","'socket' is defined but never used.",["251"],"React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["252"],["253"],"'useHistory' is defined but never used.","React Hook useEffect has missing dependencies: 'messages', 'props', 'roomId', and 'token'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["254"],"React Hook useEffect has a missing dependency: 'waitingLoading'. Either include it or remove the dependency array. You can also do a functional update 'setWaitingLoading(w => ...)' if you only need 'waitingLoading' in the 'setWaitingLoading' call.",["255"],"'Tooltip' is defined but never used.","'Avatar' is defined but never used.","'useState' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Row' is defined but never used.","'Statistic' is defined but never used.","'Move' is defined but never used.","React Hook useEffect has missing dependencies: 'isFinish', 'sizeBoard', 'state.lastMove', 'state.squares', and 'username'. Either include them or remove the dependency array.",["256"],"'isFull' is defined but never used.","'Col' is defined but never used.","'callServer' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"257","fix":"258"},{"desc":"257","fix":"259"},{"desc":"260","fix":"261"},{"desc":"257","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},"Update the dependencies array to be: [props]",{"range":"269","text":"270"},{"range":"271","text":"270"},"Update the dependencies array to be: [token]",{"range":"272","text":"273"},{"range":"274","text":"270"},"Update the dependencies array to be: [messages, props, roomId, token]",{"range":"275","text":"276"},"Update the dependencies array to be: [waitingLoading]",{"range":"277","text":"278"},"Update the dependencies array to be: [isFinish, sizeBoard, state.lastMove, state.squares, username]",{"range":"279","text":"280"},[805,807],"[props]",[565,567],[804,806],"[token]",[1528,1530],[1926,1928],"[messages, props, roomId, token]",[838,840],"[waitingLoading]",[1661,1663],"[isFinish, sizeBoard, state.lastMove, state.squares, username]"]