[{"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\index.js":"1","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\App.js":"2","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\reportWebVitals.js":"3","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\store\\index.js":"4","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\history.js":"5","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\actions\\user-actions.js":"6","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\auth-redirect\\index.js":"7","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\login-form\\index.js":"8","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\register-form\\index.js":"9","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\the-layout\\index.js":"10","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\reducers\\user-reducer.js":"11","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\reducers\\header-reducer.js":"12","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\recovery-password\\index.js":"13","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\verify-account\\index.js":"14","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\constants\\action-types.js":"15","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\utils\\NetworkUtils.js":"16","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\utils\\NotificationUtils.js":"17","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\room\\index.js":"18","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\homepage\\index.js":"19","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\rooms\\index.js":"20","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\leaderboard\\index.js":"21","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\user-profile\\index.js":"22","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\history\\index.js":"23","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\header\\index.js":"24","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\api\\index.js":"25","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\actions\\header-action.js":"26","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\utils\\NetwordUtils2.js":"27","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\quick-join-button\\index.js":"28","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\chat-messages\\index.js":"29","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\game\\index.js":"30","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\timer\\index.js":"31","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\move\\index.js":"32","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\homepage\\components\\create-room-modal.js":"33","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\homepage\\components\\enter-password-modal.js":"34","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\homepage\\components\\online-users.js":"35","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\room-item\\index.js":"36","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\leaderboard-row\\index.js":"37","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\invite-modal\\index.js":"38","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\board\\index.js":"39","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\leaderboard-item\\index.js":"40","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\online-user\\index.js":"41","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\square\\index.js":"42","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\confirm-invitation-modal\\index.js":"43","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\inviter\\index.js":"44"},{"size":574,"mtime":1609688881903,"results":"45","hashOfConfig":"46"},{"size":1782,"mtime":1610276789767,"results":"47","hashOfConfig":"46"},{"size":362,"mtime":1609688881906,"results":"48","hashOfConfig":"46"},{"size":384,"mtime":1609943020884,"results":"49","hashOfConfig":"46"},{"size":94,"mtime":1609688881902,"results":"50","hashOfConfig":"46"},{"size":518,"mtime":1610276789769,"results":"51","hashOfConfig":"46"},{"size":630,"mtime":1610276789780,"results":"52","hashOfConfig":"46"},{"size":5562,"mtime":1610276789784,"results":"53","hashOfConfig":"46"},{"size":4913,"mtime":1610276789786,"results":"54","hashOfConfig":"46"},{"size":2468,"mtime":1610276789788,"results":"55","hashOfConfig":"46"},{"size":873,"mtime":1610276789790,"results":"56","hashOfConfig":"46"},{"size":554,"mtime":1609943020879,"results":"57","hashOfConfig":"46"},{"size":2616,"mtime":1610276789785,"results":"58","hashOfConfig":"46"},{"size":1185,"mtime":1610276789789,"results":"59","hashOfConfig":"46"},{"size":346,"mtime":1610276789779,"results":"60","hashOfConfig":"46"},{"size":426,"mtime":1609688881909,"results":"61","hashOfConfig":"46"},{"size":275,"mtime":1609688881910,"results":"62","hashOfConfig":"46"},{"size":7451,"mtime":1610279098367,"results":"63","hashOfConfig":"46"},{"size":5367,"mtime":1610276789783,"results":"64","hashOfConfig":"46"},{"size":3861,"mtime":1610276789787,"results":"65","hashOfConfig":"46"},{"size":2226,"mtime":1610276789783,"results":"66","hashOfConfig":"46"},{"size":3161,"mtime":1610276789789,"results":"67","hashOfConfig":"46"},{"size":2056,"mtime":1610276789780,"results":"68","hashOfConfig":"46"},{"size":4455,"mtime":1610276789771,"results":"69","hashOfConfig":"46"},{"size":111,"mtime":1609688881859,"results":"70","hashOfConfig":"46"},{"size":247,"mtime":1609943020793,"results":"71","hashOfConfig":"46"},{"size":332,"mtime":1610037120241,"results":"72","hashOfConfig":"46"},{"size":1066,"mtime":1610276789776,"results":"73","hashOfConfig":"46"},{"size":749,"mtime":1609943020805,"results":"74","hashOfConfig":"46"},{"size":5177,"mtime":1610276789771,"results":"75","hashOfConfig":"46"},{"size":1605,"mtime":1610276776568,"results":"76","hashOfConfig":"46"},{"size":703,"mtime":1609943020816,"results":"77","hashOfConfig":"46"},{"size":3023,"mtime":1610276789781,"results":"78","hashOfConfig":"46"},{"size":1568,"mtime":1610037120232,"results":"79","hashOfConfig":"46"},{"size":682,"mtime":1610276789782,"results":"80","hashOfConfig":"46"},{"size":4069,"mtime":1610276789777,"results":"81","hashOfConfig":"46"},{"size":1109,"mtime":1610276789774,"results":"82","hashOfConfig":"46"},{"size":943,"mtime":1610276789772,"results":"83","hashOfConfig":"46"},{"size":786,"mtime":1610037120220,"results":"84","hashOfConfig":"46"},{"size":1268,"mtime":1610037120223,"results":"85","hashOfConfig":"46"},{"size":1598,"mtime":1610276789775,"results":"86","hashOfConfig":"46"},{"size":210,"mtime":1609688881882,"results":"87","hashOfConfig":"46"},{"size":2846,"mtime":1610276789770,"results":"88","hashOfConfig":"46"},{"size":1327,"mtime":1610276789773,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"bk8xc",{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"92"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"92"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"92"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"92"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"92"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"92"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"92"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"92"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"92"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"92"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"92"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"92"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"92"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"92"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"92"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"92"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"92"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\index.js",[],["196","197"],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\App.js",["198","199"],"import React from 'react';\r\nimport\r\n{\r\n  Route, Router,\r\n  Switch, Redirect\r\n} from 'react-router-dom';\r\nimport './App.css';\r\nimport AuthRedirect from './containers/auth-redirect/index';\r\nimport LoginForm from './containers/login-form/index';\r\nimport RecoveryPassword from './containers/recovery-password';\r\nimport RegisterForm from './containers/register-form/index';\r\nimport Verify from './containers/verify-account';\r\nimport { history } from './history';\r\nimport LayoutCustom from './containers/the-layout/index';\r\nimport { connect } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { login } from './actions/user-actions';\r\nimport { socket } from './api/index';\r\nimport { onlineUsersChanged } from './actions/user-actions'\r\n\r\n\r\nfunction App(props)\r\n{\r\n  useEffect(() =>\r\n  {\r\n\r\n    socket.on(\"onlineUsersChanged\", (data) =>\r\n    {\r\n      props.onlineUsersChanged(data.onlineUsers);\r\n    });\r\n\r\n    const token = localStorage.getItem('token');\r\n    if (token)\r\n    {\r\n      props.login(token);\r\n      socket.emit(\"login\", { token: token });\r\n    }\r\n  }, [])\r\n  return (\r\n    <Router history={history}>\r\n      <Switch>\r\n        <Route exact path=\"/auth/:token\" component={AuthRedirect} />\r\n        <Route exact path=\"/login\" component={LoginForm} />\r\n        <Route exact path=\"/register\" component={RegisterForm} />\r\n        <Route exact path=\"/verify\" component={Verify} />\r\n        <Route exact path=\"/recovery\" component={RecoveryPassword} />\r\n        <Route path=\"/\" component={LayoutCustom} />\r\n      </Switch>\r\n    </Router>\r\n\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) =>\r\n{\r\n  return {\r\n    token: state.user.token,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = { login, onlineUsersChanged };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\reportWebVitals.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\store\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\history.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\actions\\user-actions.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\auth-redirect\\index.js",["200","201"],"import React, { useEffect } from \"react\";\r\nimport { socket } from \"../../api\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/user-actions\";\r\n\r\nconst mapDispatchToProps = { login };\r\nconst mapStateToProps = (state) =>\r\n{\r\n  const { token } = state.user;\r\n  return { token };\r\n};\r\n\r\nconst AuthRedirect = (props) =>\r\n{\r\n  useEffect(() =>\r\n  {\r\n    const token = props.match.params.token;\r\n    localStorage.setItem(\"token\", token);\r\n    props.login(token);\r\n    props.history.push(\"/home\");\r\n  }, []);\r\n  return <></>;\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthRedirect);\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\login-form\\index.js",["202","203","204"],"import React, { useEffect, useState } from \"react\";\r\nimport { Form, Input, Button, Checkbox, Divider, Spin, Modal } from \"antd\";\r\nimport\r\n{\r\n  UserOutlined,\r\n  LockOutlined,\r\n  FacebookFilled,\r\n  GoogleCircleFilled,\r\n} from \"@ant-design/icons\";\r\nimport callServer from \"../../utils/NetworkUtils\";\r\nimport showNotification from \"../../utils/NotificationUtils\";\r\nimport { socket } from \"../../api\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/user-actions\";\r\nimport \"./index.css\";\r\n\r\nconst mapDispatchToProps = { login };\r\nconst mapStateToProps = (state) =>\r\n{\r\n  const { token } = state.user;\r\n  return { token };\r\n};\r\n\r\nconst LoginForm = (props) =>\r\n{\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const [recoveryPasswordUsername, setRecoveryPasswordUsername] = useState(\"\");\r\n\r\n  const showModal = () =>\r\n  {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = async () =>\r\n  {\r\n    const data = { username: recoveryPasswordUsername };\r\n    const result = await callServer(process.env.REACT_APP_HOST_NAME + '/auth/recoveryrequest', \"post\", data);\r\n    if (result.auth)\r\n    {\r\n      showNotification(\"error\", result.message);\r\n      setIsModalVisible(false);\r\n    } else\r\n    {\r\n      showNotification(\"error\", result.message);\r\n    }\r\n\r\n  };\r\n\r\n  const handleCancel = () =>\r\n  {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleRecoveryUsername = (e) =>\r\n  {\r\n    setRecoveryPasswordUsername(e.target.value);\r\n  }\r\n\r\n  const onFinish = async (values) =>\r\n  {\r\n    //console.log(\"Received values of form: \", values);\r\n    setIsLoading(true);\r\n    const data = {\r\n      ...values,\r\n    };\r\n\r\n    const result = await callServer(\r\n      process.env.REACT_APP_HOST_NAME + \"/auth/login\",\r\n      \"post\",\r\n      data\r\n    );\r\n    //console.log(result);\r\n    if (result.auth)\r\n    {\r\n      setIsLoading(false);\r\n      localStorage.setItem(\"token\", result.accessToken);\r\n      props.login(result.accessToken);\r\n      socket.emit(\"login\", { token: result.accessToken });\r\n      props.history.push(\"/home\");\r\n    } else\r\n    {\r\n      setIsLoading(false);\r\n      showNotification(\"error\", result.message);\r\n    }\r\n  };\r\n\r\n  const handleRegisterClick = () =>\r\n  {\r\n    props.history.push(\"/register\");\r\n  };\r\n\r\n  const handleFacebookLogin = () =>\r\n  {\r\n    window.open(process.env.REACT_APP_HOST_NAME + \"/auth/facebook\", \"_self\");\r\n  };\r\n\r\n  const handleGoogleLogin = () =>\r\n  {\r\n    window.open(process.env.REACT_APP_HOST_NAME + \"/auth/google\", \"_self\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h1 style={{ textAlign: \"center\", fontSize: \"32px\" }}>Login</h1>\r\n      <Form\r\n        name=\"normal_login\"\r\n        className=\"login-form\"\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n      >\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={handleGoogleLogin}\r\n          danger\r\n          className=\"login-form-button\"\r\n          style={{ margin: \"10px 0px\" }}\r\n          icon={<GoogleCircleFilled />}\r\n        >\r\n          Đăng nhập bằng Google\r\n        </Button>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={handleFacebookLogin}\r\n          className=\"login-form-button\"\r\n          style={{ margin: \"10px 0px\" }}\r\n          icon={<FacebookFilled />}\r\n        >\r\n          Đăng nhập bằng Facebook\r\n        </Button>\r\n        <Divider />\r\n        <Form.Item\r\n          name=\"username\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Username!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Tên tài khoản\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Password!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            type=\"password\"\r\n            placeholder=\"Mật khẩu\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n\r\n          <a href=\"\" className=\"login-form-forgot\" onClick={(e) => { e.preventDefault(); showModal() }}>\r\n            Quên mật khẩu\r\n          </a>\r\n        </Form.Item>\r\n        {isLoading ? (\r\n          <div className=\"loading-spinner\">\r\n            <Spin size=\"large\" />\r\n          </div>\r\n        ) : null}\r\n        <Form.Item className=\"button-row\">\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            Đăng nhập\r\n          </Button>\r\n          <div style={{ margin: \"15px 0px\", textAlign: \"center\" }}>Hoặc</div>\r\n          <Button type=\"dashed\" onClick={handleRegisterClick}>\r\n            Đăng ký\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n      <>\r\n        <Modal\r\n          centered\r\n          title=\"Khôi phục mật khẩu\"\r\n          visible={isModalVisible}\r\n          onOk={handleOk}\r\n          onCancel={handleCancel}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Username\"\r\n            onChange={e => handleRecoveryUsername(e)}\r\n          />\r\n        </Modal>\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\register-form\\index.js",["205","206"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Input, Button, DatePicker, Spin } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport \"./index.css\";\r\nimport callServer from \"../../utils/NetworkUtils\";\r\nimport showNotification from \"../../utils/NotificationUtils\";\r\nimport { socket } from \"../../api\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/user-actions\";\r\n\r\nconst mapDispatchToProps = { login };\r\nconst mapStateToProps = (state) =>\r\n{\r\n  const { token } = state.user;\r\n  return { token };\r\n};\r\n\r\nconst RegisterForm = (props) =>\r\n{\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const onFinish = async (values) =>\r\n  {\r\n    //console.log(\"Received values of form: \", values);\r\n    setIsLoading(true);\r\n    if (values.password !== values.passwordConfirm)\r\n    {\r\n      showNotification(\"error\", \"Password does not match!\");\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      ...values,\r\n      role: 0,\r\n      isCreatedAt: new Date(),\r\n    };\r\n\r\n    const result = await callServer(\r\n      process.env.REACT_APP_HOST_NAME + \"/auth/signup\",\r\n      \"post\",\r\n      data\r\n    );\r\n    if (result.auth)\r\n    {\r\n      setIsLoading(false);\r\n      // localStorage.setItem(\"token\", result.accessToken);\r\n      // props.login(result.accessToken);\r\n      // socket.emit(\"login\", { token: result.accessToken });\r\n      // props.history.push(\"/home\");\r\n      showNotification(\"success\", result.message);\r\n    } else\r\n    {\r\n      setIsLoading(false);\r\n      showNotification(\"error\", result.message);\r\n    }\r\n  };\r\n\r\n  const handleLoginClick = () =>\r\n  {\r\n    props.history.push(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-container\">\r\n      <h1 style={{ textAlign: \"center\", margin: \"40px 0px\", fontSize: \"32px\" }}>\r\n        Register\r\n      </h1>\r\n      <Form\r\n        name=\"normal_register\"\r\n        className=\"register-form\"\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n      >\r\n        <Form.Item\r\n          name=\"username\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Username!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Username\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"email\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Email!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Email\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"fullName\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your full name!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Full name\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"dob\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your DOB!\",\r\n            },\r\n          ]}\r\n        >\r\n          <DatePicker placeholder=\"Date of birth\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Password!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"passwordConfirm\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please confirm your Password!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n          />\r\n        </Form.Item>\r\n        {isLoading ? (\r\n          <div className=\"loading-spinner\">\r\n            <Spin size=\"large\" />\r\n          </div>\r\n        ) : null}\r\n        <Form.Item className=\"button-row\">\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"register-form-button\"\r\n          >\r\n            Register\r\n          </Button>\r\n\r\n          <div style={{ margin: \"15px 0px\", textAlign: \"center\" }}>Or</div>\r\n          <Button type=\"dashed\" onClick={handleLoginClick}>\r\n            Log in\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterForm);\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\the-layout\\index.js",["207"],"import { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Homepage from \"./../homepage/index\";\r\nimport Room from \"./../room/index\";\r\nimport Rooms from \"./../rooms/index\";\r\nimport HeaderCustom from \"./../../components/header/index\";\r\nimport Leaderboard from \"./../leaderboard/index\";\r\nimport History from \"./../history/index\";\r\nimport UserProfile from './../user-profile/index';\r\nimport { Layout } from 'antd';\r\nimport { socket } from './../../api/index';\r\nimport { useEffect } from 'react';\r\nimport showNotification from './../../utils/NotificationUtils';\r\nimport { connect } from 'react-redux';\r\nimport { setInvitations } from \"../../actions/user-actions\";\r\nimport callServer from './../../utils/NetworkUtils';\r\nimport QuickJoinButton from './../../components/quick-join-button/index';\r\n\r\nconst mapStateToProps = (state) =>\r\n{\r\n  return {\r\n    invitations: state.user.invitations,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = { setInvitations }\r\n\r\nlet tmpInvitations = [];\r\n\r\nconst LayoutCustom = (props) =>\r\n{\r\n\r\n\r\n  useEffect(() =>\r\n  {\r\n\r\n    const fetchInvitations = async () =>\r\n    {\r\n      const result = await callServer(process.env.REACT_APP_HOST_NAME + '/auth/invitations', 'post', {});\r\n      if (result.status)\r\n      {\r\n        tmpInvitations = result.data;\r\n        props.setInvitations(tmpInvitations);\r\n        //console.log(result.data);\r\n      }\r\n    }\r\n\r\n    fetchInvitations();\r\n\r\n    socket.on('newInvitation', (data) =>\r\n    {\r\n      data._id = '';\r\n      data.username = data.sender;\r\n\r\n      showNotification('info', \"Bạn nhận được lời mời từ \" + data.sender);\r\n\r\n      tmpInvitations.unshift(data);\r\n      props.setInvitations(tmpInvitations)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <HeaderCustom />\r\n      <QuickJoinButton />\r\n      <Layout.Content style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\r\n        <Switch>\r\n          <Route exact path=\"/home\" component={Homepage} />\r\n          <Route exact path=\"/rooms\" component={Rooms} />\r\n          <Route exact path=\"/room/:id\" component={Room} />\r\n          <Route exact path=\"/leaderboard\" component={Leaderboard} />\r\n          <Route exact path=\"/history\" component={History} />\r\n          <Route exact path=\"/profile\" component={UserProfile} />\r\n          <Redirect from=\"/\" to=\"/home\" />\r\n        </Switch>\r\n      </Layout.Content>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LayoutCustom);\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\reducers\\user-reducer.js",["208","209"],"import { USER_LOGIN, ONLINE_USERS_CHANGED, LOG_OUT, ADD_INVITATION, DELETE_INVITATION, SET_INVITATIONS } from \"../constants/action-types\";\r\n\r\nconst initialState = {\r\n\ttoken: \"\",\r\n\tonlineUsers: [],\r\n\tinvitations: [],\r\n};\r\n\r\nconst userReducer = (state = initialState, action) =>\r\n{\r\n\tswitch (action.type)\r\n\t{\r\n\t\tcase USER_LOGIN: {\r\n\t\t\tconst token = action.payload;\r\n\t\t\tconst newState = {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: token,\r\n\t\t\t};\r\n\t\t\treturn newState;\r\n\t\t}\r\n\t\tcase ONLINE_USERS_CHANGED: {\r\n\t\t\tconst newState = {\r\n\t\t\t\t...state,\r\n\t\t\t\tonlineUsers: action.payload,\r\n\t\t\t}\r\n\t\t\treturn newState;\r\n\t\t}\r\n\t\tcase LOG_OUT: {\r\n\t\t\tconst newState = {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: '',\r\n\t\t\t}\r\n\t\t\treturn newState;\r\n\t\t}\r\n\r\n\t\tcase SET_INVITATIONS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tinvitations: action.payload,\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n};\r\n\r\nexport default userReducer;\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\reducers\\header-reducer.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\recovery-password\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\verify-account\\index.js",["210"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport callServer from \"../../utils/NetworkUtils\";\r\nimport { Button } from \"antd\";\r\nconst Verify = (props) =>\r\n{\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const history = useHistory();\r\n  const token = history.location.search.split(\"?\")[1];\r\n  const handleBackToLogin = () =>\r\n  {\r\n    props.history.push(\"/login\");\r\n  };\r\n  const verifyStart = async (data) =>\r\n  {\r\n    setIsLoading(true);\r\n    const result = await callServer(\r\n      process.env.REACT_APP_HOST_NAME + \"/auth/verify\",\r\n      \"post\",\r\n      data\r\n    );\r\n    //console.log(result);\r\n    if (result.auth)\r\n    {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  useEffect(() =>\r\n  {\r\n    const data = { token: token };\r\n    verifyStart(data);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        <p>Verifying </p>\r\n      ) : (\r\n          <div>\r\n            <p>Verified</p>\r\n            <Button type=\"link\" onClick={() => handleBackToLogin()}>\r\n              Back to login\r\n          </Button>\r\n          </div>\r\n        )}\r\n      <h1>Verify Account</h1>\r\n    </div>\r\n  );\r\n};\r\nexport default Verify;\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\constants\\action-types.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\utils\\NetworkUtils.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\utils\\NotificationUtils.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\room\\index.js",["211"],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\homepage\\index.js",["212"],"import { EnterOutlined, EyeOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { Button, Col, Form, Input, Row } from \"antd\";\r\nimport { React, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport callServer from \"../../utils/NetworkUtils\";\r\nimport QuickJoinButton from \"./../../components/quick-join-button/index\";\r\nimport showNotification from './../../utils/NotificationUtils';\r\nimport CreateRoomModal from './components/create-room-modal';\r\nimport EnterPasswordModal from './components/enter-password-modal';\r\nimport OnlineUsers from './components/online-users';\r\nimport \"./index.css\";\r\n\r\nconst mapStateToProps = (state) =>\r\n{\r\n  const { onlineUsers, token } = state.user;\r\n  return { onlineUsers, token };\r\n};\r\n\r\nconst Homepage = (props) =>\r\n{\r\n  const [joinButtonLoading, setJoinButtonLoading] = useState(false);\r\n  const [observerButtonLoading, setObserveButtonLoading] = useState(false);\r\n  const [joinMode, setJoinMode] = useState('play')\r\n  const [isModalVisible, setModalVisible] = useState(false);\r\n  const [passwordModalVisible, setPasswordModalVisible] = useState(false);\r\n  const [roomPassword, setRoomPassword] = useState(\"\");\r\n  const [roomId, setRoomId] = useState(\"\");\r\n\r\n  const openCreateRoomModal = () =>\r\n  {\r\n    setModalVisible(true);\r\n  };\r\n\r\n  const handleJoinRoom = async (value) =>\r\n  {\r\n\r\n    if (joinMode === 'play')\r\n    {\r\n      setJoinButtonLoading(true);\r\n    } else setObserveButtonLoading(true);\r\n\r\n    //logged in and not logged in\r\n    //the first is logged in case\r\n    const data = { roomId: value.roomId, joinMode: joinMode };\r\n    const result = await callServer(\r\n      process.env.REACT_APP_HOST_NAME + \"/room/join\",\r\n      \"post\",\r\n      data\r\n    );\r\n    console.log(result);\r\n    if (result.auth)\r\n    {\r\n      // console.log(result.data._id);\r\n      if (result.data.password)\r\n      {\r\n        setRoomPassword(result.data.password);\r\n        setRoomId(result.data._id);\r\n        setPasswordModalVisible(true);\r\n      }\r\n      else props.history.push(`/room/${result.data._id}`);\r\n    }\r\n    else\r\n    {\r\n      showNotification(\"error\", \"Không tìm thấy phòng!\")\r\n    }\r\n\r\n    if (joinMode === 'play')\r\n    {\r\n      setJoinButtonLoading(false);\r\n    } else setObserveButtonLoading(false);\r\n  };\r\n\r\n  const handleEnterPassword = async (value) =>\r\n  {\r\n    if (value.roomPassword === roomPassword)\r\n    {\r\n      props.history.push(`/room/${roomId}`);\r\n    }\r\n    else\r\n    {\r\n      showNotification(\"error\", \"Sai mật khẩu!\")\r\n    }\r\n  }\r\n\r\n  const handleCreateRoom = async (values) =>\r\n  {\r\n    const data = { ...values };\r\n    // console.log(data);\r\n    const result = await callServer(\r\n      process.env.REACT_APP_HOST_NAME + \"/room/add\",\r\n      \"post\",\r\n      data\r\n    );\r\n    // console.log(result);\r\n    //Call API to create a room, after that, receive room id to go to /room?id={roomId response from server}\r\n    props.history.push(`/room/${result._id}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row style={{ marginTop: \"45px\" }}>\r\n        <h1 style={{ textAlign: \"center\", margin: \"auto\" }}>\r\n          Caro Online\r\n        </h1>\r\n      </Row>\r\n      <Row>\r\n        <Form onFinish={(e) => { handleJoinRoom(e) }}>\r\n          <Form.Item\r\n            name=\"roomId\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Vui lòng nhập Id phòng muốn tham gia\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              className=\"input\"\r\n              placeholder=\"ID của phòng muốn tham gia\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Row gutter={[16, 0]} style={{ marginTop: '15px' }} justify=\"center\">\r\n              {props.token ? <Col>\r\n                <Button\r\n                  loading={joinButtonLoading}\r\n                  htmlType=\"submit\"\r\n                  type=\"primary\"\r\n                  onClick={() => { setJoinMode('play') }}\r\n                  icon={<EnterOutlined />}\r\n                >\r\n                  Tham gia\r\n</Button>\r\n              </Col> : \"\"}\r\n              <Col>\r\n                <Button\r\n                  loading={observerButtonLoading}\r\n                  htmlType=\"submit\"\r\n                  icon={<EyeOutlined />}\r\n                  onClick={() => setJoinMode('observe')}\r\n                >\r\n                  Theo dõi\r\n</Button>\r\n              </Col>\r\n              {props.token ? <Col>\r\n                <Button\r\n                  type=\"dashed\"\r\n                  icon={<PlusOutlined />}\r\n                  onClick={openCreateRoomModal}\r\n                >\r\n                  Tạo phòng\r\n</Button>\r\n              </Col> : \"\"}\r\n            </Row>\r\n          </Form.Item>\r\n        </Form>\r\n      </Row>\r\n\r\n      {props.token ? <><h2 style={{ textAlign: \"center\", margin: \"30px auto\" }}>Đang online</h2>\r\n        <Row gutter={[16, 16]} className=\"avatar-row\" justify=\"center\">\r\n          <OnlineUsers onlineUsers={props.onlineUsers} />\r\n        </Row></> : \"\"}\r\n\r\n      <CreateRoomModal isModalVisible={isModalVisible} handleCreateRoom={handleCreateRoom} setModalVisible={setModalVisible} />\r\n      <EnterPasswordModal passwordModalVisible={passwordModalVisible} handleEnterPassword={handleEnterPassword} setPasswordModalVisible={setPasswordModalVisible} />\r\n\r\n    </div>\r\n  );\r\n};\r\nexport default connect(mapStateToProps)(Homepage);\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\rooms\\index.js",["213","214","215"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Row, Typography, Layout, Spin, Pagination } from \"antd\";\r\nimport QuickJoinButton from \"../../components/quick-join-button\";\r\nimport RoomItem from \"./../../components/room-item/index\";\r\nimport callServer from \"./../../utils/NetwordUtils2\";\r\nimport { chunk } from 'lodash';\r\n\r\nconst PERPAGE = 12;\r\n\r\nconst Rooms = (props) =>\r\n{\r\n  const [listRoom, setListRoom] = useState([]);\r\n\r\n  //Use for storing data from server\r\n  const [waitingRooms, setWaitingRooms] = useState([]);\r\n  const [ongoingRooms, setOngoingRooms] = useState([]);\r\n\r\n  //Use for pagination\r\n  const [currentWaitingRooms, setCurrentWaitingRooms] = useState([]);\r\n  const [currentOngoingRooms, setCurrentOngoingRooms] = useState([]);\r\n\r\n  const [currentWaitingPge, setCurrentWaitingPage] = useState(1);\r\n  const [currentOngoingPage, setCurrentOngoingPage] = useState(1);\r\n\r\n  const [waitingLoading, setWaitingLoading] = useState(true);\r\n\r\n  const handleWaitingRoomsPageChange = (number) =>\r\n  {\r\n    setCurrentWaitingRooms(chunk(waitingRooms, PERPAGE)[number - 1]);\r\n    setCurrentWaitingPage(number);\r\n  }\r\n\r\n  const handleOngoingRoomsPageChange = (number) =>\r\n  {\r\n    setCurrentOngoingRooms(chunk(ongoingRooms, PERPAGE)[number - 1]);\r\n    setCurrentOngoingPage(number);\r\n  }\r\n\r\n  //2 list. empty player B and have player B\r\n  useEffect(() =>\r\n  {\r\n    const getListRoom = async () =>\r\n    {\r\n      const response = await callServer(process.env.REACT_APP_HOST_NAME + '/room/', \"get\");\r\n      const data = await response.json();\r\n      // console.log(response);\r\n      // console.log(data.rooms);\r\n      setListRoom(chunk(data.rooms, PERPAGE));\r\n\r\n      //Placeholder for testing purpose, needs to redesign after api is complete\r\n      setWaitingRooms(data.rooms);\r\n      setOngoingRooms(data.rooms);\r\n\r\n      //Set pagination\r\n      setCurrentWaitingRooms(chunk(data.rooms, PERPAGE)[0]);\r\n      setCurrentOngoingRooms(chunk(data.rooms, PERPAGE)[0]);\r\n\r\n      setWaitingLoading(!waitingLoading);\r\n    };\r\n    getListRoom();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Layout.Content style={{ padding: \"150px 50px\", position: \"relative\" }}>\r\n        <Row justify=\"center\" align=\"middle\">\r\n          <Typography.Title level={2}>Đang đợi người chơi</Typography.Title>\r\n        </Row>\r\n\r\n        <Row\r\n          justify=\"center\"\r\n          align=\"middle\"\r\n          gutter={[30, 30]}\r\n          style={{ margin: \"30px 0px\" }}\r\n        >\r\n          {waitingLoading ? <Spin size=\"large\" /> : null}\r\n          {currentWaitingRooms.length > 0 ? currentWaitingRooms.map(item => (<RoomItem key={item.roomId} info={item} />)) : null}\r\n        </Row>\r\n\r\n        <Row justify=\"end\" style={{ margin: \"30px 0px\" }}>\r\n          <Pagination current={currentWaitingPge} hideOnSinglePage showSizeChanger={false} showLessItems showQuickJumper total={waitingRooms.length} responsive pageSize={PERPAGE} onChange={handleWaitingRoomsPageChange} />\r\n        </Row>\r\n\r\n        <Row justify=\"center\" align=\"middle\">\r\n          <Typography.Title level={2}>Đang diễn ra</Typography.Title>\r\n        </Row>\r\n\r\n        <Row\r\n          justify=\"center\"\r\n          align=\"middle\"\r\n          gutter={[30, 30]}\r\n          style={{ margin: \"30px 0px\" }}\r\n        >\r\n          {waitingLoading ? <Spin size=\"large\" /> : null}\r\n          {currentOngoingRooms.length > 0 ? currentOngoingRooms.map(item => (<RoomItem key={item.roomId} info={item} />)) : null}\r\n        </Row>\r\n\r\n        <Row justify=\"end\" style={{ margin: \"30px 0px\" }}>\r\n          <Pagination current={currentOngoingPage} hideOnSinglePage showSizeChanger={false} showLessItems showQuickJumper total={ongoingRooms.length} responsive pageSize={PERPAGE} onChange={handleOngoingRoomsPageChange} />\r\n        </Row>\r\n\r\n      </Layout.Content>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Rooms;\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\leaderboard\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\user-profile\\index.js",["216","217","218","219","220"],"import React, { useEffect, useState } from 'react';\r\nimport { Row, Col, Typography, Avatar } from \"antd\";\r\nimport callServer from '../../utils/NetwordUtils2';\r\nconst UserProfile = (props) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [profile, setProfile] = useState({});\r\n  const [historyGame, setHistoryHame] = useState([]);\r\n  useEffect(()=> {\r\n    const getUserProfile = async () => {\r\n      const response = await callServer(process.env.REACT_APP_HOST_NAME + '/auth/profile', \"get\");\r\n      if (response.status === 200) {\r\n        const data = await response.json();\r\n        console.log(data.account);\r\n        setProfile(data.account);\r\n        // console.log(profile);\r\n      } else {\r\n        const data = await response.json();\r\n        Notification('error', data.message);\r\n      }\r\n    }\r\n    const getHistory = async () => {\r\n\r\n    }\r\n    getUserProfile();\r\n  }, [])\r\n  return (\r\n    <div style={{ padding: \"0px 50px\", width: \"100vw\" }}>\r\n      <Row style={{ marginTop: \"30px\" }} justify=\"center\">\r\n        <Col>\r\n          <Typography.Title level={2}>Thông tin người chơi</Typography.Title>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row style={{ marginTop: \"30px\" }} justify=\"center\">\r\n        <Col>\r\n          <Avatar\r\n            size={64}\r\n            src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row style={{ marginTop: \"30px\" }} justify=\"center\">\r\n        <Col>\r\n          <Typography.Title level={4}>\r\n            {profile ? profile.fullName : \"Phan Nhật Vinh\"}\r\n          </Typography.Title>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row justify=\"center\">\r\n        <Col>\r\n          <Typography.Title level={5} style={{ fontWeight: \"300\" }}>\r\n            Tham gia ngày {profile ? profile.isCreatedAt : \"23/06/2077\"}\r\n          </Typography.Title>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row style={{ marginTop: \"30px\" }} justify=\"center\" gutter={60}>\r\n        <Col>\r\n          <Row justify=\"center\">\r\n            <Typography.Title level={4}>Số cúp</Typography.Title>\r\n          </Row>\r\n          <Row justify=\"center\">\r\n            <Typography.Title level={4} style={{ fontWeight: \"300\" }}>\r\n              {profile ? profile.score : \"200\"}\r\n            </Typography.Title>\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n          <Row justify=\"center\">\r\n            <Typography.Title level={4}>Trận đã chơi</Typography.Title>\r\n          </Row>\r\n          <Row justify=\"center\">\r\n            <Typography.Title level={4} style={{ fontWeight: \"300\" }}>\r\n              {props.totalMatches ? props.totalMatches : \"200\"}\r\n            </Typography.Title>\r\n          </Row>\r\n        </Col>\r\n\r\n        <Col>\r\n          <Row justify=\"center\">\r\n            <Typography.Title level={4}>Tỉ lệ thắng</Typography.Title>\r\n          </Row>\r\n          <Row justify=\"center\">\r\n            <Typography.Title level={4} style={{ fontWeight: \"300\" }}>\r\n              {props.winRate ? props.winRate : \"200\"}\r\n            </Typography.Title>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\history\\index.js",["221"],"import React, { useState, useEffect } from 'react';\r\nimport { Layout, Row, Typography, Spin, Pagination } from \"antd\";\r\nimport RoomItem from \"./../../components/room-item/index\";\r\nimport callServer from '../../utils/NetwordUtils2';\r\nimport { chunk } from 'lodash';\r\n\r\nconst PERPAGE = 12;\r\n\r\nconst History = (props) =>\r\n{\r\n  const [listHistory, setListHistory] = useState([]);\r\n  const [currentHistory, setCurrentHistory] = useState([]);\r\n  const [current, setCurrent] = useState(1);\r\n\r\n  const handlePageChange = (number) =>\r\n  {\r\n    setCurrentHistory(chunk(listHistory, PERPAGE)[number - 1]);\r\n    setCurrent(number);\r\n  }\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() =>\r\n  {\r\n    const getHistory = async () =>\r\n    {\r\n      const response = await callServer(process.env.REACT_APP_HOST_NAME + '/auth/history', \"GET\");\r\n      // console.log(response);\r\n      const data = await response.json();\r\n      // console.log(data.data);\r\n      // setListHistory(data.data);\r\n      setCurrentHistory(chunk(data.data, PERPAGE)[0]);\r\n      setIsLoading(false);\r\n    }\r\n    getHistory();\r\n  }, [])\r\n  return (\r\n    <>\r\n      <Layout.Content style={{ padding: \"150px 50px\", position: \"relative\", width: '100vw' }}>\r\n        <Row justify=\"center\" align=\"middle\">\r\n          <Typography.Title level={2}>Lịch sử trận đấu</Typography.Title>\r\n        </Row>\r\n\r\n        <Row\r\n          justify=\"center\"\r\n          align=\"middle\"\r\n          gutter={[30, 30]}\r\n          style={{ margin: \"30px 0px\" }}\r\n        >\r\n          {isLoading ? <Spin size=\"large\" /> : null}\r\n          {currentHistory.length > 0 ? currentHistory.map(item => (<RoomItem info={item} />)) : null}\r\n        </Row>\r\n\r\n        <Row justify=\"end\" style={{ margin: \"30px 0px\" }}>\r\n          <Pagination current={current} hideOnSinglePage showSizeChanger={false} showLessItems showQuickJumper total={listHistory.length} responsive pageSize={PERPAGE} onChange={handlePageChange} />\r\n        </Row>\r\n\r\n      </Layout.Content>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\header\\index.js",["222","223","224","225"],"import React, { useState } from \"react\";\r\nimport {\r\n  PageHeader,\r\n  Button,\r\n  Tooltip,\r\n  Avatar,\r\n  Layout,\r\n  Tabs,\r\n  Row,\r\n  Col,\r\n} from \"antd\";\r\nimport { history } from \"../../history\";\r\nimport \"./index.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { socket } from \"../../api\";\r\nimport { logout } from \"../../actions/user-actions\";\r\nimport InviteModal from \"./../invite-modal/index\";\r\nimport ConfirmInvitationModal from \"./../confirm-invitation-modal/index\";\r\nimport { PlusOutlined, BellOutlined } from \"@ant-design/icons\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst mapDispatchToProps = { logout };\r\n\r\nconst HeaderCustom = (props) => {\r\n  const [confirmModalVisible, toggleConfirmModal] = useState(false);\r\n  const [invitations, setInvitations] = useState([]);\r\n  const [activeKey, setActiveKey] = useState(\"home\");\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  const handleLogoutClick = () => {\r\n    socket.emit(\"logout\", {});\r\n    props.logout();\r\n    localStorage.removeItem(\"token\");\r\n    history.push(\"/home\");\r\n  };\r\n\r\n  const handleLoginClick = () => {\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  const handleRegisterClick = () => {\r\n    history.push(\"/register\");\r\n  };\r\n\r\n  const logout = [\r\n    <Row gutter={15}>\r\n      <Col>\r\n        <Button\r\n          onClick={() => {\r\n            toggleConfirmModal(!confirmModalVisible);\r\n          }}\r\n        >\r\n          <BellOutlined /> Lời mời\r\n        </Button>\r\n      </Col>\r\n      <Col>\r\n        <Button danger type=\"text\" onClick={handleLogoutClick}>\r\n          Logout\r\n        </Button>\r\n      </Col>\r\n    </Row>,\r\n  ];\r\n  const loginAndRegister = [\r\n    <Row gutter={15} align=\"middle\">\r\n      <Col>\r\n        <Button type=\"primary\" onClick={handleRegisterClick}>\r\n          Đăng ký\r\n        </Button>\r\n      </Col>\r\n      <Col>\r\n        <Button onClick={handleLoginClick}>Đăng nhập</Button>\r\n      </Col>\r\n    </Row>,\r\n  ];\r\n  const content = props.token ? logout : loginAndRegister;\r\n\r\n  return (\r\n    <Layout.Header>\r\n      <PageHeader\r\n        className=\"header\"\r\n        ghost={false}\r\n        style={{ zIndex: \"1\" }}\r\n        onBack={() => window.history.back()}\r\n        title=\"Title\"\r\n        subTitle=\"This is a subtitle\"\r\n        extra={[\r\n          <Row gutter={45} align=\"middle\">\r\n            {props.roomJoined && props.token ? (\r\n              <Row gutter={45}>\r\n                <Col>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    onClick={() => {\r\n                      setModalOpen(!modalOpen);\r\n                    }}\r\n                  >\r\n                    <PlusOutlined style={{ fontWeight: \"300\" }} />\r\n                    Mời người chơi\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {props.roomJoined ? (\r\n              \"\"\r\n            ) : (\r\n              <Col style={{ margin: \"auto\" }}>\r\n                <Tabs\r\n                  style={{ marginTop: \"15px\" }}\r\n                  activeKey={activeKey}\r\n                  centered\r\n                  size=\"large\"\r\n                  onTabClick={(key) => {\r\n                    setActiveKey(key);\r\n                    history.push(\"/\" + key);\r\n                  }}\r\n                >\r\n                  <TabPane tab=\"Tham gia\" key=\"home\" />\r\n                  <TabPane tab=\"Phòng chơi\" key=\"rooms\" />\r\n                  {props.token ? (\r\n                    <>\r\n                      <TabPane tab=\"Xếp hạng\" key=\"leaderboard\" />\r\n                      <TabPane tab=\"Lịch sử\" key=\"history\" />\r\n                      <TabPane tab=\"Hồ sơ\" key=\"profile\" />{\" \"}\r\n                    </>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </Tabs>\r\n              </Col>\r\n            )}\r\n            <Col>{content}</Col>\r\n          </Row>,\r\n        ]}\r\n      ></PageHeader>\r\n      <InviteModal\r\n        modalOpen={modalOpen}\r\n        onClose={() => {\r\n          setModalOpen(!modalOpen);\r\n        }}\r\n      />\r\n      <ConfirmInvitationModal\r\n        confirmModalVisible={confirmModalVisible}\r\n        toggleConfirmModal={toggleConfirmModal}\r\n      />\r\n    </Layout.Header>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { token } = state.user;\r\n  const { roomJoined } = state.header;\r\n  return { token, roomJoined };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderCustom);\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\api\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\actions\\header-action.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\utils\\NetwordUtils2.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\quick-join-button\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\chat-messages\\index.js",["226","227"],"import\r\n{\r\n  Avatar,\r\n  Col,\r\n  Row,\r\n  Comment, Tooltip\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\n\r\nconst ChatMessage = (props) =>\r\n{\r\n  return (\r\n    <Row>\r\n\r\n      <Comment\r\n        author={<a>{props.username}</a>}\r\n        avatar={\r\n          <Avatar\r\n            src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n            alt=\"Han Solo\"\r\n          />\r\n        }\r\n        content={\r\n          <p>\r\n            {props.content}\r\n          </p>\r\n        }\r\n        datetime={\r\n          <Tooltip title={moment().format(\"YYYY-MM-DD HH:mm:ss\")}>\r\n            <span>{moment().fromNow()}</span>\r\n          </Tooltip>\r\n        }\r\n      />\r\n    </Row>\r\n\r\n  );\r\n};\r\n\r\nexport default ChatMessage;\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\game\\index.js",["228","229","230","231"],"import { React, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { socket } from \"../../api\";\r\nimport Board from \"../../components/board/index\";\r\nimport { Col, Row, Statistic } from 'antd';\r\nimport \"./index.css\";\r\nimport Move from './../move/index';\r\n\r\n\r\nfunction Game(props)\r\n{\r\n  const token = localStorage.getItem(\"token\");\r\n  const _history = useHistory();\r\n  const urlToken = _history.location.pathname.split(\"/\");\r\n  const roomIdT = urlToken[urlToken.length - 1];\r\n  const [isFinish, setIsFinish] = useState(false);\r\n  const [isMyTurn, setIsMyTurn] = useState(true);\r\n  //const [turnName, setTurnName] = useState(props.turnName);\r\n  const [state, setState] = useState({\r\n    squares: initMatrix(props.size),\r\n    lastMove: -1,\r\n  });\r\n  const username = props.Username;\r\n  const sizeBoard = props.size;\r\n  const turnName = props.TurnName;\r\n\r\n  useEffect(() =>\r\n  {\r\n    socket.on(\"sendMove\", (response) =>\r\n    {\r\n      // console.log(\" ON sendMove ---- Opponent username:\", response.username);\r\n      // console.log(\" ON sendMove ---- Opponent turnname:\", response.opponentTurnName);\r\n      if (response.username !== username && isFinish === false)\r\n      {\r\n        let squares = state.squares;\r\n        const i = Math.floor(response.move / sizeBoard);\r\n        const j = response.move % sizeBoard;\r\n        squares[i][j] = response.opponentTurnName;\r\n        setState({\r\n          squares: squares,\r\n          lastMove: response.move,\r\n        });\r\n        setIsMyTurn(true);\r\n        if (calculateWinner(state.squares, state.lastMove))\r\n        {\r\n          setIsFinish(true);\r\n        }\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const sendMove = async (move, opponentTurnName) =>\r\n  {\r\n    socket.emit(\"sendMove\", { roomIdT, move, token, opponentTurnName });\r\n  };\r\n\r\n  const handleClick = (i) =>\r\n  {\r\n    let squares = state.squares;\r\n    let x = Math.floor(i / squares[0].length);\r\n    let y = i % squares[0].length;\r\n    if (\r\n      !isMyTurn ||\r\n      isFinish ||\r\n      calculateWinner(state.squares, state.lastMove) ||\r\n      squares[x][y]\r\n    )\r\n    {\r\n      return;\r\n    }\r\n    squares[x][y] = turnName;\r\n    setState({\r\n      squares,\r\n      lastMove: i,\r\n    });\r\n    setIsMyTurn(false);\r\n    if (calculateWinner(squares, i))\r\n    {\r\n      setIsFinish(true);\r\n    }\r\n    sendMove(i, turnName);\r\n  };\r\n\r\n  // const winner = calculateWinner(state.squares, state.lastMove);\r\n  // let status;\r\n  // if (winner) {\r\n  //   status = \"Winner: \" + winner;\r\n  // } else {\r\n  //   if (isFull(state.squares)) status = \"### DRAW ###\";\r\n  //   else {\r\n  //     var opponentTurnName = turnName === \"X\" ? \"O\" : \"X\";\r\n  //     status = \"Next player: \" + (isMyTurn ? turnName : opponentTurnName);\r\n  //   }\r\n  // }\r\n  return (\r\n    <Row justify=\"center\" align=\"middle\">\r\n      <Col className=\"game-area\">\r\n        <Board\r\n          squares={state.squares}\r\n          onClick={(i) => handleClick(i)}\r\n          size={props.size}\r\n        />\r\n      </Col>\r\n    </Row>\r\n\r\n  );\r\n}\r\n\r\nfunction calculateWinner(squares, lastMove)\r\n{\r\n  if (lastMove < 0) return null;\r\n  var i = Math.floor(lastMove / squares[0].length);\r\n  var j = lastMove % squares[i].length;\r\n  var prevTurn = squares[i][j];\r\n  console.log(\"CAL WINNER:\", checkWin(squares, i, j));\r\n  if (checkWin(squares, i, j)) return prevTurn;\r\n  return null;\r\n}\r\n\r\nfunction isValidCord(sizeBoard, x, y)\r\n{\r\n  return !(x < 0 || x >= sizeBoard || y < 0 || y >= sizeBoard);\r\n}\r\n\r\n// i,j là nước mới đánh\r\n// return true khi nước cờ (i,j) dành chiến thắng\r\n//        false khi chưa ai thắng\r\nfunction checkWin(squares, i, j)\r\n{\r\n  var prevTurn = squares[i][j];\r\n  var count = 1;\r\n  var x = i;\r\n  var y = j;\r\n\r\n  // Thứ tự hướng duyệt:\r\n  // 1. dọc : xuống, lên\r\n  // 2. ngang: xuống, lên\r\n  // 3. chéo chính: xuống, lên\r\n  // 4. chéo phụ: xuống , lên\r\n  var dX = [0, 0, 1, -1, 1, -1, -1, 1];\r\n  var dY = [1, -1, 0, 0, 1, -1, 1, -1];\r\n\r\n  // k= 0,1  --> duyệt dọc\r\n  // k= 2,3  --> duyệt ngang\r\n  // k= 4,5  --> duyệt chéo chính\r\n  // k= 6,7  --> duyệt chéo phụ\r\n  for (var k = 0; k < dX.length; ++k)\r\n  {\r\n    // k chẵn thì reset biến count\r\n    // ví dụ k= 0; k= 1 thì vẫn là duyệt trên 1 cột nên count giữ nguyên để phía dưới cộng dồn\r\n    if (k % 2 === 0)\r\n    {\r\n      count = 1;\r\n    }\r\n\r\n    while (\r\n      isValidCord(squares[0].length, x + dX[k], y + dY[k]) &&\r\n      squares[(x += dX[k])][(y += dY[k])] === prevTurn\r\n    )\r\n    {\r\n      ++count;\r\n      if (count === 5)\r\n      {\r\n        return true;\r\n      }\r\n    }\r\n    // đặt lại giá trị ban đầu để duyệt theo hướng khác\r\n    x = i;\r\n    y = j;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction isFull(squares)\r\n{\r\n  for (let i = 0; i < squares[0].length; i++)\r\n  {\r\n    for (let j = 0; j < squares[0].length; j++)\r\n    {\r\n      if (squares[i][j]) return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\nfunction initMatrix(size)\r\n{\r\n  var matrix = [];\r\n  for (var i = 0; i < size; i++)\r\n  {\r\n    matrix[i] = [];\r\n    for (var j = 0; j < size; j++)\r\n    {\r\n      matrix[i][j] = null;\r\n    }\r\n  }\r\n  return matrix;\r\n}\r\nexport default Game;\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\timer\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\move\\index.js",["232"],"import\r\n{\r\n  Avatar,\r\n\r\n\r\n\r\n  Comment, Tooltip\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport \"./index.css\";\r\n\r\nconst Move = (props) =>\r\n{\r\n  return (\r\n    <Comment\r\n      className=\"move\"\r\n      author={<a>Han Solo</a>}\r\n      avatar={\r\n        <Avatar\r\n          src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n          alt=\"Han Solo\"\r\n        />\r\n      }\r\n      content={<p>{props.comment ? props.comment : \"Di chuyển tới (1,3)\"}</p>}\r\n      datetime={\r\n        <Tooltip title={moment().format(\"YYYY-MM-DD HH:mm:ss\")}>\r\n          <span>{moment().fromNow()}</span>\r\n        </Tooltip>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default Move;\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\homepage\\components\\create-room-modal.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\homepage\\components\\enter-password-modal.js",["233","234","235","236"],"import { useState } from 'react';\r\nimport callServer from './../../../utils/NetworkUtils';\r\nimport \r\n{\r\n    Button,\r\n    Col,\r\n    Form,\r\n    Input,\r\n    Modal,\r\n    Row\r\n} from \"antd\";\r\nconst EnterPasswordModal = (props) =>\r\n{\r\n\r\n    const handleOk = () =>\r\n    {\r\n        props.setPasswordModalVisible(false);\r\n    };\r\n\r\n    const handleCancel = () =>\r\n    {\r\n        props.setPasswordModalVisible(false);\r\n    };\r\n\r\n    return (<Modal\r\n        centered\r\n        footer={false}\r\n        visible={props.passwordModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n    >\r\n        <div className=\"board-modal\">\r\n            <h1>Nhập mật khẩu</h1>\r\n\r\n            <Form\r\n                onFinish={props.handleEnterPassword}\r\n                className=\"board-form\"\r\n            >\r\n                <Form.Item\r\n                    style={{ marginTop: \"15px\" }}\r\n                    name=\"roomPassword\"\r\n                    rules={[{ required: true, message: \"Vui lòng nhập mật khẩu!\" }]}\r\n                >\r\n                    <Input className=\"board-input\" placeholder=\"Mật khẩu\" type=\"password\" />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button\r\n                        style={{ marginBottom: \"15px\" }}\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                    >\r\n                        Xác nhận\r\n              </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    </Modal>)\r\n}\r\n\r\nexport default EnterPasswordModal;","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\homepage\\components\\online-users.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\room-item\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\leaderboard-row\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\invite-modal\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\board\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\leaderboard-item\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\online-user\\index.js",["237"],"import { Row, Col, Avatar, Typography, Button } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport { socket } from './../../api/index';\r\nimport { connect } from 'react-redux';\r\nimport { useLocation } from \"react-router\";\r\n\r\nconst OnlineUser = (props) =>\r\n{\r\n  const location = useLocation();\r\n  const [invited, setInvited] = useState(false);\r\n\r\n  const handleInvite = () =>\r\n  {\r\n    const roomId = (location.pathname.substring(location.pathname.lastIndexOf('/') + 1));\r\n    socket.emit('sendInvitation', { target: props.username, token: props.token, roomId });\r\n  }\r\n\r\n  return (\r\n    <Row style={{ margin: \"30px\" }} justify=\"space-between\" align=\"middle\">\r\n      <Col>\r\n        <Row justify=\"space-between\" align=\"middle\" gutter={30}>\r\n          <Col>\r\n            <Avatar\r\n              size=\"large\"\r\n              src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <Typography.Title level={5}>\r\n              {props.username ? props.username : \"JohnDoe\"}\r\n            </Typography.Title>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n      <Col>\r\n        <Button\r\n          shape=\"round\"\r\n          disabled={invited}\r\n          onClick={() =>\r\n          {\r\n            //setInvited(!invited);\r\n            handleInvite(props.username);\r\n          }}\r\n        >\r\n          {invited ? \"Đã mời\" : \"Mời\"}\r\n        </Button>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) =>\r\n{\r\n  return ({ token: state.user.token })\r\n}\r\nexport default connect(mapStateToProps)(OnlineUser);\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\square\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\confirm-invitation-modal\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\inviter\\index.js",[],{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","replacedBy":"241"},{"ruleId":"242","severity":1,"message":"243","line":5,"column":11,"nodeType":"244","messageId":"245","endLine":5,"endColumn":19},{"ruleId":"246","severity":1,"message":"247","line":38,"column":6,"nodeType":"248","endLine":38,"endColumn":8,"suggestions":"249"},{"ruleId":"242","severity":1,"message":"250","line":2,"column":10,"nodeType":"244","messageId":"245","endLine":2,"endColumn":16},{"ruleId":"246","severity":1,"message":"247","line":21,"column":6,"nodeType":"248","endLine":21,"endColumn":8,"suggestions":"251"},{"ruleId":"242","severity":1,"message":"252","line":1,"column":17,"nodeType":"244","messageId":"245","endLine":1,"endColumn":26},{"ruleId":"242","severity":1,"message":"253","line":2,"column":31,"nodeType":"244","messageId":"245","endLine":2,"endColumn":39},{"ruleId":"254","severity":1,"message":"255","line":167,"column":11,"nodeType":"256","endLine":167,"endColumn":105},{"ruleId":"242","severity":1,"message":"252","line":1,"column":27,"nodeType":"244","messageId":"245","endLine":1,"endColumn":36},{"ruleId":"242","severity":1,"message":"250","line":7,"column":10,"nodeType":"244","messageId":"245","endLine":7,"endColumn":16},{"ruleId":"246","severity":1,"message":"247","line":59,"column":6,"nodeType":"248","endLine":59,"endColumn":8,"suggestions":"257"},{"ruleId":"242","severity":1,"message":"258","line":1,"column":53,"nodeType":"244","messageId":"245","endLine":1,"endColumn":67},{"ruleId":"242","severity":1,"message":"259","line":1,"column":69,"nodeType":"244","messageId":"245","endLine":1,"endColumn":86},{"ruleId":"246","severity":1,"message":"260","line":32,"column":6,"nodeType":"248","endLine":32,"endColumn":8,"suggestions":"261"},{"ruleId":"246","severity":1,"message":"262","line":103,"column":6,"nodeType":"248","endLine":103,"endColumn":8,"suggestions":"263"},{"ruleId":"242","severity":1,"message":"264","line":6,"column":8,"nodeType":"244","messageId":"245","endLine":6,"endColumn":23},{"ruleId":"242","severity":1,"message":"264","line":4,"column":8,"nodeType":"244","messageId":"245","endLine":4,"endColumn":23},{"ruleId":"242","severity":1,"message":"265","line":13,"column":10,"nodeType":"244","messageId":"245","endLine":13,"endColumn":18},{"ruleId":"246","severity":1,"message":"266","line":62,"column":6,"nodeType":"248","endLine":62,"endColumn":8,"suggestions":"267"},{"ruleId":"242","severity":1,"message":"268","line":5,"column":10,"nodeType":"244","messageId":"245","endLine":5,"endColumn":19},{"ruleId":"242","severity":1,"message":"269","line":5,"column":21,"nodeType":"244","messageId":"245","endLine":5,"endColumn":33},{"ruleId":"242","severity":1,"message":"270","line":7,"column":10,"nodeType":"244","messageId":"245","endLine":7,"endColumn":21},{"ruleId":"242","severity":1,"message":"271","line":7,"column":23,"nodeType":"244","messageId":"245","endLine":7,"endColumn":37},{"ruleId":"242","severity":1,"message":"272","line":21,"column":11,"nodeType":"244","messageId":"245","endLine":21,"endColumn":21},{"ruleId":"242","severity":1,"message":"273","line":11,"column":23,"nodeType":"244","messageId":"245","endLine":11,"endColumn":37},{"ruleId":"242","severity":1,"message":"274","line":5,"column":3,"nodeType":"244","messageId":"245","endLine":5,"endColumn":10},{"ruleId":"242","severity":1,"message":"275","line":6,"column":3,"nodeType":"244","messageId":"245","endLine":6,"endColumn":9},{"ruleId":"242","severity":1,"message":"276","line":27,"column":10,"nodeType":"244","messageId":"245","endLine":27,"endColumn":21},{"ruleId":"242","severity":1,"message":"277","line":27,"column":23,"nodeType":"244","messageId":"245","endLine":27,"endColumn":37},{"ruleId":"242","severity":1,"message":"278","line":4,"column":3,"nodeType":"244","messageId":"245","endLine":4,"endColumn":6},{"ruleId":"254","severity":1,"message":"279","line":17,"column":17,"nodeType":"256","endLine":17,"endColumn":20},{"ruleId":"242","severity":1,"message":"280","line":5,"column":20,"nodeType":"244","messageId":"245","endLine":5,"endColumn":29},{"ruleId":"242","severity":1,"message":"281","line":7,"column":8,"nodeType":"244","messageId":"245","endLine":7,"endColumn":12},{"ruleId":"246","severity":1,"message":"282","line":50,"column":6,"nodeType":"248","endLine":50,"endColumn":8,"suggestions":"283"},{"ruleId":"242","severity":1,"message":"284","line":174,"column":10,"nodeType":"244","messageId":"245","endLine":174,"endColumn":16},{"ruleId":"254","severity":1,"message":"279","line":18,"column":15,"nodeType":"256","endLine":18,"endColumn":18},{"ruleId":"242","severity":1,"message":"285","line":1,"column":10,"nodeType":"244","messageId":"245","endLine":1,"endColumn":18},{"ruleId":"242","severity":1,"message":"286","line":2,"column":8,"nodeType":"244","messageId":"245","endLine":2,"endColumn":18},{"ruleId":"242","severity":1,"message":"278","line":6,"column":5,"nodeType":"244","messageId":"245","endLine":6,"endColumn":8},{"ruleId":"242","severity":1,"message":"287","line":10,"column":5,"nodeType":"244","messageId":"245","endLine":10,"endColumn":8},{"ruleId":"242","severity":1,"message":"288","line":10,"column":19,"nodeType":"244","messageId":"245","endLine":10,"endColumn":29},"no-native-reassign",["289"],"no-negated-in-lhs",["290"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["291"],"'socket' is defined but never used.",["292"],"'useEffect' is defined but never used.","'Checkbox' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["293"],"'ADD_INVITATION' is defined but never used.","'DELETE_INVITATION' is defined but never used.","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["294"],"React Hook useEffect has missing dependencies: 'props', 'roomId', and 'token'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["295"],"'QuickJoinButton' is defined but never used.","'listRoom' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'waitingLoading'. Either include it or remove the dependency array. You can also do a functional update 'setWaitingLoading(w => ...)' if you only need 'waitingLoading' in the 'setWaitingLoading' call.",["296"],"'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'historyGame' is assigned a value but never used.","'setHistoryHame' is assigned a value but never used.","'getHistory' is assigned a value but never used.","'setListHistory' is assigned a value but never used.","'Tooltip' is defined but never used.","'Avatar' is defined but never used.","'invitations' is assigned a value but never used.","'setInvitations' is assigned a value but never used.","'Col' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Statistic' is defined but never used.","'Move' is defined but never used.","React Hook useEffect has missing dependencies: 'isFinish', 'sizeBoard', 'state.lastMove', 'state.squares', and 'username'. Either include them or remove the dependency array.",["297"],"'isFull' is defined but never used.","'useState' is defined but never used.","'callServer' is defined but never used.","'Row' is defined but never used.","'setInvited' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"298","fix":"299"},{"desc":"298","fix":"300"},{"desc":"298","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},"Update the dependencies array to be: [props]",{"range":"310","text":"311"},{"range":"312","text":"311"},{"range":"313","text":"311"},"Update the dependencies array to be: [token]",{"range":"314","text":"315"},"Update the dependencies array to be: [props, roomId, token]",{"range":"316","text":"317"},"Update the dependencies array to be: [waitingLoading]",{"range":"318","text":"319"},"Update the dependencies array to be: [isFinish, sizeBoard, state.lastMove, state.squares, username]",{"range":"320","text":"321"},[1072,1074],"[props]",[525,527],[1686,1688],[821,823],"[token]",[3395,3397],"[props, roomId, token]",[2077,2079],"[waitingLoading]",[1661,1663],"[isFinish, sizeBoard, state.lastMove, state.squares, username]"]