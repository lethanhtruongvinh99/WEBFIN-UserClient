[{"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\index.js":"1","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\App.js":"2","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\reportWebVitals.js":"3","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\store\\index.js":"4","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\history.js":"5","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\actions\\user-actions.js":"6","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\auth-redirect\\index.js":"7","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\login-form\\index.js":"8","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\register-form\\index.js":"9","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\the-layout\\index.js":"10","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\reducers\\user-reducer.js":"11","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\reducers\\header-reducer.js":"12","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\recovery-password\\index.js":"13","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\verify-account\\index.js":"14","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\constants\\action-types.js":"15","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\utils\\NetworkUtils.js":"16","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\utils\\NotificationUtils.js":"17","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\room\\index.js":"18","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\homepage\\index.js":"19","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\rooms\\index.js":"20","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\leaderboard\\index.js":"21","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\user-profile\\index.js":"22","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\history\\index.js":"23","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\header\\index.js":"24","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\api\\index.js":"25","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\actions\\header-action.js":"26","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\utils\\NetwordUtils2.js":"27","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\quick-join-button\\index.js":"28","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\chat-messages\\index.js":"29","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\game\\index.js":"30","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\timer\\index.js":"31","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\move\\index.js":"32","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\homepage\\components\\create-room-modal.js":"33","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\homepage\\components\\enter-password-modal.js":"34","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\homepage\\components\\online-users.js":"35","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\room-item\\index.js":"36","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\leaderboard-row\\index.js":"37","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\invite-modal\\index.js":"38","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\board\\index.js":"39","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\leaderboard-item\\index.js":"40","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\online-user\\index.js":"41","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\square\\index.js":"42","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\confirm-invitation-modal\\index.js":"43","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\inviter\\index.js":"44","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\room\\components\\win-modal.js":"45","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\room\\components\\close-modal.js":"46","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\room\\components\\draw-modal.js":"47"},{"size":574,"mtime":1609688881903,"results":"48","hashOfConfig":"49"},{"size":1782,"mtime":1610276789767,"results":"50","hashOfConfig":"49"},{"size":362,"mtime":1609688881906,"results":"51","hashOfConfig":"49"},{"size":384,"mtime":1609943020884,"results":"52","hashOfConfig":"49"},{"size":94,"mtime":1609688881902,"results":"53","hashOfConfig":"49"},{"size":518,"mtime":1610276789769,"results":"54","hashOfConfig":"49"},{"size":630,"mtime":1610276789780,"results":"55","hashOfConfig":"49"},{"size":5562,"mtime":1610276789784,"results":"56","hashOfConfig":"49"},{"size":4913,"mtime":1610276789786,"results":"57","hashOfConfig":"49"},{"size":2468,"mtime":1610276789788,"results":"58","hashOfConfig":"49"},{"size":873,"mtime":1610276789790,"results":"59","hashOfConfig":"49"},{"size":554,"mtime":1609943020879,"results":"60","hashOfConfig":"49"},{"size":2616,"mtime":1610276789785,"results":"61","hashOfConfig":"49"},{"size":1185,"mtime":1610276789789,"results":"62","hashOfConfig":"49"},{"size":346,"mtime":1610276789779,"results":"63","hashOfConfig":"49"},{"size":426,"mtime":1609688881909,"results":"64","hashOfConfig":"49"},{"size":275,"mtime":1609688881910,"results":"65","hashOfConfig":"49"},{"size":8301,"mtime":1610366852229,"results":"66","hashOfConfig":"49"},{"size":5367,"mtime":1610276789783,"results":"67","hashOfConfig":"49"},{"size":3861,"mtime":1610276789787,"results":"68","hashOfConfig":"49"},{"size":2226,"mtime":1610276789783,"results":"69","hashOfConfig":"49"},{"size":3161,"mtime":1610276789789,"results":"70","hashOfConfig":"49"},{"size":2056,"mtime":1610276789780,"results":"71","hashOfConfig":"49"},{"size":4455,"mtime":1610276789771,"results":"72","hashOfConfig":"49"},{"size":111,"mtime":1609688881859,"results":"73","hashOfConfig":"49"},{"size":247,"mtime":1609943020793,"results":"74","hashOfConfig":"49"},{"size":332,"mtime":1610037120241,"results":"75","hashOfConfig":"49"},{"size":1066,"mtime":1610276789776,"results":"76","hashOfConfig":"49"},{"size":749,"mtime":1609943020805,"results":"77","hashOfConfig":"49"},{"size":5576,"mtime":1610371193520,"results":"78","hashOfConfig":"49"},{"size":1605,"mtime":1610276776568,"results":"79","hashOfConfig":"49"},{"size":703,"mtime":1609943020816,"results":"80","hashOfConfig":"49"},{"size":2127,"mtime":1610363699364,"results":"81","hashOfConfig":"49"},{"size":1173,"mtime":1610363708457,"results":"82","hashOfConfig":"49"},{"size":682,"mtime":1610276789782,"results":"83","hashOfConfig":"49"},{"size":4069,"mtime":1610276789777,"results":"84","hashOfConfig":"49"},{"size":1109,"mtime":1610276789774,"results":"85","hashOfConfig":"49"},{"size":943,"mtime":1610276789772,"results":"86","hashOfConfig":"49"},{"size":786,"mtime":1610037120220,"results":"87","hashOfConfig":"49"},{"size":1268,"mtime":1610037120223,"results":"88","hashOfConfig":"49"},{"size":1598,"mtime":1610276789775,"results":"89","hashOfConfig":"49"},{"size":210,"mtime":1609688881882,"results":"90","hashOfConfig":"49"},{"size":2846,"mtime":1610276789770,"results":"91","hashOfConfig":"49"},{"size":1327,"mtime":1610276789773,"results":"92","hashOfConfig":"49"},{"size":517,"mtime":1610367244873,"results":"93","hashOfConfig":"49"},{"size":523,"mtime":1610366795709,"results":"94","hashOfConfig":"49"},{"size":516,"mtime":1610366828645,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"bk8xc",{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"98"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"98"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"98"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"98"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"98"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"98"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"98"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"98"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"98"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"98"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"98"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"98"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"98"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"98"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"98"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"98"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"98"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"98"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"98"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"98"},"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\index.js",[],["211","212"],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\App.js",["213","214"],"import React from 'react';\r\nimport\r\n{\r\n  Route, Router,\r\n  Switch, Redirect\r\n} from 'react-router-dom';\r\nimport './App.css';\r\nimport AuthRedirect from './containers/auth-redirect/index';\r\nimport LoginForm from './containers/login-form/index';\r\nimport RecoveryPassword from './containers/recovery-password';\r\nimport RegisterForm from './containers/register-form/index';\r\nimport Verify from './containers/verify-account';\r\nimport { history } from './history';\r\nimport LayoutCustom from './containers/the-layout/index';\r\nimport { connect } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { login } from './actions/user-actions';\r\nimport { socket } from './api/index';\r\nimport { onlineUsersChanged } from './actions/user-actions'\r\n\r\n\r\nfunction App(props)\r\n{\r\n  useEffect(() =>\r\n  {\r\n\r\n    socket.on(\"onlineUsersChanged\", (data) =>\r\n    {\r\n      props.onlineUsersChanged(data.onlineUsers);\r\n    });\r\n\r\n    const token = localStorage.getItem('token');\r\n    if (token)\r\n    {\r\n      props.login(token);\r\n      socket.emit(\"login\", { token: token });\r\n    }\r\n  }, [])\r\n  return (\r\n    <Router history={history}>\r\n      <Switch>\r\n        <Route exact path=\"/auth/:token\" component={AuthRedirect} />\r\n        <Route exact path=\"/login\" component={LoginForm} />\r\n        <Route exact path=\"/register\" component={RegisterForm} />\r\n        <Route exact path=\"/verify\" component={Verify} />\r\n        <Route exact path=\"/recovery\" component={RecoveryPassword} />\r\n        <Route path=\"/\" component={LayoutCustom} />\r\n      </Switch>\r\n    </Router>\r\n\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) =>\r\n{\r\n  return {\r\n    token: state.user.token,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = { login, onlineUsersChanged };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\reportWebVitals.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\store\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\history.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\actions\\user-actions.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\auth-redirect\\index.js",["215","216"],"import React, { useEffect } from \"react\";\r\nimport { socket } from \"../../api\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/user-actions\";\r\n\r\nconst mapDispatchToProps = { login };\r\nconst mapStateToProps = (state) =>\r\n{\r\n  const { token } = state.user;\r\n  return { token };\r\n};\r\n\r\nconst AuthRedirect = (props) =>\r\n{\r\n  useEffect(() =>\r\n  {\r\n    const token = props.match.params.token;\r\n    localStorage.setItem(\"token\", token);\r\n    props.login(token);\r\n    props.history.push(\"/home\");\r\n  }, []);\r\n  return <></>;\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthRedirect);\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\login-form\\index.js",["217","218","219"],"import React, { useEffect, useState } from \"react\";\r\nimport { Form, Input, Button, Checkbox, Divider, Spin, Modal } from \"antd\";\r\nimport\r\n{\r\n  UserOutlined,\r\n  LockOutlined,\r\n  FacebookFilled,\r\n  GoogleCircleFilled,\r\n} from \"@ant-design/icons\";\r\nimport callServer from \"../../utils/NetworkUtils\";\r\nimport showNotification from \"../../utils/NotificationUtils\";\r\nimport { socket } from \"../../api\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/user-actions\";\r\nimport \"./index.css\";\r\n\r\nconst mapDispatchToProps = { login };\r\nconst mapStateToProps = (state) =>\r\n{\r\n  const { token } = state.user;\r\n  return { token };\r\n};\r\n\r\nconst LoginForm = (props) =>\r\n{\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const [recoveryPasswordUsername, setRecoveryPasswordUsername] = useState(\"\");\r\n\r\n  const showModal = () =>\r\n  {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = async () =>\r\n  {\r\n    const data = { username: recoveryPasswordUsername };\r\n    const result = await callServer(process.env.REACT_APP_HOST_NAME + '/auth/recoveryrequest', \"post\", data);\r\n    if (result.auth)\r\n    {\r\n      showNotification(\"error\", result.message);\r\n      setIsModalVisible(false);\r\n    } else\r\n    {\r\n      showNotification(\"error\", result.message);\r\n    }\r\n\r\n  };\r\n\r\n  const handleCancel = () =>\r\n  {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleRecoveryUsername = (e) =>\r\n  {\r\n    setRecoveryPasswordUsername(e.target.value);\r\n  }\r\n\r\n  const onFinish = async (values) =>\r\n  {\r\n    //console.log(\"Received values of form: \", values);\r\n    setIsLoading(true);\r\n    const data = {\r\n      ...values,\r\n    };\r\n\r\n    const result = await callServer(\r\n      process.env.REACT_APP_HOST_NAME + \"/auth/login\",\r\n      \"post\",\r\n      data\r\n    );\r\n    //console.log(result);\r\n    if (result.auth)\r\n    {\r\n      setIsLoading(false);\r\n      localStorage.setItem(\"token\", result.accessToken);\r\n      props.login(result.accessToken);\r\n      socket.emit(\"login\", { token: result.accessToken });\r\n      props.history.push(\"/home\");\r\n    } else\r\n    {\r\n      setIsLoading(false);\r\n      showNotification(\"error\", result.message);\r\n    }\r\n  };\r\n\r\n  const handleRegisterClick = () =>\r\n  {\r\n    props.history.push(\"/register\");\r\n  };\r\n\r\n  const handleFacebookLogin = () =>\r\n  {\r\n    window.open(process.env.REACT_APP_HOST_NAME + \"/auth/facebook\", \"_self\");\r\n  };\r\n\r\n  const handleGoogleLogin = () =>\r\n  {\r\n    window.open(process.env.REACT_APP_HOST_NAME + \"/auth/google\", \"_self\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h1 style={{ textAlign: \"center\", fontSize: \"32px\" }}>Login</h1>\r\n      <Form\r\n        name=\"normal_login\"\r\n        className=\"login-form\"\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n      >\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={handleGoogleLogin}\r\n          danger\r\n          className=\"login-form-button\"\r\n          style={{ margin: \"10px 0px\" }}\r\n          icon={<GoogleCircleFilled />}\r\n        >\r\n          Đăng nhập bằng Google\r\n        </Button>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={handleFacebookLogin}\r\n          className=\"login-form-button\"\r\n          style={{ margin: \"10px 0px\" }}\r\n          icon={<FacebookFilled />}\r\n        >\r\n          Đăng nhập bằng Facebook\r\n        </Button>\r\n        <Divider />\r\n        <Form.Item\r\n          name=\"username\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Username!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Tên tài khoản\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Password!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            type=\"password\"\r\n            placeholder=\"Mật khẩu\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n\r\n          <a href=\"\" className=\"login-form-forgot\" onClick={(e) => { e.preventDefault(); showModal() }}>\r\n            Quên mật khẩu\r\n          </a>\r\n        </Form.Item>\r\n        {isLoading ? (\r\n          <div className=\"loading-spinner\">\r\n            <Spin size=\"large\" />\r\n          </div>\r\n        ) : null}\r\n        <Form.Item className=\"button-row\">\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            Đăng nhập\r\n          </Button>\r\n          <div style={{ margin: \"15px 0px\", textAlign: \"center\" }}>Hoặc</div>\r\n          <Button type=\"dashed\" onClick={handleRegisterClick}>\r\n            Đăng ký\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n      <>\r\n        <Modal\r\n          centered\r\n          title=\"Khôi phục mật khẩu\"\r\n          visible={isModalVisible}\r\n          onOk={handleOk}\r\n          onCancel={handleCancel}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Username\"\r\n            onChange={e => handleRecoveryUsername(e)}\r\n          />\r\n        </Modal>\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\register-form\\index.js",["220","221"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Input, Button, DatePicker, Spin } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport \"./index.css\";\r\nimport callServer from \"../../utils/NetworkUtils\";\r\nimport showNotification from \"../../utils/NotificationUtils\";\r\nimport { socket } from \"../../api\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/user-actions\";\r\n\r\nconst mapDispatchToProps = { login };\r\nconst mapStateToProps = (state) =>\r\n{\r\n  const { token } = state.user;\r\n  return { token };\r\n};\r\n\r\nconst RegisterForm = (props) =>\r\n{\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const onFinish = async (values) =>\r\n  {\r\n    //console.log(\"Received values of form: \", values);\r\n    setIsLoading(true);\r\n    if (values.password !== values.passwordConfirm)\r\n    {\r\n      showNotification(\"error\", \"Password does not match!\");\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      ...values,\r\n      role: 0,\r\n      isCreatedAt: new Date(),\r\n    };\r\n\r\n    const result = await callServer(\r\n      process.env.REACT_APP_HOST_NAME + \"/auth/signup\",\r\n      \"post\",\r\n      data\r\n    );\r\n    if (result.auth)\r\n    {\r\n      setIsLoading(false);\r\n      // localStorage.setItem(\"token\", result.accessToken);\r\n      // props.login(result.accessToken);\r\n      // socket.emit(\"login\", { token: result.accessToken });\r\n      // props.history.push(\"/home\");\r\n      showNotification(\"success\", result.message);\r\n    } else\r\n    {\r\n      setIsLoading(false);\r\n      showNotification(\"error\", result.message);\r\n    }\r\n  };\r\n\r\n  const handleLoginClick = () =>\r\n  {\r\n    props.history.push(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-container\">\r\n      <h1 style={{ textAlign: \"center\", margin: \"40px 0px\", fontSize: \"32px\" }}>\r\n        Register\r\n      </h1>\r\n      <Form\r\n        name=\"normal_register\"\r\n        className=\"register-form\"\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n      >\r\n        <Form.Item\r\n          name=\"username\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Username!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Username\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"email\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Email!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Email\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"fullName\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your full name!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Full name\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"dob\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your DOB!\",\r\n            },\r\n          ]}\r\n        >\r\n          <DatePicker placeholder=\"Date of birth\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Password!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"passwordConfirm\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please confirm your Password!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n          />\r\n        </Form.Item>\r\n        {isLoading ? (\r\n          <div className=\"loading-spinner\">\r\n            <Spin size=\"large\" />\r\n          </div>\r\n        ) : null}\r\n        <Form.Item className=\"button-row\">\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"register-form-button\"\r\n          >\r\n            Register\r\n          </Button>\r\n\r\n          <div style={{ margin: \"15px 0px\", textAlign: \"center\" }}>Or</div>\r\n          <Button type=\"dashed\" onClick={handleLoginClick}>\r\n            Log in\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterForm);\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\the-layout\\index.js",["222"],"import { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Homepage from \"./../homepage/index\";\r\nimport Room from \"./../room/index\";\r\nimport Rooms from \"./../rooms/index\";\r\nimport HeaderCustom from \"./../../components/header/index\";\r\nimport Leaderboard from \"./../leaderboard/index\";\r\nimport History from \"./../history/index\";\r\nimport UserProfile from './../user-profile/index';\r\nimport { Layout } from 'antd';\r\nimport { socket } from './../../api/index';\r\nimport { useEffect } from 'react';\r\nimport showNotification from './../../utils/NotificationUtils';\r\nimport { connect } from 'react-redux';\r\nimport { setInvitations } from \"../../actions/user-actions\";\r\nimport callServer from './../../utils/NetworkUtils';\r\nimport QuickJoinButton from './../../components/quick-join-button/index';\r\n\r\nconst mapStateToProps = (state) =>\r\n{\r\n  return {\r\n    invitations: state.user.invitations,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = { setInvitations }\r\n\r\nlet tmpInvitations = [];\r\n\r\nconst LayoutCustom = (props) =>\r\n{\r\n\r\n\r\n  useEffect(() =>\r\n  {\r\n\r\n    const fetchInvitations = async () =>\r\n    {\r\n      const result = await callServer(process.env.REACT_APP_HOST_NAME + '/auth/invitations', 'post', {});\r\n      if (result.status)\r\n      {\r\n        tmpInvitations = result.data;\r\n        props.setInvitations(tmpInvitations);\r\n        //console.log(result.data);\r\n      }\r\n    }\r\n\r\n    fetchInvitations();\r\n\r\n    socket.on('newInvitation', (data) =>\r\n    {\r\n      data._id = '';\r\n      data.username = data.sender;\r\n\r\n      showNotification('info', \"Bạn nhận được lời mời từ \" + data.sender);\r\n\r\n      tmpInvitations.unshift(data);\r\n      props.setInvitations(tmpInvitations)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <HeaderCustom />\r\n      <QuickJoinButton />\r\n      <Layout.Content style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\r\n        <Switch>\r\n          <Route exact path=\"/home\" component={Homepage} />\r\n          <Route exact path=\"/rooms\" component={Rooms} />\r\n          <Route exact path=\"/room/:id\" component={Room} />\r\n          <Route exact path=\"/leaderboard\" component={Leaderboard} />\r\n          <Route exact path=\"/history\" component={History} />\r\n          <Route exact path=\"/profile\" component={UserProfile} />\r\n          <Redirect from=\"/\" to=\"/home\" />\r\n        </Switch>\r\n      </Layout.Content>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LayoutCustom);\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\reducers\\user-reducer.js",["223","224"],"import { USER_LOGIN, ONLINE_USERS_CHANGED, LOG_OUT, ADD_INVITATION, DELETE_INVITATION, SET_INVITATIONS } from \"../constants/action-types\";\r\n\r\nconst initialState = {\r\n\ttoken: \"\",\r\n\tonlineUsers: [],\r\n\tinvitations: [],\r\n};\r\n\r\nconst userReducer = (state = initialState, action) =>\r\n{\r\n\tswitch (action.type)\r\n\t{\r\n\t\tcase USER_LOGIN: {\r\n\t\t\tconst token = action.payload;\r\n\t\t\tconst newState = {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: token,\r\n\t\t\t};\r\n\t\t\treturn newState;\r\n\t\t}\r\n\t\tcase ONLINE_USERS_CHANGED: {\r\n\t\t\tconst newState = {\r\n\t\t\t\t...state,\r\n\t\t\t\tonlineUsers: action.payload,\r\n\t\t\t}\r\n\t\t\treturn newState;\r\n\t\t}\r\n\t\tcase LOG_OUT: {\r\n\t\t\tconst newState = {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: '',\r\n\t\t\t}\r\n\t\t\treturn newState;\r\n\t\t}\r\n\r\n\t\tcase SET_INVITATIONS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tinvitations: action.payload,\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n};\r\n\r\nexport default userReducer;\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\reducers\\header-reducer.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\recovery-password\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\verify-account\\index.js",["225"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport callServer from \"../../utils/NetworkUtils\";\r\nimport { Button } from \"antd\";\r\nconst Verify = (props) =>\r\n{\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const history = useHistory();\r\n  const token = history.location.search.split(\"?\")[1];\r\n  const handleBackToLogin = () =>\r\n  {\r\n    props.history.push(\"/login\");\r\n  };\r\n  const verifyStart = async (data) =>\r\n  {\r\n    setIsLoading(true);\r\n    const result = await callServer(\r\n      process.env.REACT_APP_HOST_NAME + \"/auth/verify\",\r\n      \"post\",\r\n      data\r\n    );\r\n    //console.log(result);\r\n    if (result.auth)\r\n    {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  useEffect(() =>\r\n  {\r\n    const data = { token: token };\r\n    verifyStart(data);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        <p>Verifying </p>\r\n      ) : (\r\n          <div>\r\n            <p>Verified</p>\r\n            <Button type=\"link\" onClick={() => handleBackToLogin()}>\r\n              Back to login\r\n          </Button>\r\n          </div>\r\n        )}\r\n      <h1>Verify Account</h1>\r\n    </div>\r\n  );\r\n};\r\nexport default Verify;\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\constants\\action-types.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\utils\\NetworkUtils.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\utils\\NotificationUtils.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\room\\index.js",["226","227","228","229"],"import { Col, Row, Statistic, Empty, Button, Avatar } from \"antd\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport { React, useEffect, useState } from \"react\";\r\nimport { socket } from \"../../api\";\r\nimport ChatMessage from \"../../components/chat-messages/index\";\r\nimport Game from \"../../components/game/index\";\r\nimport callServer from \"../../utils/NetworkUtils\";\r\nimport \"./index.css\";\r\nimport Move from \"./../../components/move/index\";\r\nimport { connect } from \"react-redux\";\r\nimport { roomJoined, roomLeft } from \"./../../actions/header-action\";\r\nimport { animateScroll } from \"react-scroll\";\r\nimport { useHistory } from \"react-router\";\r\nimport showNotification from \"../../utils/NotificationUtils\";\r\nimport Timer from \"../../components/timer\";\r\nimport WinModal from \"./components/win-modal\";\r\nimport CloseModal from \"./components/close-modal\";\r\nimport DrawModal from \"./components/draw-modal\";\r\n\r\nlet tempMessages = [];\r\nfunction scrollToBottom() {\r\n  animateScroll.scrollToBottom({\r\n    containerId: \"chatBox\",\r\n    duration: \"0\",\r\n    smooth: false,\r\n  });\r\n}\r\n\r\nconst Room = (props) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [turnName, setTurnName] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [timePerTurn, setTimePerTurn] = useState(30);\r\n  const [isWinModalVisible, setWinModalVisible] = useState(false);\r\n  const [isCloseModalVisible, setCloseModalVisible] = useState(false);\r\n  const [isDrawModalVisible, setDrawModalVisible] = useState(false);\r\n  const roomId = props.match.params.id;\r\n  const history = useHistory();\r\n  const handleBack = async () => {\r\n    //\r\n    // console.log(roomId);\r\n    const result = await callServer(process.env.REACT_APP_HOST_NAME + \"/room/leave\", \"POST\", { roomId: roomId });\r\n    console.log(result);\r\n    if (result.status === 200) {\r\n      socket.emit(\"leaveRoom\", { roomId: roomId, sign: result.sign });\r\n      history.push(\"/home\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    socket.on(\"playerBOut\", (response) => {\r\n      console.log(response.message);\r\n      showNotification(\"error\", response.message);\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    socket.on(\"hostOut\", (response) => {\r\n      console.log(response.message);\r\n      showNotification(\"error\", response.message);\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    socket.on(\"guestOut\", (response) => {\r\n      console.log(response.message);\r\n      showNotification(\"error\", response.message);\r\n    });\r\n  }, []);\r\n\r\n  const handleStartGame = async () => {};\r\n  useEffect(() => {\r\n    props.roomJoined([]);\r\n\r\n    const fetchRoomDetails = async () => {\r\n      const result = await callServer(process.env.REACT_APP_HOST_NAME + \"/room/detail\", \"POST\", { roomId: roomId });\r\n      tempMessages = result.data.messages;\r\n      setMessages(tempMessages);\r\n      setTimePerTurn(result.data.timePerTurn);\r\n      console.log(result);\r\n    };\r\n\r\n    fetchRoomDetails();\r\n\r\n    socket.emit(\"join\", { roomIdT: roomId, token });\r\n\r\n    socket.on(\"turnName\", (response) => {\r\n      //console.log(\"---- SOCKET: ON_turnName: \", response);\r\n      setTurnName(response);\r\n    });\r\n\r\n    socket.on(\"message\", (response) => {\r\n      //console.log(response);\r\n      response.content = response.message;\r\n      tempMessages = tempMessages.concat([response]);\r\n      setMessages(tempMessages);\r\n      scrollToBottom();\r\n    });\r\n\r\n    socket.on(\"Username\", (response) => {\r\n      setUsername(response);\r\n      // console.log(\"----Socket: ON Username -----\");\r\n      // console.log(\"RESPONE: \", response);\r\n      // console.log(\"USERNAME: \", username);\r\n    });\r\n\r\n    return () => {\r\n      props.roomLeft();\r\n    };\r\n  }, []);\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n\r\n    //console.log(roomId + \" \" + message);\r\n\r\n    if (message) {\r\n      let newMsg = {\r\n        content: message,\r\n        username: \"Tôi\",\r\n      };\r\n      tempMessages = tempMessages.concat([newMsg]);\r\n      setMessages(tempMessages);\r\n      setMessage(\"\");\r\n      scrollToBottom();\r\n\r\n      const result = await callServer(process.env.REACT_APP_HOST_NAME + \"/message/add\", \"post\", { roomId: roomId, content: message });\r\n      //console.log(result);\r\n      if (result.status === 200) {\r\n        //console.log('this');\r\n        socket.emit(\"sendMessage\", { roomId, message, token });\r\n      }\r\n      // console.log(message);\r\n    }\r\n  };\r\n  // console.log(messages);\r\n\r\n  const handleResign = () => {\r\n    setCloseModalVisible(true);\r\n  };\r\n  const handleOfferDraw = () => {\r\n    setDrawModalVisible(true);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"50px\" }}>\r\n      <Button\r\n        style={{ paddingTop: \"50px\" }}\r\n        onClick={() => {\r\n          handleBack();\r\n        }}\r\n      >\r\n        Thoát\r\n      </Button>\r\n      <Row justify=\"space-between\" gutter={30} align=\"middle\">\r\n        <Col id=\"infoArea\" xs={24} sm={24} md={6} lg={6} style={{ padding: \"30px\", height: \"85vh\" }}>\r\n          <Row style={{}} justify=\"space-between\" align=\"middle\">\r\n            <Col>\r\n              <Statistic title=\"Player turn\" value=\"nhatvinh43\" />\r\n            </Col>\r\n            <Col>\r\n              <Statistic title=\"Symbol\" value=\"X \" />\r\n            </Col>\r\n            <Col>\r\n              {/* <Statistic title=\"Time left\" value=\"00:15\" /> */}\r\n              <Timer timePerTurn={timePerTurn}></Timer>\r\n            </Col>\r\n          </Row>\r\n          <Row style={{ overflowY: \"scroll\", height: \"65vh\", marginTop: \"15px\" }}>\r\n            <Move />\r\n            <Move />\r\n            <Move />\r\n            <Move />\r\n            <Move />\r\n            <Move />\r\n            <Move />\r\n            <Move />\r\n          </Row>\r\n        </Col>\r\n\r\n        <Col xs={24} sm={24} md={10} lg={10} className=\"playing-area\" id=\"infoRow\">\r\n          <Row justify=\"center\" align=\"middle\" gutter={30} style={{ marginBottom: \"30px\" }}>\r\n            <Col>\r\n              <Avatar size={48} src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n            </Col>\r\n            <Col>\r\n              <Avatar size={48} src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n            </Col>\r\n            <Col>\r\n              <Button disabled={props.token ? false : true} type=\"primary\" onClick={() => handleStartGame()}>\r\n                Bắt đầu trận\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Button onClick={handleResign} disabled={props.token ? false : true} danger>\r\n                Xin thua\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Button onClick={handleOfferDraw} disabled={props.token ? false : true} danger>\r\n                Xin hoà\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <Game Username={username} size={20} TurnName={turnName}></Game>\r\n        </Col>\r\n\r\n        <Col className=\"chat-box\" xs={24} sm={24} md={6} lg={6}>\r\n          <Row id=\"chatBox\" style={{ height: \"70vh\", overflowY: \"scroll\" }} align={messages ? \"top\" : \"middle\"}>\r\n            <Col>{messages ? messages.map((item, index) => <ChatMessage key={index} content={item.content} username={item.username} />) : <Empty />}</Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <TextArea\r\n              disabled={props.token ? false : true}\r\n              placeholder=\"Type your message here\"\r\n              autoSize={{ minRows: 3, maxRows: 3 }}\r\n              className=\"message-input-box\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              onPressEnter={(e) => sendMessage(e)}\r\n              required={true}\r\n            />\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      {/* <WinModal isModalVisible={isWinModalVisible} setModalVisible={setWinModalVisible} /> */}\r\n      <CloseModal isModalVisible={isCloseModalVisible} setModalVisible={setCloseModalVisible} />\r\n      <DrawModal isModalVisible={isDrawModalVisible} setModalVisible={setDrawModalVisible} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.user.token,\r\n  };\r\n};\r\nconst mapDispatchToProps = { roomJoined, roomLeft };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Room);\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\homepage\\index.js",["230"],"import { EnterOutlined, EyeOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { Button, Col, Form, Input, Row } from \"antd\";\r\nimport { React, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport callServer from \"../../utils/NetworkUtils\";\r\nimport QuickJoinButton from \"./../../components/quick-join-button/index\";\r\nimport showNotification from './../../utils/NotificationUtils';\r\nimport CreateRoomModal from './components/create-room-modal';\r\nimport EnterPasswordModal from './components/enter-password-modal';\r\nimport OnlineUsers from './components/online-users';\r\nimport \"./index.css\";\r\n\r\nconst mapStateToProps = (state) =>\r\n{\r\n  const { onlineUsers, token } = state.user;\r\n  return { onlineUsers, token };\r\n};\r\n\r\nconst Homepage = (props) =>\r\n{\r\n  const [joinButtonLoading, setJoinButtonLoading] = useState(false);\r\n  const [observerButtonLoading, setObserveButtonLoading] = useState(false);\r\n  const [joinMode, setJoinMode] = useState('play')\r\n  const [isModalVisible, setModalVisible] = useState(false);\r\n  const [passwordModalVisible, setPasswordModalVisible] = useState(false);\r\n  const [roomPassword, setRoomPassword] = useState(\"\");\r\n  const [roomId, setRoomId] = useState(\"\");\r\n\r\n  const openCreateRoomModal = () =>\r\n  {\r\n    setModalVisible(true);\r\n  };\r\n\r\n  const handleJoinRoom = async (value) =>\r\n  {\r\n\r\n    if (joinMode === 'play')\r\n    {\r\n      setJoinButtonLoading(true);\r\n    } else setObserveButtonLoading(true);\r\n\r\n    //logged in and not logged in\r\n    //the first is logged in case\r\n    const data = { roomId: value.roomId, joinMode: joinMode };\r\n    const result = await callServer(\r\n      process.env.REACT_APP_HOST_NAME + \"/room/join\",\r\n      \"post\",\r\n      data\r\n    );\r\n    console.log(result);\r\n    if (result.auth)\r\n    {\r\n      // console.log(result.data._id);\r\n      if (result.data.password)\r\n      {\r\n        setRoomPassword(result.data.password);\r\n        setRoomId(result.data._id);\r\n        setPasswordModalVisible(true);\r\n      }\r\n      else props.history.push(`/room/${result.data._id}`);\r\n    }\r\n    else\r\n    {\r\n      showNotification(\"error\", \"Không tìm thấy phòng!\")\r\n    }\r\n\r\n    if (joinMode === 'play')\r\n    {\r\n      setJoinButtonLoading(false);\r\n    } else setObserveButtonLoading(false);\r\n  };\r\n\r\n  const handleEnterPassword = async (value) =>\r\n  {\r\n    if (value.roomPassword === roomPassword)\r\n    {\r\n      props.history.push(`/room/${roomId}`);\r\n    }\r\n    else\r\n    {\r\n      showNotification(\"error\", \"Sai mật khẩu!\")\r\n    }\r\n  }\r\n\r\n  const handleCreateRoom = async (values) =>\r\n  {\r\n    const data = { ...values };\r\n    // console.log(data);\r\n    const result = await callServer(\r\n      process.env.REACT_APP_HOST_NAME + \"/room/add\",\r\n      \"post\",\r\n      data\r\n    );\r\n    // console.log(result);\r\n    //Call API to create a room, after that, receive room id to go to /room?id={roomId response from server}\r\n    props.history.push(`/room/${result._id}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row style={{ marginTop: \"45px\" }}>\r\n        <h1 style={{ textAlign: \"center\", margin: \"auto\" }}>\r\n          Caro Online\r\n        </h1>\r\n      </Row>\r\n      <Row>\r\n        <Form onFinish={(e) => { handleJoinRoom(e) }}>\r\n          <Form.Item\r\n            name=\"roomId\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Vui lòng nhập Id phòng muốn tham gia\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              className=\"input\"\r\n              placeholder=\"ID của phòng muốn tham gia\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Row gutter={[16, 0]} style={{ marginTop: '15px' }} justify=\"center\">\r\n              {props.token ? <Col>\r\n                <Button\r\n                  loading={joinButtonLoading}\r\n                  htmlType=\"submit\"\r\n                  type=\"primary\"\r\n                  onClick={() => { setJoinMode('play') }}\r\n                  icon={<EnterOutlined />}\r\n                >\r\n                  Tham gia\r\n</Button>\r\n              </Col> : \"\"}\r\n              <Col>\r\n                <Button\r\n                  loading={observerButtonLoading}\r\n                  htmlType=\"submit\"\r\n                  icon={<EyeOutlined />}\r\n                  onClick={() => setJoinMode('observe')}\r\n                >\r\n                  Theo dõi\r\n</Button>\r\n              </Col>\r\n              {props.token ? <Col>\r\n                <Button\r\n                  type=\"dashed\"\r\n                  icon={<PlusOutlined />}\r\n                  onClick={openCreateRoomModal}\r\n                >\r\n                  Tạo phòng\r\n</Button>\r\n              </Col> : \"\"}\r\n            </Row>\r\n          </Form.Item>\r\n        </Form>\r\n      </Row>\r\n\r\n      {props.token ? <><h2 style={{ textAlign: \"center\", margin: \"30px auto\" }}>Đang online</h2>\r\n        <Row gutter={[16, 16]} className=\"avatar-row\" justify=\"center\">\r\n          <OnlineUsers onlineUsers={props.onlineUsers} />\r\n        </Row></> : \"\"}\r\n\r\n      <CreateRoomModal isModalVisible={isModalVisible} handleCreateRoom={handleCreateRoom} setModalVisible={setModalVisible} />\r\n      <EnterPasswordModal passwordModalVisible={passwordModalVisible} handleEnterPassword={handleEnterPassword} setPasswordModalVisible={setPasswordModalVisible} />\r\n\r\n    </div>\r\n  );\r\n};\r\nexport default connect(mapStateToProps)(Homepage);\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\rooms\\index.js",["231","232","233"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Row, Typography, Layout, Spin, Pagination } from \"antd\";\r\nimport QuickJoinButton from \"../../components/quick-join-button\";\r\nimport RoomItem from \"./../../components/room-item/index\";\r\nimport callServer from \"./../../utils/NetwordUtils2\";\r\nimport { chunk } from 'lodash';\r\n\r\nconst PERPAGE = 12;\r\n\r\nconst Rooms = (props) =>\r\n{\r\n  const [listRoom, setListRoom] = useState([]);\r\n\r\n  //Use for storing data from server\r\n  const [waitingRooms, setWaitingRooms] = useState([]);\r\n  const [ongoingRooms, setOngoingRooms] = useState([]);\r\n\r\n  //Use for pagination\r\n  const [currentWaitingRooms, setCurrentWaitingRooms] = useState([]);\r\n  const [currentOngoingRooms, setCurrentOngoingRooms] = useState([]);\r\n\r\n  const [currentWaitingPge, setCurrentWaitingPage] = useState(1);\r\n  const [currentOngoingPage, setCurrentOngoingPage] = useState(1);\r\n\r\n  const [waitingLoading, setWaitingLoading] = useState(true);\r\n\r\n  const handleWaitingRoomsPageChange = (number) =>\r\n  {\r\n    setCurrentWaitingRooms(chunk(waitingRooms, PERPAGE)[number - 1]);\r\n    setCurrentWaitingPage(number);\r\n  }\r\n\r\n  const handleOngoingRoomsPageChange = (number) =>\r\n  {\r\n    setCurrentOngoingRooms(chunk(ongoingRooms, PERPAGE)[number - 1]);\r\n    setCurrentOngoingPage(number);\r\n  }\r\n\r\n  //2 list. empty player B and have player B\r\n  useEffect(() =>\r\n  {\r\n    const getListRoom = async () =>\r\n    {\r\n      const response = await callServer(process.env.REACT_APP_HOST_NAME + '/room/', \"get\");\r\n      const data = await response.json();\r\n      // console.log(response);\r\n      // console.log(data.rooms);\r\n      setListRoom(chunk(data.rooms, PERPAGE));\r\n\r\n      //Placeholder for testing purpose, needs to redesign after api is complete\r\n      setWaitingRooms(data.rooms);\r\n      setOngoingRooms(data.rooms);\r\n\r\n      //Set pagination\r\n      setCurrentWaitingRooms(chunk(data.rooms, PERPAGE)[0]);\r\n      setCurrentOngoingRooms(chunk(data.rooms, PERPAGE)[0]);\r\n\r\n      setWaitingLoading(!waitingLoading);\r\n    };\r\n    getListRoom();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Layout.Content style={{ padding: \"150px 50px\", position: \"relative\" }}>\r\n        <Row justify=\"center\" align=\"middle\">\r\n          <Typography.Title level={2}>Đang đợi người chơi</Typography.Title>\r\n        </Row>\r\n\r\n        <Row\r\n          justify=\"center\"\r\n          align=\"middle\"\r\n          gutter={[30, 30]}\r\n          style={{ margin: \"30px 0px\" }}\r\n        >\r\n          {waitingLoading ? <Spin size=\"large\" /> : null}\r\n          {currentWaitingRooms.length > 0 ? currentWaitingRooms.map(item => (<RoomItem key={item.roomId} info={item} />)) : null}\r\n        </Row>\r\n\r\n        <Row justify=\"end\" style={{ margin: \"30px 0px\" }}>\r\n          <Pagination current={currentWaitingPge} hideOnSinglePage showSizeChanger={false} showLessItems showQuickJumper total={waitingRooms.length} responsive pageSize={PERPAGE} onChange={handleWaitingRoomsPageChange} />\r\n        </Row>\r\n\r\n        <Row justify=\"center\" align=\"middle\">\r\n          <Typography.Title level={2}>Đang diễn ra</Typography.Title>\r\n        </Row>\r\n\r\n        <Row\r\n          justify=\"center\"\r\n          align=\"middle\"\r\n          gutter={[30, 30]}\r\n          style={{ margin: \"30px 0px\" }}\r\n        >\r\n          {waitingLoading ? <Spin size=\"large\" /> : null}\r\n          {currentOngoingRooms.length > 0 ? currentOngoingRooms.map(item => (<RoomItem key={item.roomId} info={item} />)) : null}\r\n        </Row>\r\n\r\n        <Row justify=\"end\" style={{ margin: \"30px 0px\" }}>\r\n          <Pagination current={currentOngoingPage} hideOnSinglePage showSizeChanger={false} showLessItems showQuickJumper total={ongoingRooms.length} responsive pageSize={PERPAGE} onChange={handleOngoingRoomsPageChange} />\r\n        </Row>\r\n\r\n      </Layout.Content>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Rooms;\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\leaderboard\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\user-profile\\index.js",["234","235","236","237","238"],"import React, { useEffect, useState } from 'react';\r\nimport { Row, Col, Typography, Avatar } from \"antd\";\r\nimport callServer from '../../utils/NetwordUtils2';\r\nconst UserProfile = (props) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [profile, setProfile] = useState({});\r\n  const [historyGame, setHistoryHame] = useState([]);\r\n  useEffect(()=> {\r\n    const getUserProfile = async () => {\r\n      const response = await callServer(process.env.REACT_APP_HOST_NAME + '/auth/profile', \"get\");\r\n      if (response.status === 200) {\r\n        const data = await response.json();\r\n        console.log(data.account);\r\n        setProfile(data.account);\r\n        // console.log(profile);\r\n      } else {\r\n        const data = await response.json();\r\n        Notification('error', data.message);\r\n      }\r\n    }\r\n    const getHistory = async () => {\r\n\r\n    }\r\n    getUserProfile();\r\n  }, [])\r\n  return (\r\n    <div style={{ padding: \"0px 50px\", width: \"100vw\" }}>\r\n      <Row style={{ marginTop: \"30px\" }} justify=\"center\">\r\n        <Col>\r\n          <Typography.Title level={2}>Thông tin người chơi</Typography.Title>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row style={{ marginTop: \"30px\" }} justify=\"center\">\r\n        <Col>\r\n          <Avatar\r\n            size={64}\r\n            src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row style={{ marginTop: \"30px\" }} justify=\"center\">\r\n        <Col>\r\n          <Typography.Title level={4}>\r\n            {profile ? profile.fullName : \"Phan Nhật Vinh\"}\r\n          </Typography.Title>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row justify=\"center\">\r\n        <Col>\r\n          <Typography.Title level={5} style={{ fontWeight: \"300\" }}>\r\n            Tham gia ngày {profile ? profile.isCreatedAt : \"23/06/2077\"}\r\n          </Typography.Title>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row style={{ marginTop: \"30px\" }} justify=\"center\" gutter={60}>\r\n        <Col>\r\n          <Row justify=\"center\">\r\n            <Typography.Title level={4}>Số cúp</Typography.Title>\r\n          </Row>\r\n          <Row justify=\"center\">\r\n            <Typography.Title level={4} style={{ fontWeight: \"300\" }}>\r\n              {profile ? profile.score : \"200\"}\r\n            </Typography.Title>\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n          <Row justify=\"center\">\r\n            <Typography.Title level={4}>Trận đã chơi</Typography.Title>\r\n          </Row>\r\n          <Row justify=\"center\">\r\n            <Typography.Title level={4} style={{ fontWeight: \"300\" }}>\r\n              {props.totalMatches ? props.totalMatches : \"200\"}\r\n            </Typography.Title>\r\n          </Row>\r\n        </Col>\r\n\r\n        <Col>\r\n          <Row justify=\"center\">\r\n            <Typography.Title level={4}>Tỉ lệ thắng</Typography.Title>\r\n          </Row>\r\n          <Row justify=\"center\">\r\n            <Typography.Title level={4} style={{ fontWeight: \"300\" }}>\r\n              {props.winRate ? props.winRate : \"200\"}\r\n            </Typography.Title>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\history\\index.js",["239"],"import React, { useState, useEffect } from 'react';\r\nimport { Layout, Row, Typography, Spin, Pagination } from \"antd\";\r\nimport RoomItem from \"./../../components/room-item/index\";\r\nimport callServer from '../../utils/NetwordUtils2';\r\nimport { chunk } from 'lodash';\r\n\r\nconst PERPAGE = 12;\r\n\r\nconst History = (props) =>\r\n{\r\n  const [listHistory, setListHistory] = useState([]);\r\n  const [currentHistory, setCurrentHistory] = useState([]);\r\n  const [current, setCurrent] = useState(1);\r\n\r\n  const handlePageChange = (number) =>\r\n  {\r\n    setCurrentHistory(chunk(listHistory, PERPAGE)[number - 1]);\r\n    setCurrent(number);\r\n  }\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() =>\r\n  {\r\n    const getHistory = async () =>\r\n    {\r\n      const response = await callServer(process.env.REACT_APP_HOST_NAME + '/auth/history', \"GET\");\r\n      // console.log(response);\r\n      const data = await response.json();\r\n      // console.log(data.data);\r\n      // setListHistory(data.data);\r\n      setCurrentHistory(chunk(data.data, PERPAGE)[0]);\r\n      setIsLoading(false);\r\n    }\r\n    getHistory();\r\n  }, [])\r\n  return (\r\n    <>\r\n      <Layout.Content style={{ padding: \"150px 50px\", position: \"relative\", width: '100vw' }}>\r\n        <Row justify=\"center\" align=\"middle\">\r\n          <Typography.Title level={2}>Lịch sử trận đấu</Typography.Title>\r\n        </Row>\r\n\r\n        <Row\r\n          justify=\"center\"\r\n          align=\"middle\"\r\n          gutter={[30, 30]}\r\n          style={{ margin: \"30px 0px\" }}\r\n        >\r\n          {isLoading ? <Spin size=\"large\" /> : null}\r\n          {currentHistory.length > 0 ? currentHistory.map(item => (<RoomItem info={item} />)) : null}\r\n        </Row>\r\n\r\n        <Row justify=\"end\" style={{ margin: \"30px 0px\" }}>\r\n          <Pagination current={current} hideOnSinglePage showSizeChanger={false} showLessItems showQuickJumper total={listHistory.length} responsive pageSize={PERPAGE} onChange={handlePageChange} />\r\n        </Row>\r\n\r\n      </Layout.Content>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\header\\index.js",["240","241","242","243"],"import React, { useState } from \"react\";\r\nimport {\r\n  PageHeader,\r\n  Button,\r\n  Tooltip,\r\n  Avatar,\r\n  Layout,\r\n  Tabs,\r\n  Row,\r\n  Col,\r\n} from \"antd\";\r\nimport { history } from \"../../history\";\r\nimport \"./index.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { socket } from \"../../api\";\r\nimport { logout } from \"../../actions/user-actions\";\r\nimport InviteModal from \"./../invite-modal/index\";\r\nimport ConfirmInvitationModal from \"./../confirm-invitation-modal/index\";\r\nimport { PlusOutlined, BellOutlined } from \"@ant-design/icons\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst mapDispatchToProps = { logout };\r\n\r\nconst HeaderCustom = (props) => {\r\n  const [confirmModalVisible, toggleConfirmModal] = useState(false);\r\n  const [invitations, setInvitations] = useState([]);\r\n  const [activeKey, setActiveKey] = useState(\"home\");\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  const handleLogoutClick = () => {\r\n    socket.emit(\"logout\", {});\r\n    props.logout();\r\n    localStorage.removeItem(\"token\");\r\n    history.push(\"/home\");\r\n  };\r\n\r\n  const handleLoginClick = () => {\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  const handleRegisterClick = () => {\r\n    history.push(\"/register\");\r\n  };\r\n\r\n  const logout = [\r\n    <Row gutter={15}>\r\n      <Col>\r\n        <Button\r\n          onClick={() => {\r\n            toggleConfirmModal(!confirmModalVisible);\r\n          }}\r\n        >\r\n          <BellOutlined /> Lời mời\r\n        </Button>\r\n      </Col>\r\n      <Col>\r\n        <Button danger type=\"text\" onClick={handleLogoutClick}>\r\n          Logout\r\n        </Button>\r\n      </Col>\r\n    </Row>,\r\n  ];\r\n  const loginAndRegister = [\r\n    <Row gutter={15} align=\"middle\">\r\n      <Col>\r\n        <Button type=\"primary\" onClick={handleRegisterClick}>\r\n          Đăng ký\r\n        </Button>\r\n      </Col>\r\n      <Col>\r\n        <Button onClick={handleLoginClick}>Đăng nhập</Button>\r\n      </Col>\r\n    </Row>,\r\n  ];\r\n  const content = props.token ? logout : loginAndRegister;\r\n\r\n  return (\r\n    <Layout.Header>\r\n      <PageHeader\r\n        className=\"header\"\r\n        ghost={false}\r\n        style={{ zIndex: \"1\" }}\r\n        onBack={() => window.history.back()}\r\n        title=\"Title\"\r\n        subTitle=\"This is a subtitle\"\r\n        extra={[\r\n          <Row gutter={45} align=\"middle\">\r\n            {props.roomJoined && props.token ? (\r\n              <Row gutter={45}>\r\n                <Col>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    onClick={() => {\r\n                      setModalOpen(!modalOpen);\r\n                    }}\r\n                  >\r\n                    <PlusOutlined style={{ fontWeight: \"300\" }} />\r\n                    Mời người chơi\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {props.roomJoined ? (\r\n              \"\"\r\n            ) : (\r\n              <Col style={{ margin: \"auto\" }}>\r\n                <Tabs\r\n                  style={{ marginTop: \"15px\" }}\r\n                  activeKey={activeKey}\r\n                  centered\r\n                  size=\"large\"\r\n                  onTabClick={(key) => {\r\n                    setActiveKey(key);\r\n                    history.push(\"/\" + key);\r\n                  }}\r\n                >\r\n                  <TabPane tab=\"Tham gia\" key=\"home\" />\r\n                  <TabPane tab=\"Phòng chơi\" key=\"rooms\" />\r\n                  {props.token ? (\r\n                    <>\r\n                      <TabPane tab=\"Xếp hạng\" key=\"leaderboard\" />\r\n                      <TabPane tab=\"Lịch sử\" key=\"history\" />\r\n                      <TabPane tab=\"Hồ sơ\" key=\"profile\" />{\" \"}\r\n                    </>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </Tabs>\r\n              </Col>\r\n            )}\r\n            <Col>{content}</Col>\r\n          </Row>,\r\n        ]}\r\n      ></PageHeader>\r\n      <InviteModal\r\n        modalOpen={modalOpen}\r\n        onClose={() => {\r\n          setModalOpen(!modalOpen);\r\n        }}\r\n      />\r\n      <ConfirmInvitationModal\r\n        confirmModalVisible={confirmModalVisible}\r\n        toggleConfirmModal={toggleConfirmModal}\r\n      />\r\n    </Layout.Header>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { token } = state.user;\r\n  const { roomJoined } = state.header;\r\n  return { token, roomJoined };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderCustom);\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\api\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\actions\\header-action.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\utils\\NetwordUtils2.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\quick-join-button\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\chat-messages\\index.js",["244","245"],"import\r\n{\r\n  Avatar,\r\n  Col,\r\n  Row,\r\n  Comment, Tooltip\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\n\r\nconst ChatMessage = (props) =>\r\n{\r\n  return (\r\n    <Row>\r\n\r\n      <Comment\r\n        author={<a>{props.username}</a>}\r\n        avatar={\r\n          <Avatar\r\n            src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n            alt=\"Han Solo\"\r\n          />\r\n        }\r\n        content={\r\n          <p>\r\n            {props.content}\r\n          </p>\r\n        }\r\n        datetime={\r\n          <Tooltip title={moment().format(\"YYYY-MM-DD HH:mm:ss\")}>\r\n            <span>{moment().fromNow()}</span>\r\n          </Tooltip>\r\n        }\r\n      />\r\n    </Row>\r\n\r\n  );\r\n};\r\n\r\nexport default ChatMessage;\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\game\\index.js",["246","247","248","249","250","251"],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\timer\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\move\\index.js",["252"],"import\r\n{\r\n  Avatar,\r\n\r\n\r\n\r\n  Comment, Tooltip\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport \"./index.css\";\r\n\r\nconst Move = (props) =>\r\n{\r\n  return (\r\n    <Comment\r\n      className=\"move\"\r\n      author={<a>Han Solo</a>}\r\n      avatar={\r\n        <Avatar\r\n          src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n          alt=\"Han Solo\"\r\n        />\r\n      }\r\n      content={<p>{props.comment ? props.comment : \"Di chuyển tới (1,3)\"}</p>}\r\n      datetime={\r\n        <Tooltip title={moment().format(\"YYYY-MM-DD HH:mm:ss\")}>\r\n          <span>{moment().fromNow()}</span>\r\n        </Tooltip>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default Move;\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\homepage\\components\\create-room-modal.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\homepage\\components\\enter-password-modal.js",["253","254","255","256"],"import { useState } from \"react\";\r\nimport callServer from \"./../../../utils/NetworkUtils\";\r\nimport { Button, Col, Form, Input, Modal, Row } from \"antd\";\r\nconst EnterPasswordModal = (props) => {\r\n  const handleOk = () => {\r\n    props.setPasswordModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    props.setPasswordModalVisible(false);\r\n  };\r\n\r\n  return (\r\n    <Modal centered footer={false} visible={props.passwordModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n      <div className=\"board-modal\">\r\n        <h1>Nhập mật khẩu</h1>\r\n\r\n        <Form onFinish={props.handleEnterPassword} className=\"board-form\">\r\n          <Form.Item style={{ marginTop: \"15px\" }} name=\"roomPassword\" rules={[{ required: true, message: \"Vui lòng nhập mật khẩu!\" }]}>\r\n            <Input className=\"board-input\" placeholder=\"Mật khẩu\" type=\"password\" />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button style={{ marginBottom: \"15px\" }} type=\"primary\" htmlType=\"submit\">\r\n              Xác nhận\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EnterPasswordModal;\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\homepage\\components\\online-users.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\room-item\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\leaderboard-row\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\invite-modal\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\board\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\leaderboard-item\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\online-user\\index.js",["257"],"import { Row, Col, Avatar, Typography, Button } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport { socket } from './../../api/index';\r\nimport { connect } from 'react-redux';\r\nimport { useLocation } from \"react-router\";\r\n\r\nconst OnlineUser = (props) =>\r\n{\r\n  const location = useLocation();\r\n  const [invited, setInvited] = useState(false);\r\n\r\n  const handleInvite = () =>\r\n  {\r\n    const roomId = (location.pathname.substring(location.pathname.lastIndexOf('/') + 1));\r\n    socket.emit('sendInvitation', { target: props.username, token: props.token, roomId });\r\n  }\r\n\r\n  return (\r\n    <Row style={{ margin: \"30px\" }} justify=\"space-between\" align=\"middle\">\r\n      <Col>\r\n        <Row justify=\"space-between\" align=\"middle\" gutter={30}>\r\n          <Col>\r\n            <Avatar\r\n              size=\"large\"\r\n              src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <Typography.Title level={5}>\r\n              {props.username ? props.username : \"JohnDoe\"}\r\n            </Typography.Title>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n      <Col>\r\n        <Button\r\n          shape=\"round\"\r\n          disabled={invited}\r\n          onClick={() =>\r\n          {\r\n            //setInvited(!invited);\r\n            handleInvite(props.username);\r\n          }}\r\n        >\r\n          {invited ? \"Đã mời\" : \"Mời\"}\r\n        </Button>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) =>\r\n{\r\n  return ({ token: state.user.token })\r\n}\r\nexport default connect(mapStateToProps)(OnlineUser);\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\square\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\confirm-invitation-modal\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\inviter\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\room\\components\\win-modal.js",["258","259","260","261","262","263"],"import { useState } from \"react\";\r\nimport { Button, Col, Form, Input, Modal, Row } from \"antd\";\r\nimport \"./index.css\"\r\nconst WinModal = (props) => {\r\n  const handleOk = () => {\r\n    props.setModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    props.setModalVisible(false);\r\n  };\r\n\r\n  return (\r\n    <Modal title=\"Thông báo\" visible={props.isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n      <h1 style={{ color: \"green\" }}> You Won </h1>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default WinModal;\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\room\\components\\close-modal.js",["264","265","266","267","268","269"],"import { useState } from \"react\";\r\nimport { Button, Col, Form, Input, Modal, Row } from \"antd\";\r\nimport \"./index.css\";\r\nconst CloseModal = (props) => {\r\n  const handleOk = () => {\r\n    props.setModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    props.setModalVisible(false);\r\n  };\r\n\r\n  return (\r\n    <Modal title=\"Thông báo\" visible={props.isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n      <h1 style={{ color: \"red\" }}> You Closed </h1>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CloseModal;\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\room\\components\\draw-modal.js",["270","271","272","273","274","275"],"import { useState } from \"react\";\r\nimport { Button, Col, Form, Input, Modal, Row } from \"antd\";\r\nimport \"./index.css\";\r\nconst DrawModal = (props) => {\r\n  const handleOk = () => {\r\n    props.setModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    props.setModalVisible(false);\r\n  };\r\n\r\n  return (\r\n    <Modal title=\"Thông báo\" visible={props.isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n      <h1 style={{ color: \"blue\" }}> Draw </h1>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default DrawModal;\r\n",{"ruleId":"276","replacedBy":"277"},{"ruleId":"278","replacedBy":"279"},{"ruleId":"280","severity":1,"message":"281","line":5,"column":11,"nodeType":"282","messageId":"283","endLine":5,"endColumn":19},{"ruleId":"284","severity":1,"message":"285","line":38,"column":6,"nodeType":"286","endLine":38,"endColumn":8,"suggestions":"287"},{"ruleId":"280","severity":1,"message":"288","line":2,"column":10,"nodeType":"282","messageId":"283","endLine":2,"endColumn":16},{"ruleId":"284","severity":1,"message":"285","line":21,"column":6,"nodeType":"286","endLine":21,"endColumn":8,"suggestions":"289"},{"ruleId":"280","severity":1,"message":"290","line":1,"column":17,"nodeType":"282","messageId":"283","endLine":1,"endColumn":26},{"ruleId":"280","severity":1,"message":"291","line":2,"column":31,"nodeType":"282","messageId":"283","endLine":2,"endColumn":39},{"ruleId":"292","severity":1,"message":"293","line":167,"column":11,"nodeType":"294","endLine":167,"endColumn":105},{"ruleId":"280","severity":1,"message":"290","line":1,"column":27,"nodeType":"282","messageId":"283","endLine":1,"endColumn":36},{"ruleId":"280","severity":1,"message":"288","line":7,"column":10,"nodeType":"282","messageId":"283","endLine":7,"endColumn":16},{"ruleId":"284","severity":1,"message":"285","line":59,"column":6,"nodeType":"286","endLine":59,"endColumn":8,"suggestions":"295"},{"ruleId":"280","severity":1,"message":"296","line":1,"column":53,"nodeType":"282","messageId":"283","endLine":1,"endColumn":67},{"ruleId":"280","severity":1,"message":"297","line":1,"column":69,"nodeType":"282","messageId":"283","endLine":1,"endColumn":86},{"ruleId":"284","severity":1,"message":"298","line":32,"column":6,"nodeType":"286","endLine":32,"endColumn":8,"suggestions":"299"},{"ruleId":"280","severity":1,"message":"300","line":16,"column":8,"nodeType":"282","messageId":"283","endLine":16,"endColumn":16},{"ruleId":"280","severity":1,"message":"301","line":36,"column":10,"nodeType":"282","messageId":"283","endLine":36,"endColumn":27},{"ruleId":"280","severity":1,"message":"302","line":36,"column":29,"nodeType":"282","messageId":"283","endLine":36,"endColumn":47},{"ruleId":"284","severity":1,"message":"303","line":109,"column":6,"nodeType":"286","endLine":109,"endColumn":8,"suggestions":"304"},{"ruleId":"280","severity":1,"message":"305","line":6,"column":8,"nodeType":"282","messageId":"283","endLine":6,"endColumn":23},{"ruleId":"280","severity":1,"message":"305","line":4,"column":8,"nodeType":"282","messageId":"283","endLine":4,"endColumn":23},{"ruleId":"280","severity":1,"message":"306","line":13,"column":10,"nodeType":"282","messageId":"283","endLine":13,"endColumn":18},{"ruleId":"284","severity":1,"message":"307","line":62,"column":6,"nodeType":"286","endLine":62,"endColumn":8,"suggestions":"308"},{"ruleId":"280","severity":1,"message":"309","line":5,"column":10,"nodeType":"282","messageId":"283","endLine":5,"endColumn":19},{"ruleId":"280","severity":1,"message":"310","line":5,"column":21,"nodeType":"282","messageId":"283","endLine":5,"endColumn":33},{"ruleId":"280","severity":1,"message":"311","line":7,"column":10,"nodeType":"282","messageId":"283","endLine":7,"endColumn":21},{"ruleId":"280","severity":1,"message":"312","line":7,"column":23,"nodeType":"282","messageId":"283","endLine":7,"endColumn":37},{"ruleId":"280","severity":1,"message":"313","line":21,"column":11,"nodeType":"282","messageId":"283","endLine":21,"endColumn":21},{"ruleId":"280","severity":1,"message":"314","line":11,"column":23,"nodeType":"282","messageId":"283","endLine":11,"endColumn":37},{"ruleId":"280","severity":1,"message":"315","line":5,"column":3,"nodeType":"282","messageId":"283","endLine":5,"endColumn":10},{"ruleId":"280","severity":1,"message":"316","line":6,"column":3,"nodeType":"282","messageId":"283","endLine":6,"endColumn":9},{"ruleId":"280","severity":1,"message":"317","line":27,"column":10,"nodeType":"282","messageId":"283","endLine":27,"endColumn":21},{"ruleId":"280","severity":1,"message":"318","line":27,"column":23,"nodeType":"282","messageId":"283","endLine":27,"endColumn":37},{"ruleId":"280","severity":1,"message":"319","line":4,"column":3,"nodeType":"282","messageId":"283","endLine":4,"endColumn":6},{"ruleId":"292","severity":1,"message":"320","line":17,"column":17,"nodeType":"294","endLine":17,"endColumn":20},{"ruleId":"280","severity":1,"message":"321","line":5,"column":20,"nodeType":"282","messageId":"283","endLine":5,"endColumn":29},{"ruleId":"280","severity":1,"message":"322","line":5,"column":31,"nodeType":"282","messageId":"283","endLine":5,"endColumn":36},{"ruleId":"280","severity":1,"message":"323","line":5,"column":38,"nodeType":"282","messageId":"283","endLine":5,"endColumn":44},{"ruleId":"280","severity":1,"message":"324","line":7,"column":8,"nodeType":"282","messageId":"283","endLine":7,"endColumn":12},{"ruleId":"284","severity":1,"message":"325","line":57,"column":6,"nodeType":"286","endLine":57,"endColumn":8,"suggestions":"326"},{"ruleId":"280","severity":1,"message":"327","line":155,"column":10,"nodeType":"282","messageId":"283","endLine":155,"endColumn":16},{"ruleId":"292","severity":1,"message":"320","line":18,"column":15,"nodeType":"294","endLine":18,"endColumn":18},{"ruleId":"280","severity":1,"message":"328","line":1,"column":10,"nodeType":"282","messageId":"283","endLine":1,"endColumn":18},{"ruleId":"280","severity":1,"message":"329","line":2,"column":8,"nodeType":"282","messageId":"283","endLine":2,"endColumn":18},{"ruleId":"280","severity":1,"message":"319","line":3,"column":18,"nodeType":"282","messageId":"283","endLine":3,"endColumn":21},{"ruleId":"280","severity":1,"message":"330","line":3,"column":43,"nodeType":"282","messageId":"283","endLine":3,"endColumn":46},{"ruleId":"280","severity":1,"message":"331","line":10,"column":19,"nodeType":"282","messageId":"283","endLine":10,"endColumn":29},{"ruleId":"280","severity":1,"message":"328","line":1,"column":10,"nodeType":"282","messageId":"283","endLine":1,"endColumn":18},{"ruleId":"280","severity":1,"message":"323","line":2,"column":10,"nodeType":"282","messageId":"283","endLine":2,"endColumn":16},{"ruleId":"280","severity":1,"message":"319","line":2,"column":18,"nodeType":"282","messageId":"283","endLine":2,"endColumn":21},{"ruleId":"280","severity":1,"message":"332","line":2,"column":23,"nodeType":"282","messageId":"283","endLine":2,"endColumn":27},{"ruleId":"280","severity":1,"message":"333","line":2,"column":29,"nodeType":"282","messageId":"283","endLine":2,"endColumn":34},{"ruleId":"280","severity":1,"message":"330","line":2,"column":43,"nodeType":"282","messageId":"283","endLine":2,"endColumn":46},{"ruleId":"280","severity":1,"message":"328","line":1,"column":10,"nodeType":"282","messageId":"283","endLine":1,"endColumn":18},{"ruleId":"280","severity":1,"message":"323","line":2,"column":10,"nodeType":"282","messageId":"283","endLine":2,"endColumn":16},{"ruleId":"280","severity":1,"message":"319","line":2,"column":18,"nodeType":"282","messageId":"283","endLine":2,"endColumn":21},{"ruleId":"280","severity":1,"message":"332","line":2,"column":23,"nodeType":"282","messageId":"283","endLine":2,"endColumn":27},{"ruleId":"280","severity":1,"message":"333","line":2,"column":29,"nodeType":"282","messageId":"283","endLine":2,"endColumn":34},{"ruleId":"280","severity":1,"message":"330","line":2,"column":43,"nodeType":"282","messageId":"283","endLine":2,"endColumn":46},{"ruleId":"280","severity":1,"message":"328","line":1,"column":10,"nodeType":"282","messageId":"283","endLine":1,"endColumn":18},{"ruleId":"280","severity":1,"message":"323","line":2,"column":10,"nodeType":"282","messageId":"283","endLine":2,"endColumn":16},{"ruleId":"280","severity":1,"message":"319","line":2,"column":18,"nodeType":"282","messageId":"283","endLine":2,"endColumn":21},{"ruleId":"280","severity":1,"message":"332","line":2,"column":23,"nodeType":"282","messageId":"283","endLine":2,"endColumn":27},{"ruleId":"280","severity":1,"message":"333","line":2,"column":29,"nodeType":"282","messageId":"283","endLine":2,"endColumn":34},{"ruleId":"280","severity":1,"message":"330","line":2,"column":43,"nodeType":"282","messageId":"283","endLine":2,"endColumn":46},"no-native-reassign",["334"],"no-negated-in-lhs",["335"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["336"],"'socket' is defined but never used.",["337"],"'useEffect' is defined but never used.","'Checkbox' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["338"],"'ADD_INVITATION' is defined but never used.","'DELETE_INVITATION' is defined but never used.","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["339"],"'WinModal' is defined but never used.","'isWinModalVisible' is assigned a value but never used.","'setWinModalVisible' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props', 'roomId', and 'token'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["340"],"'QuickJoinButton' is defined but never used.","'listRoom' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'waitingLoading'. Either include it or remove the dependency array. You can also do a functional update 'setWaitingLoading(w => ...)' if you only need 'waitingLoading' in the 'setWaitingLoading' call.",["341"],"'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'historyGame' is assigned a value but never used.","'setHistoryHame' is assigned a value but never used.","'getHistory' is assigned a value but never used.","'setListHistory' is assigned a value but never used.","'Tooltip' is defined but never used.","'Avatar' is defined but never used.","'invitations' is assigned a value but never used.","'setInvitations' is assigned a value but never used.","'Col' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Statistic' is defined but never used.","'Modal' is defined but never used.","'Button' is defined but never used.","'Move' is defined but never used.","React Hook useEffect has missing dependencies: 'isFinish', 'sizeBoard', 'state.squares', and 'username'. Either include them or remove the dependency array.",["342"],"'isFull' is defined but never used.","'useState' is defined but never used.","'callServer' is defined but never used.","'Row' is defined but never used.","'setInvited' is assigned a value but never used.","'Form' is defined but never used.","'Input' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"343","fix":"344"},{"desc":"343","fix":"345"},{"desc":"343","fix":"346"},{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},"Update the dependencies array to be: [props]",{"range":"355","text":"356"},{"range":"357","text":"356"},{"range":"358","text":"356"},"Update the dependencies array to be: [token]",{"range":"359","text":"360"},"Update the dependencies array to be: [props, roomId, token]",{"range":"361","text":"362"},"Update the dependencies array to be: [waitingLoading]",{"range":"363","text":"364"},"Update the dependencies array to be: [isFinish, sizeBoard, state.squares, username]",{"range":"365","text":"366"},[1072,1074],"[props]",[525,527],[1686,1688],[821,823],"[token]",[3755,3757],"[props, roomId, token]",[2077,2079],"[waitingLoading]",[2179,2181],"[isFinish, sizeBoard, state.squares, username]"]