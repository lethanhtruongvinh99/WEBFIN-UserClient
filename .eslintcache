[{"D:\\HK7\\ReactLTTV\\FinalProject\\webfin-userclient\\src\\index.js":"1","D:\\HK7\\ReactLTTV\\FinalProject\\webfin-userclient\\src\\reportWebVitals.js":"2","D:\\HK7\\ReactLTTV\\FinalProject\\webfin-userclient\\src\\App.js":"3","D:\\HK7\\ReactLTTV\\FinalProject\\webfin-userclient\\src\\store\\index.js":"4","D:\\HK7\\ReactLTTV\\FinalProject\\webfin-userclient\\src\\reducers\\user-reducer.js":"5","D:\\HK7\\ReactLTTV\\FinalProject\\webfin-userclient\\src\\containers\\homepage\\index.js":"6","D:\\HK7\\ReactLTTV\\FinalProject\\webfin-userclient\\src\\containers\\login-form\\index.js":"7","D:\\HK7\\ReactLTTV\\FinalProject\\webfin-userclient\\src\\containers\\register-form\\index.js":"8","D:\\HK7\\ReactLTTV\\FinalProject\\webfin-userclient\\src\\constants\\action-types.js":"9","D:\\HK7\\ReactLTTV\\FinalProject\\webfin-userclient\\src\\utils\\NetworkUtils.js":"10","D:\\HK7\\ReactLTTV\\FinalProject\\webfin-userclient\\src\\utils\\NotificationUtils.js":"11","D:\\HK7\\ReactLTTV\\FinalProject\\webfin-userclient\\src\\api\\index.js":"12"},{"size":592,"mtime":1607269164175,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1606976365402,"results":"15","hashOfConfig":"14"},{"size":778,"mtime":1607269164172,"results":"16","hashOfConfig":"14"},{"size":213,"mtime":1607269164176,"results":"17","hashOfConfig":"14"},{"size":425,"mtime":1607269164176,"results":"18","hashOfConfig":"14"},{"size":944,"mtime":1607418864685,"results":"19","hashOfConfig":"14"},{"size":3678,"mtime":1607345761433,"results":"20","hashOfConfig":"14"},{"size":4383,"mtime":1607346310091,"results":"21","hashOfConfig":"14"},{"size":54,"mtime":1607269164172,"results":"22","hashOfConfig":"14"},{"size":441,"mtime":1607343738967,"results":"23","hashOfConfig":"14"},{"size":286,"mtime":1607269164177,"results":"24","hashOfConfig":"14"},{"size":184,"mtime":1607419085906,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"15lh3rl",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\HK7\\ReactLTTV\\FinalProject\\webfin-userclient\\src\\index.js",[],["54","55"],"D:\\HK7\\ReactLTTV\\FinalProject\\webfin-userclient\\src\\reportWebVitals.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\webfin-userclient\\src\\App.js",["56","57"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport React from 'react';\r\nimport LoginForm from './containers/login-form/index';\r\nimport RegisterForm from './containers/register-form/index';\r\nimport Homepage from './containers/homepage/index';\r\nimport\r\n{\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  Link\r\n} from 'react-router-dom';\r\n\r\nfunction App()\r\n{\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/home\" component={Homepage} />\r\n        <Route exact path=\"/login\" component={LoginForm} />\r\n        <Route exact path=\"/register\" component={RegisterForm} />\r\n        <Route path=\"/\" component={LoginForm}>\r\n          <Redirect to=\"/home\" />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\HK7\\ReactLTTV\\FinalProject\\webfin-userclient\\src\\store\\index.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\webfin-userclient\\src\\reducers\\user-reducer.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\webfin-userclient\\src\\containers\\homepage\\index.js",["58","59","60"],"D:\\HK7\\ReactLTTV\\FinalProject\\webfin-userclient\\src\\containers\\login-form\\index.js",["61"],"import React, { useEffect, useState } from \"react\";\r\nimport { Form, Input, Button, Checkbox, Divider, Spin } from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  LockOutlined,\r\n  FacebookFilled,\r\n  GoogleCircleFilled,\r\n} from \"@ant-design/icons\";\r\nimport callServer from \"../../utils/NetworkUtils\";\r\nimport showNotification from \"../../utils/NotificationUtils\";\r\nimport \"./index.css\";\r\n\r\nconst LoginForm = (props) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  useEffect(() => {\r\n    console.log(\"Login Form\");\r\n  }, []);\r\n  const onFinish = async (values) => {\r\n    console.log(\"Received values of form: \", values);\r\n    setIsLoading(true);\r\n    const data = {\r\n      ...values,\r\n    };\r\n\r\n    const result = await callServer(\r\n      process.env.REACT_APP_HOST_NAME + \"/auth/login\",\r\n      \"post\",\r\n      data\r\n    );\r\n    // console.log(result);\r\n    if (result.auth) {\r\n      setIsLoading(false);\r\n      localStorage.setItem(\"token\", result.accessToken);\r\n      props.history.push(\"/home\");\r\n    } else {\r\n      showNotification(\"error\", result.message);\r\n    }\r\n  };\r\n\r\n  const handleRegisterClick = () => {\r\n    props.history.push(\"/register\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h1 style={{ textAlign: \"center\", margin: \"40px 0px\", fontSize: \"32px\" }}>\r\n        Login\r\n      </h1>\r\n      <Form\r\n        name=\"normal_login\"\r\n        className=\"login-form\"\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n      >\r\n        <Button\r\n          type=\"primary\"\r\n          danger\r\n          className=\"login-form-button\"\r\n          style={{ margin: \"10px 0px\" }}\r\n          icon={<GoogleCircleFilled />}\r\n        >\r\n          Log in with Google\r\n        </Button>\r\n        <Button\r\n          type=\"primary\"\r\n          className=\"login-form-button\"\r\n          style={{ margin: \"10px 0px\" }}\r\n          icon={<FacebookFilled />}\r\n        >\r\n          Log in with Facebook\r\n        </Button>\r\n        <Divider />\r\n        <Form.Item\r\n          name=\"username\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Username!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Username\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Password!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n            <Checkbox>Remember me</Checkbox>\r\n          </Form.Item>\r\n\r\n          <a className=\"login-form-forgot\" href=\"\">\r\n            Forgot password\r\n          </a>\r\n        </Form.Item>\r\n        {isLoading ? (\r\n          <div className=\"loading-spinner\">\r\n            <Spin size=\"large\" />\r\n          </div>\r\n        ) : null}\r\n        <Form.Item className=\"button-row\">\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            Log in\r\n          </Button>\r\n          <div style={{ margin: \"15px 0px\", textAlign: \"center\" }}>Or</div>\r\n          <Button type=\"dashed\" onClick={handleRegisterClick}>\r\n            Register\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","D:\\HK7\\ReactLTTV\\FinalProject\\webfin-userclient\\src\\containers\\register-form\\index.js",["62"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Input, Button, DatePicker, Spin } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport \"./index.css\";\r\nimport callServer from \"../../utils/NetworkUtils\";\r\nimport showNotification from \"../../utils/NotificationUtils\";\r\n\r\nconst RegisterForm = (props) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const onFinish = async (values) => {\r\n    console.log(\"Received values of form: \", values);\r\n    setIsLoading(true);\r\n    if (values.password !== values.passwordConfirm) {\r\n      showNotification(\"error\", \"Password does not match!\");\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      ...values,\r\n      role: 0,\r\n      isCreatedAt: new Date(),\r\n    };\r\n\r\n    const result = await callServer(\r\n      process.env.REACT_APP_HOST_NAME + \"/auth/signup\",\r\n      \"post\",\r\n      data\r\n    );\r\n    if (result.auth) {\r\n      setIsLoading(false);\r\n      localStorage.setItem(\"token\", result.accessToken);\r\n      props.history.push(\"/home\");\r\n    } else {\r\n      showNotification(\"error\", result.message);\r\n    }\r\n  };\r\n\r\n  const handleLoginClick = () => {\r\n    props.history.push(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-container\">\r\n      <h1 style={{ textAlign: \"center\", margin: \"40px 0px\", fontSize: \"32px\" }}>\r\n        Register\r\n      </h1>\r\n      <Form\r\n        name=\"normal_register\"\r\n        className=\"register-form\"\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n      >\r\n        <Form.Item\r\n          name=\"username\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Username!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Username\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"email\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Email!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Email\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"fullName\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your full name!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Full name\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"dob\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your DOB!\",\r\n            },\r\n          ]}\r\n        >\r\n          <DatePicker placeholder=\"Date of birth\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Password!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"passwordConfirm\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please confirm your Password!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n          />\r\n        </Form.Item>\r\n        {isLoading ? (\r\n          <div className=\"loading-spinner\">\r\n            <Spin size=\"large\" />\r\n          </div>\r\n        ) : null}\r\n        <Form.Item className=\"button-row\">\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"register-form-button\"\r\n          >\r\n            Register\r\n          </Button>\r\n\r\n          <div style={{ margin: \"15px 0px\", textAlign: \"center\" }}>Or</div>\r\n          <Button type=\"dashed\" onClick={handleLoginClick}>\r\n            Log in\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","D:\\HK7\\ReactLTTV\\FinalProject\\webfin-userclient\\src\\constants\\action-types.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\webfin-userclient\\src\\utils\\NetworkUtils.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\webfin-userclient\\src\\utils\\NotificationUtils.js",[],"D:\\HK7\\ReactLTTV\\FinalProject\\webfin-userclient\\src\\api\\index.js",["63","64"],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":1,"column":8,"nodeType":"71","messageId":"72","endLine":1,"endColumn":12},{"ruleId":"69","severity":1,"message":"73","line":13,"column":3,"nodeType":"71","messageId":"72","endLine":13,"endColumn":7},{"ruleId":"69","severity":1,"message":"74","line":2,"column":28,"nodeType":"71","messageId":"72","endLine":2,"endColumn":36},{"ruleId":"69","severity":1,"message":"75","line":3,"column":8,"nodeType":"71","messageId":"72","endLine":3,"endColumn":15},{"ruleId":"76","severity":1,"message":"77","line":19,"column":6,"nodeType":"78","endLine":19,"endColumn":8,"suggestions":"79"},{"ruleId":"80","severity":1,"message":"81","line":109,"column":11,"nodeType":"82","endLine":109,"endColumn":52},{"ruleId":"69","severity":1,"message":"83","line":1,"column":27,"nodeType":"71","messageId":"72","endLine":1,"endColumn":36},{"ruleId":"69","severity":1,"message":"84","line":1,"column":10,"nodeType":"71","messageId":"72","endLine":1,"endColumn":17},{"ruleId":"69","severity":1,"message":"85","line":6,"column":11,"nodeType":"71","messageId":"72","endLine":6,"endColumn":17},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useState' is defined but never used.","'Connect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["88"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","'message' is defined but never used.","'socket' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},"Update the dependencies array to be: [props.history]",{"range":"91","text":"92"},[580,582],"[props.history]"]