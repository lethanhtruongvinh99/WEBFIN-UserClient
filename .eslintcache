[{"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\index.js":"1","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\App.js":"2","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\reportWebVitals.js":"3","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\store\\index.js":"4","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\reducers\\user-reducer.js":"5","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\homepage\\index.js":"6","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\room\\index.js":"7","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\register-form\\index.js":"8","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\login-form\\index.js":"9","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\auth-redirect\\index.js":"10","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\constants\\action-types.js":"11","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\actions\\user-actions.js":"12","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\utils\\NetworkUtils.js":"13","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\utils\\NotificationUtils.js":"14","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\chat-messages\\index.js":"15","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\header\\index.js":"16","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\move\\index.js":"17","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\api\\index.js":"18","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\board\\index.js":"19","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\square\\index.js":"20","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\game\\index.js":"21"},{"size":592,"mtime":1607869236768,"results":"22","hashOfConfig":"23"},{"size":999,"mtime":1607869236750,"results":"24","hashOfConfig":"23"},{"size":375,"mtime":1607869236770,"results":"25","hashOfConfig":"23"},{"size":219,"mtime":1607869236772,"results":"26","hashOfConfig":"23"},{"size":700,"mtime":1607869236769,"results":"27","hashOfConfig":"23"},{"size":4913,"mtime":1607953063630,"results":"28","hashOfConfig":"23"},{"size":4668,"mtime":1608985409391,"results":"29","hashOfConfig":"23"},{"size":4797,"mtime":1607869236765,"results":"30","hashOfConfig":"23"},{"size":4443,"mtime":1607869236763,"results":"31","hashOfConfig":"23"},{"size":670,"mtime":1607869236760,"results":"32","hashOfConfig":"23"},{"size":131,"mtime":1607869236758,"results":"33","hashOfConfig":"23"},{"size":388,"mtime":1607869236751,"results":"34","hashOfConfig":"23"},{"size":441,"mtime":1607869236773,"results":"35","hashOfConfig":"23"},{"size":286,"mtime":1607869236774,"results":"36","hashOfConfig":"23"},{"size":743,"mtime":1607953063626,"results":"37","hashOfConfig":"23"},{"size":1872,"mtime":1607869236756,"results":"38","hashOfConfig":"23"},{"size":728,"mtime":1608050261119,"results":"39","hashOfConfig":"23"},{"size":114,"mtime":1607869236752,"results":"40","hashOfConfig":"23"},{"size":917,"mtime":1609057147865,"results":"41","hashOfConfig":"23"},{"size":385,"mtime":1607959358829,"results":"42","hashOfConfig":"23"},{"size":5376,"mtime":1609060964673,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"bk8xc",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"46"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\index.js",[],["98","99"],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\App.js",["100"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport React from 'react';\r\nimport LoginForm from './containers/login-form/index';\r\nimport RegisterForm from './containers/register-form/index';\r\nimport Homepage from './containers/homepage/index';\r\nimport AuthRedirect from './containers/auth-redirect/index';\r\nimport Room from '../src/containers/room/index';\r\nimport\r\n{\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from 'react-router-dom';\r\n\r\nfunction App()\r\n{\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path= \"/room/:id\" component = {Room} />\r\n        <Route exact path = \"/auth/:token\" component={AuthRedirect} />\r\n        <Route exact path=\"/home\" component={Homepage} />\r\n        <Route exact path=\"/login\" component={LoginForm} />\r\n        <Route exact path=\"/register\" component={RegisterForm} />\r\n        <Route exact path=\"/\">\r\n          <Redirect to=\"/home\" />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\reportWebVitals.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\store\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\reducers\\user-reducer.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\homepage\\index.js",["101"],"import {\r\n  Button,\r\n  Input,\r\n  Empty,\r\n  Row,\r\n  Col,\r\n  Avatar,\r\n  Tooltip,\r\n  Modal,\r\n  Select,\r\n  Form,\r\n} from \"antd\";\r\nimport { PlusOutlined, EnterOutlined } from \"@ant-design/icons\";\r\nimport { React, useEffect, useState } from \"react\";\r\nimport { socket } from \"../../api\";\r\nimport { connect } from \"react-redux\";\r\nimport Header from \"../../components/header/index\";\r\nimport { onlineUsersChanged } from \"../../actions/user-actions\";\r\nimport \"./index.css\";\r\nimport callServer from \"../../utils/NetworkUtils\";\r\n\r\nconst mapDispatchToProps = { onlineUsersChanged };\r\nconst mapStateToProps = (state) => {\r\n  const { onlineUsers, token } = state.user;\r\n  return { onlineUsers, token };\r\n};\r\n\r\nconst Homepage = (props) => {\r\n  const [roomId, setRoomId] = useState(\"\");\r\n  const [isModalVisible, setModalVisible] = useState(false);\r\n\r\n  const handleOk = () => {\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setModalVisible(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on(\"onlineUsersChanged\", (data) => {\r\n      props.onlineUsersChanged(data.onlineUsers);\r\n    });\r\n  }, []);\r\n\r\n  let onlineUsers = !props.token ? (\r\n    <Empty description=\"\" />\r\n  ) : (\r\n    props.onlineUsers.map((item) => (\r\n      <Tooltip title={item.username} placement=\"top\">\r\n        <Avatar className=\"avatar\" size=\"large\">\r\n          {item.username.charAt(0).toUpperCase()}\r\n        </Avatar>\r\n      </Tooltip>\r\n    ))\r\n  );\r\n\r\n  const openCreateRoomModal = () => {\r\n    setModalVisible(true);\r\n  };\r\n\r\n  const handleJoinRoom = async () => {\r\n    console.log(roomId);\r\n    //logged in and not logged in\r\n    //the first is logged in case\r\n    const data = { roomId: roomId };\r\n    const result = await callServer(\r\n      process.env.REACT_APP_HOST_NAME + \"/room/join\",\r\n      \"post\",\r\n      data\r\n    );\r\n    // console.log(result);\r\n    if (result.status === 200) {\r\n      props.history.push(`/room/${result._id}`);\r\n    }\r\n  };\r\n\r\n  const handleCreateRoom = async (values) => {\r\n    const data = { ...values };\r\n    // console.log(data);\r\n    const result = await callServer(\r\n      process.env.REACT_APP_HOST_NAME + \"/room/add\",\r\n      \"post\",\r\n      data\r\n    );\r\n    // console.log(result);\r\n    //Call API to create a room, after that, receive room id to go to /room?id={roomId response from server}\r\n    props.history.push(`/room/${result._id}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header history={props.history} />\r\n      <Row>\r\n        <h1 style={{ textAlign: \"center\", margin: \"auto\" }}>\r\n          Join or Create a Room\r\n        </h1>\r\n      </Row>\r\n      <Row>\r\n        <Input\r\n          className=\"input\"\r\n          placeholder=\"Room ID to join\"\r\n          onChange={(e) => setRoomId(e.target.value)}\r\n        />\r\n      </Row>\r\n      <Row gutter={[16, 0]} justify=\"center\">\r\n        <Col>\r\n          <Button\r\n            type=\"primary\"\r\n            icon={<EnterOutlined />}\r\n            onClick={() => handleJoinRoom()}\r\n          >\r\n            Join\r\n          </Button>\r\n        </Col>\r\n        <Col>\r\n          <Button\r\n            type=\"dashed\"\r\n            icon={<PlusOutlined />}\r\n            onClick={openCreateRoomModal}\r\n          >\r\n            Create a new Room\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <h2 style={{ textAlign: \"center\", margin: \"30px auto\" }}>Online now</h2>\r\n      <Row gutter={[16, 0]} className=\"avatar-row\" justify=\"center\">\r\n        {onlineUsers}\r\n      </Row>\r\n\r\n      <Modal\r\n        centered\r\n        footer={[]}\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        <div className=\"board-modal\">\r\n          <h1>New board</h1>\r\n\r\n          <Form\r\n            onFinish={handleCreateRoom}\r\n            name=\"createBoardForm\"\r\n            className=\"board-form\"\r\n          >\r\n            <Form.Item\r\n              name=\"boardSize\"\r\n              rules={[{ required: true, message: \"Please choose board size!\" }]}\r\n            >\r\n              <Select\r\n                style={{ height: \"40px\", borderRadius: \"20px\", width: 150 }}\r\n                placeholder=\"Board size\"\r\n              >\r\n                <option value=\"5\">5</option>\r\n                <option value=\"10\">10</option>\r\n                <option value=\"20\">20</option>\r\n                <option value=\"50\">50</option>\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"roomName\"\r\n              rules={[{ required: true, message: \"Please input board name!\" }]}\r\n            >\r\n              <Input className=\"board-input\" placeholder=\"Room name\" />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Create\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Homepage);\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\room\\index.js",["102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120"],"import {\r\n  Button,\r\n  Input,\r\n  Empty,\r\n  Row,\r\n  Col,\r\n  Avatar,\r\n  Tooltip,\r\n  Layout,\r\n  Typography,\r\n  Statistic,\r\n} from \"antd\";\r\nimport { BulbOutlined } from \"@ant-design/icons\";\r\nimport { React, useEffect, useState } from \"react\";\r\nimport { socket } from \"../../api\";\r\nimport { connect } from \"react-redux\";\r\nimport ChatMessage from \"../../components/chat-messages/index\";\r\nimport Header from \"../../components/header/index\";\r\nimport { onlineUsersChanged } from \"../../actions/user-actions\";\r\nimport \"./index.css\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport Move from \"../../components/move/index\";\r\nimport { useHistory } from \"react-router\";\r\nimport callServer from \"../../utils/NetworkUtils\";\r\nimport Board from \"../../components/board/index\";\r\nimport Square from \"../../components/square/index\";\r\nimport Game from \"../../components/game/index\";\r\nconst { Sider } = Layout;\r\nconst { Text } = Typography;\r\n\r\nconst Room = (props) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [turnName, setTurnName] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [roomId, setRoomId] = useState(\"\");\r\n  const history = useHistory();\r\n  const urlToken = history.location.pathname.split(\"/\");\r\n  const roomIdT = urlToken[urlToken.length - 1];\r\n\r\n  useEffect(() => {\r\n    // console.log(roomIdT);\r\n    setRoomId(urlToken[urlToken.length - 1]);\r\n    socket.emit(\"join\", { roomIdT, token });\r\n  }, []);\r\n  useEffect(() => {\r\n    socket.on(\"turnName\", (response) => {\r\n      console.log(\"---- SOCKET: ON_turnName: \", response);\r\n      setTurnName(response);\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    socket.on(\"message\", (response) => {\r\n      setMessages([...messages, response]);\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    socket.on(\"Username\", (response) => {\r\n      setUsername(response);\r\n      console.log(\"----Socket: ON Username -----\");\r\n      console.log(\"RESPONE: \", response);\r\n      console.log(\"USERNAME: \", username);\r\n    });\r\n  }, []);\r\n  const sendMessage = async (e) => {\r\n    if (e.keyCode === 13) {\r\n      console.log(roomIdT + \" \" + message);\r\n      if (message) {\r\n        const result = await callServer(\r\n          process.env.REACT_APP_HOST_NAME + \"/message/add\",\r\n          \"post\",\r\n          { roomId: roomIdT, content: message }\r\n        );\r\n        console.log(result);\r\n        if (result.status === 200) {\r\n          const tmpMsg = { message: result.content, username: result.username };\r\n          setMessages([...messages, tmpMsg]);\r\n          socket.emit(\"sendMessage\", { roomIdT, message, token });\r\n        }\r\n        // console.log(message);\r\n        setMessage(\"\");\r\n      } else {\r\n        // console.log(\"null\");\r\n      }\r\n    }\r\n  };\r\n  // console.log(messages);\r\n  const handleClick = (i) => {};\r\n  return (\r\n    <div className=\"room-container\">\r\n      <Row>\r\n        <Header history={props.history} />\r\n      </Row>\r\n      <Row className=\"room-row\">\r\n        <Col className=\"playing-area\" span={16}>\r\n          <Game Username={username} size={20} TurnName={turnName}></Game>\r\n        </Col>\r\n        {/* <Col className=\"info-area\" span={5}>\r\n          <Row className=\"general-info\" justify=\"center\" align=\"middle\">\r\n            <Col span={8}>\r\n              <Statistic title=\"Player turn\" value=\"nhatvinh43\" />\r\n            </Col>\r\n            <Col span={8}>\r\n              <Statistic title=\"Symbol\" value=\"X \" />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"info-container\">\r\n            <Move />\r\n            <Move />\r\n            <Move />\r\n            <Move />\r\n            <Move />\r\n            <Move />\r\n            <Move />\r\n            <Move />\r\n            <Move />\r\n          </Row>\r\n        </Col> */}\r\n        <Col className=\"chat-box\" span={8}>\r\n          <div className=\"message-container\">\r\n            <div className=\"message-container-inner\">\r\n              {messages.map((item) => (\r\n                <ChatMessage\r\n                  key={item.message}\r\n                  content={item.message}\r\n                  username={item.username}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <TextArea\r\n            placeholder=\"Type your message here\"\r\n            autoSize={{ minRows: 2, maxRows: 2 }}\r\n            className=\"message-input-box\"\r\n            value={message}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n            onKeyDown={(e) => sendMessage(e)}\r\n            required={true}\r\n          ></TextArea>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\register-form\\index.js",["121"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Input, Button, DatePicker, Spin } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport \"./index.css\";\r\nimport callServer from \"../../utils/NetworkUtils\";\r\nimport showNotification from \"../../utils/NotificationUtils\";\r\nimport { socket } from \"../../api\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/user-actions\";\r\n\r\nconst mapDispatchToProps = { login };\r\nconst mapStateToProps = (state) => {\r\n  const { token } = state.user;\r\n  return { token };\r\n};\r\n\r\nconst RegisterForm = (props) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const onFinish = async (values) => {\r\n    console.log(\"Received values of form: \", values);\r\n    setIsLoading(true);\r\n    if (values.password !== values.passwordConfirm) {\r\n      showNotification(\"error\", \"Password does not match!\");\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      ...values,\r\n      role: 0,\r\n      isCreatedAt: new Date(),\r\n    };\r\n\r\n    const result = await callServer(\r\n      process.env.REACT_APP_HOST_NAME + \"/auth/signup\",\r\n      \"post\",\r\n      data\r\n    );\r\n    if (result.auth) {\r\n      setIsLoading(false);\r\n      localStorage.setItem(\"token\", result.accessToken);\r\n      props.login(result.accessToken);\r\n      socket.emit(\"login\", { token: result.accessToken });\r\n      props.history.push(\"/home\");\r\n    } else {\r\n      showNotification(\"error\", result.message);\r\n    }\r\n  };\r\n\r\n  const handleLoginClick = () => {\r\n    props.history.push(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-container\">\r\n      <h1 style={{ textAlign: \"center\", margin: \"40px 0px\", fontSize: \"32px\" }}>\r\n        Register\r\n      </h1>\r\n      <Form\r\n        name=\"normal_register\"\r\n        className=\"register-form\"\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n      >\r\n        <Form.Item\r\n          name=\"username\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Username!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Username\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"email\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Email!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Email\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"fullName\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your full name!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Full name\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"dob\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your DOB!\",\r\n            },\r\n          ]}\r\n        >\r\n          <DatePicker placeholder=\"Date of birth\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Password!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"passwordConfirm\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please confirm your Password!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n          />\r\n        </Form.Item>\r\n        {isLoading ? (\r\n          <div className=\"loading-spinner\">\r\n            <Spin size=\"large\" />\r\n          </div>\r\n        ) : null}\r\n        <Form.Item className=\"button-row\">\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"register-form-button\"\r\n          >\r\n            Register\r\n          </Button>\r\n\r\n          <div style={{ margin: \"15px 0px\", textAlign: \"center\" }}>Or</div>\r\n          <Button type=\"dashed\" onClick={handleLoginClick}>\r\n            Log in\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (RegisterForm);\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\login-form\\index.js",["122"],"import React, { useEffect, useState } from \"react\";\r\nimport { Form, Input, Button, Checkbox, Divider, Spin } from \"antd\";\r\nimport\r\n  {\r\n    UserOutlined,\r\n    LockOutlined,\r\n    FacebookFilled,\r\n    GoogleCircleFilled,\r\n  } from \"@ant-design/icons\";\r\nimport callServer from \"../../utils/NetworkUtils\";\r\nimport showNotification from \"../../utils/NotificationUtils\";\r\nimport { socket } from \"../../api\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/user-actions\";\r\nimport \"./index.css\";\r\n\r\nconst mapDispatchToProps = { login };\r\nconst mapStateToProps = (state) =>\r\n{\r\n  const { token } = state.user;\r\n  return { token };\r\n};\r\n\r\nconst LoginForm = (props) =>\r\n{\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() =>\r\n  {\r\n    console.log(\"Login Form\");\r\n  }, []);\r\n\r\n  const onFinish = async (values) =>\r\n  {\r\n    console.log(\"Received values of form: \", values);\r\n    setIsLoading(true);\r\n    const data = {\r\n      ...values,\r\n    };\r\n\r\n    const result = await callServer(\r\n      process.env.REACT_APP_HOST_NAME + \"/auth/login\",\r\n      \"post\",\r\n      data\r\n    );\r\n    // console.log(result);\r\n    if (result.auth)\r\n    {\r\n      setIsLoading(false);\r\n      localStorage.setItem(\"token\", result.accessToken);\r\n      props.login(result.accessToken);\r\n      socket.emit(\"login\", { token: result.accessToken });\r\n      props.history.push(\"/home\");\r\n    } else\r\n    {\r\n      showNotification(\"error\", result.message);\r\n    }\r\n  };\r\n\r\n  const handleRegisterClick = () =>\r\n  {\r\n    props.history.push(\"/register\");\r\n  };\r\n\r\n  const handleFacebookLogin = () =>\r\n  {\r\n    window.open(process.env.REACT_APP_HOST_NAME + \"/auth/facebook\", \"_self\");\r\n  };\r\n\r\n  const handleGoogleLogin = () =>\r\n  {\r\n    window.open(process.env.REACT_APP_HOST_NAME + \"/auth/google\", \"_self\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h1 style={{ textAlign: \"center\", fontSize: \"32px\" }}>\r\n        Login\r\n      </h1>\r\n      <Form\r\n        name=\"normal_login\"\r\n        className=\"login-form\"\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n      >\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={handleGoogleLogin}\r\n          danger\r\n          className=\"login-form-button\"\r\n          style={{ margin: \"10px 0px\" }}\r\n          icon={<GoogleCircleFilled />}\r\n        >\r\n          Log in with Google\r\n        </Button>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={handleFacebookLogin}\r\n          className=\"login-form-button\"\r\n          style={{ margin: \"10px 0px\" }}\r\n          icon={<FacebookFilled />}\r\n        >\r\n          Log in with Facebook\r\n        </Button>\r\n        <Divider />\r\n        <Form.Item\r\n          name=\"username\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Username!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Username\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Password!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n            <Checkbox>Remember me</Checkbox>\r\n          </Form.Item>\r\n\r\n          <a className=\"login-form-forgot\" href=\"\">\r\n            Forgot password\r\n          </a>\r\n        </Form.Item>\r\n        {isLoading ? (\r\n          <div className=\"loading-spinner\">\r\n            <Spin size=\"large\" />\r\n          </div>\r\n        ) : null}\r\n        <Form.Item className=\"button-row\">\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            Log in\r\n          </Button>\r\n          <div style={{ margin: \"15px 0px\", textAlign: \"center\" }}>Or</div>\r\n          <Button type=\"dashed\" onClick={handleRegisterClick}>\r\n            Register\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\auth-redirect\\index.js",["123"],"import React, { useEffect } from \"react\";\r\nimport { socket } from \"../../api\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/user-actions\";\r\n\r\nconst mapDispatchToProps = { login };\r\nconst mapStateToProps = (state) => {\r\n  const { token } = state.user;\r\n  return { token };\r\n};\r\n\r\nconst AuthRedirect = (props) => {\r\n  useEffect(() => {\r\n    const token = props.match.params.token;\r\n    localStorage.setItem(\"token\", token);\r\n    props.login(token);\r\n    socket.emit(\"login\", { token: token });\r\n    props.history.push(\"/home\");\r\n  }, []);\r\n  return <></>;\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthRedirect);\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\constants\\action-types.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\actions\\user-actions.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\utils\\NetworkUtils.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\utils\\NotificationUtils.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\chat-messages\\index.js",["124","125","126","127","128","129","130","131"],"import React from \"react\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Button,\r\n  Input,\r\n  Empty,\r\n  Row,\r\n  Col,\r\n  Avatar,\r\n  Tooltip,\r\n  Layout,\r\n  Typography,\r\n  Comment,\r\n} from \"antd\";\r\n\r\nconst ChatMessage = (props) => {\r\n  return (\r\n    <Comment\r\n      author={<a>{props.username}</a>}\r\n      avatar={\r\n        <Avatar\r\n          src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n          alt=\"Han Solo\"\r\n        />\r\n      }\r\n      content={\r\n        <p>\r\n          {props.content}\r\n        </p>\r\n      }\r\n      datetime={\r\n        <Tooltip title={moment().format(\"YYYY-MM-DD HH:mm:ss\")}>\r\n          <span>{moment().fromNow()}</span>\r\n        </Tooltip>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default ChatMessage;\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\header\\index.js",["132"],"import React, {useEffect} from \"react\";\r\nimport { PageHeader, Button, Tooltip, Avatar } from \"antd\";\r\nimport \"./index.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { socket } from \"../../api\";\r\nimport {logout} from '../../actions/user-actions';\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { token } = state.user;\r\n  return { token };\r\n};\r\n\r\nconst mapDispatchToProps = {logout};\r\n\r\n\r\nconst Header = (props) => {\r\n\r\n  const handleLogoutClick = () => {\r\n    socket.emit(\"logout\", {});\r\n    props.logout();\r\n    localStorage.removeItem(\"token\");\r\n    props.history.push(\"/home\");\r\n  };\r\n\r\n  const handleLoginClick = () => {\r\n    props.history.push(\"/login\");\r\n  };\r\n\r\n  const handleRegisterClick = () => {\r\n    props.history.push(\"/register\");\r\n  }\r\n\r\n  const logout = [\r\n    <Button danger onClick={handleLogoutClick}>\r\n      Logout\r\n    </Button>,\r\n  ];\r\n  const loginAndRegister = [\r\n    <Button type=\"primary\" onClick = {handleRegisterClick}>Register</Button>,\r\n    <Button  onClick = {handleLoginClick}>Login</Button>,\r\n  ];\r\n  const content = props.token ? logout : loginAndRegister;\r\n\r\n  return (\r\n    <div>\r\n      <PageHeader\r\n        className=\"header\"\r\n        ghost={false}\r\n        onBack={() => window.history.back()}\r\n        title=\"Title\"\r\n        subTitle=\"This is a subtitle\"\r\n        extra={[<Tooltip title=\"Example\" placement=\"top\">\r\n        <Avatar className=\"avatar\" size=\"large\">\r\n          N\r\n        </Avatar>\r\n      </Tooltip>,<Tooltip title=\"Example\" placement=\"top\">\r\n        <Avatar className=\"avatar\" size=\"large\">\r\n          N\r\n        </Avatar>\r\n      </Tooltip>,<Tooltip title=\"Example\" placement=\"top\">\r\n        <Avatar className=\"avatar\" size=\"large\">\r\n          N\r\n        </Avatar>\r\n      </Tooltip>,content]}\r\n      ></PageHeader>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\move\\index.js",["133","134","135","136","137","138","139","140"],"import React from \"react\";\r\nimport moment from \"moment\";\r\nimport \"./index.css\";\r\nimport {\r\n  Button,\r\n  Input,\r\n  Empty,\r\n  Row,\r\n  Col,\r\n  Avatar,\r\n  Tooltip,\r\n  Layout,\r\n  Typography,\r\n  Comment,\r\n} from \"antd\";\r\n\r\nconst Move = (props) => {\r\n  return (\r\n    <Comment\r\n      className=\"move\"\r\n      author={<a>Han Solo</a>}\r\n      avatar={\r\n        <Avatar\r\n          src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n          alt=\"Han Solo\"\r\n        />\r\n      }\r\n      content={<p>{props.comment}</p>}\r\n      datetime={\r\n        <Tooltip title={moment().format(\"YYYY-MM-DD HH:mm:ss\")}>\r\n          <span>{moment().fromNow()}</span>\r\n        </Tooltip>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default Move;\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\api\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\board\\index.js",["141","142","143","144","145","146","147","148","149","150","151"],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\square\\index.js",["152","153","154","155","156","157","158","159","160","161","162"],"import React from \"react\";\r\nimport moment from \"moment\";\r\nimport \"./index.css\";\r\nimport {\r\n  Button,\r\n  Input,\r\n  Empty,\r\n  Row,\r\n  Col,\r\n  Avatar,\r\n  Tooltip,\r\n  Layout,\r\n  Typography,\r\n  Comment,\r\n} from \"antd\";\r\n\r\nconst Square = (props) => {\r\n  return (\r\n    <button className=\"square\" onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n};\r\nexport default Square;\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\game\\index.js",["163","164","165","166","167","168","169","170","171","172","173","174","175","176","177"],"import { React, useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport \"./index.css\";\r\nimport Board from \"../../components/board/index\";\r\nimport Square from \"../../components/square/index\";\r\nimport { socket } from \"../../api\";\r\nimport { useHistory } from \"react-router\";\r\nimport Move from \"../move/index\";\r\n\r\nimport {\r\n  Button,\r\n  Input,\r\n  Empty,\r\n  Row,\r\n  Col,\r\n  Avatar,\r\n  Tooltip,\r\n  Layout,\r\n  Typography,\r\n  Statistic,\r\n} from \"antd\";\r\n\r\nfunction Game(props) {\r\n  const token = localStorage.getItem(\"token\");\r\n  const _history = useHistory();\r\n  const urlToken = _history.location.pathname.split(\"/\");\r\n  const roomIdT = urlToken[urlToken.length - 1];\r\n  const [isFinish, setIsFinish] = useState(false);\r\n  const [isMyTurn, setIsMyTurn] = useState(true);\r\n  //const [turnName, setTurnName] = useState(props.turnName);\r\n  const [state, setState] = useState({\r\n    squares: initMatrix(props.size),\r\n    lastMove: -1,\r\n  });\r\n  const username = props.Username;\r\n  const sizeBoard = props.size;\r\n  const turnName = props.TurnName;\r\n\r\n  useEffect(() => {\r\n    socket.on(\"sendMove\", (response) => {\r\n      // console.log(\" ON sendMove ---- Opponent username:\", response.username);\r\n      // console.log(\" ON sendMove ---- Opponent turnname:\", response.opponentTurnName);\r\n      if (response.username !== username && isFinish === false) {\r\n        let squares = state.squares;\r\n        const i = Math.floor(response.move / sizeBoard);\r\n        const j = response.move % sizeBoard;\r\n        squares[i][j] = response.opponentTurnName;\r\n        setState({\r\n          squares: squares,\r\n          lastMove: response.move,\r\n        });\r\n        setIsMyTurn(true);\r\n        if (calculateWinner(state.squares, state.lastMove)) {\r\n          setIsFinish(true);\r\n        }\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const sendMove = async (move, opponentTurnName) => {\r\n    socket.emit(\"sendMove\", { roomIdT, move, token, opponentTurnName });\r\n  };\r\n\r\n  const handleClick = (i) => {\r\n    let squares = state.squares;\r\n    let x = Math.floor(i / squares[0].length);\r\n    let y = i % squares[0].length;\r\n    if (\r\n      !isMyTurn ||\r\n      isFinish ||\r\n      calculateWinner(state.squares, state.lastMove) ||\r\n      squares[x][y]\r\n    ) {\r\n      return;\r\n    }\r\n    squares[x][y] = turnName;\r\n    setState({\r\n      squares,\r\n      lastMove: i,\r\n    });\r\n    setIsMyTurn(false);\r\n    if (calculateWinner(squares, i)) {\r\n      setIsFinish(true);\r\n    }\r\n    sendMove(i, turnName);\r\n  };\r\n\r\n  // const winner = calculateWinner(state.squares, state.lastMove);\r\n  // let status;\r\n  // if (winner) {\r\n  //   status = \"Winner: \" + winner;\r\n  // } else {\r\n  //   if (isFull(state.squares)) status = \"### DRAW ###\";\r\n  //   else {\r\n  //     var opponentTurnName = turnName === \"X\" ? \"O\" : \"X\";\r\n  //     status = \"Next player: \" + (isMyTurn ? turnName : opponentTurnName);\r\n  //   }\r\n  // }\r\n  return (\r\n    <div className=\"game-area\">\r\n      <div className=\"game-board\">\r\n        <Board\r\n          squares={state.squares}\r\n          onClick={(i) => handleClick(i)}\r\n          size={props.size}\r\n        />\r\n      </div>\r\n      <div className=\"game-info\">\r\n        {/* <div>{status}</div> */}\r\n        {/* <ol>{moves}</ol> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction calculateWinner(squares, lastMove) {\r\n  if (lastMove < 0) return null;\r\n  var i = Math.floor(lastMove / squares[0].length);\r\n  var j = lastMove % squares[i].length;\r\n  var prevTurn = squares[i][j];\r\n  console.log(\"CAL WINNER:\", checkWin(squares, i, j));\r\n  if (checkWin(squares, i, j)) return prevTurn;\r\n  return null;\r\n}\r\n\r\nfunction isValidCord(sizeBoard, x, y) {\r\n  return !(x < 0 || x >= sizeBoard || y < 0 || y >= sizeBoard);\r\n}\r\n\r\n// i,j là nước mới đánh\r\n// return true khi nước cờ (i,j) dành chiến thắng\r\n//        false khi chưa ai thắng\r\nfunction checkWin(squares, i, j) {\r\n  var prevTurn = squares[i][j];\r\n  var count = 1;\r\n  var x = i;\r\n  var y = j;\r\n\r\n  // Thứ tự hướng duyệt:\r\n  // 1. dọc : xuống, lên\r\n  // 2. ngang: xuống, lên\r\n  // 3. chéo chính: xuống, lên\r\n  // 4. chéo phụ: xuống , lên\r\n  var dX = [0, 0, 1, -1, 1, -1, -1, 1];\r\n  var dY = [1, -1, 0, 0, 1, -1, 1, -1];\r\n\r\n  // k= 0,1  --> duyệt dọc\r\n  // k= 2,3  --> duyệt ngang\r\n  // k= 4,5  --> duyệt chéo chính\r\n  // k= 6,7  --> duyệt chéo phụ\r\n  for (var k = 0; k < dX.length; ++k) {\r\n    // k chẵn thì reset biến count\r\n    // ví dụ k= 0; k= 1 thì vẫn là duyệt trên 1 cột nên count giữ nguyên để phía dưới cộng dồn\r\n    if (k % 2 === 0) {\r\n      count = 1;\r\n    }\r\n\r\n    while (\r\n      isValidCord(squares[0].length, x + dX[k], y + dY[k]) &&\r\n      squares[(x += dX[k])][(y += dY[k])] === prevTurn\r\n    ) {\r\n      ++count;\r\n      if (count === 5) {\r\n        return true;\r\n      }\r\n    }\r\n    // đặt lại giá trị ban đầu để duyệt theo hướng khác\r\n    x = i;\r\n    y = j;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction isFull(squares) {\r\n  for (let i = 0; i < squares[0].length; i++) {\r\n    for (let j = 0; j < squares[0].length; j++) {\r\n      if (squares[i][j]) return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\nfunction initMatrix(size) {\r\n  var matrix = [];\r\n  for (var i = 0; i < size; i++) {\r\n    matrix[i] = [];\r\n    for (var j = 0; j < size; j++) {\r\n      matrix[i][j] = null;\r\n    }\r\n  }\r\n  return matrix;\r\n}\r\nexport default Game;\r\n",{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","severity":1,"message":"183","line":1,"column":8,"nodeType":"184","messageId":"185","endLine":1,"endColumn":12},{"ruleId":"186","severity":1,"message":"187","line":44,"column":6,"nodeType":"188","endLine":44,"endColumn":8,"suggestions":"189"},{"ruleId":"182","severity":1,"message":"190","line":2,"column":3,"nodeType":"184","messageId":"185","endLine":2,"endColumn":9},{"ruleId":"182","severity":1,"message":"191","line":3,"column":3,"nodeType":"184","messageId":"185","endLine":3,"endColumn":8},{"ruleId":"182","severity":1,"message":"192","line":4,"column":3,"nodeType":"184","messageId":"185","endLine":4,"endColumn":8},{"ruleId":"182","severity":1,"message":"193","line":7,"column":3,"nodeType":"184","messageId":"185","endLine":7,"endColumn":9},{"ruleId":"182","severity":1,"message":"194","line":8,"column":3,"nodeType":"184","messageId":"185","endLine":8,"endColumn":10},{"ruleId":"182","severity":1,"message":"195","line":11,"column":3,"nodeType":"184","messageId":"185","endLine":11,"endColumn":12},{"ruleId":"182","severity":1,"message":"196","line":13,"column":10,"nodeType":"184","messageId":"185","endLine":13,"endColumn":22},{"ruleId":"182","severity":1,"message":"197","line":16,"column":10,"nodeType":"184","messageId":"185","endLine":16,"endColumn":17},{"ruleId":"182","severity":1,"message":"198","line":19,"column":10,"nodeType":"184","messageId":"185","endLine":19,"endColumn":28},{"ruleId":"182","severity":1,"message":"199","line":22,"column":8,"nodeType":"184","messageId":"185","endLine":22,"endColumn":12},{"ruleId":"182","severity":1,"message":"200","line":25,"column":8,"nodeType":"184","messageId":"185","endLine":25,"endColumn":13},{"ruleId":"182","severity":1,"message":"201","line":26,"column":8,"nodeType":"184","messageId":"185","endLine":26,"endColumn":14},{"ruleId":"182","severity":1,"message":"202","line":28,"column":9,"nodeType":"184","messageId":"185","endLine":28,"endColumn":14},{"ruleId":"182","severity":1,"message":"203","line":29,"column":9,"nodeType":"184","messageId":"185","endLine":29,"endColumn":13},{"ruleId":"182","severity":1,"message":"204","line":37,"column":10,"nodeType":"184","messageId":"185","endLine":37,"endColumn":16},{"ruleId":"186","severity":1,"message":"205","line":46,"column":6,"nodeType":"188","endLine":46,"endColumn":8,"suggestions":"206"},{"ruleId":"186","severity":1,"message":"207","line":57,"column":6,"nodeType":"188","endLine":57,"endColumn":8,"suggestions":"208"},{"ruleId":"186","severity":1,"message":"209","line":65,"column":6,"nodeType":"188","endLine":65,"endColumn":8,"suggestions":"210"},{"ruleId":"182","severity":1,"message":"211","line":89,"column":9,"nodeType":"184","messageId":"185","endLine":89,"endColumn":20},{"ruleId":"182","severity":1,"message":"212","line":1,"column":27,"nodeType":"184","messageId":"185","endLine":1,"endColumn":36},{"ruleId":"213","severity":1,"message":"214","line":142,"column":11,"nodeType":"215","endLine":142,"endColumn":52},{"ruleId":"186","severity":1,"message":"187","line":19,"column":6,"nodeType":"188","endLine":19,"endColumn":8,"suggestions":"216"},{"ruleId":"182","severity":1,"message":"190","line":4,"column":3,"nodeType":"184","messageId":"185","endLine":4,"endColumn":9},{"ruleId":"182","severity":1,"message":"191","line":5,"column":3,"nodeType":"184","messageId":"185","endLine":5,"endColumn":8},{"ruleId":"182","severity":1,"message":"192","line":6,"column":3,"nodeType":"184","messageId":"185","endLine":6,"endColumn":8},{"ruleId":"182","severity":1,"message":"217","line":7,"column":3,"nodeType":"184","messageId":"185","endLine":7,"endColumn":6},{"ruleId":"182","severity":1,"message":"218","line":8,"column":3,"nodeType":"184","messageId":"185","endLine":8,"endColumn":6},{"ruleId":"182","severity":1,"message":"219","line":11,"column":3,"nodeType":"184","messageId":"185","endLine":11,"endColumn":9},{"ruleId":"182","severity":1,"message":"220","line":12,"column":3,"nodeType":"184","messageId":"185","endLine":12,"endColumn":13},{"ruleId":"213","severity":1,"message":"221","line":19,"column":15,"nodeType":"215","endLine":19,"endColumn":18},{"ruleId":"182","severity":1,"message":"212","line":1,"column":16,"nodeType":"184","messageId":"185","endLine":1,"endColumn":25},{"ruleId":"182","severity":1,"message":"190","line":5,"column":3,"nodeType":"184","messageId":"185","endLine":5,"endColumn":9},{"ruleId":"182","severity":1,"message":"191","line":6,"column":3,"nodeType":"184","messageId":"185","endLine":6,"endColumn":8},{"ruleId":"182","severity":1,"message":"192","line":7,"column":3,"nodeType":"184","messageId":"185","endLine":7,"endColumn":8},{"ruleId":"182","severity":1,"message":"217","line":8,"column":3,"nodeType":"184","messageId":"185","endLine":8,"endColumn":6},{"ruleId":"182","severity":1,"message":"218","line":9,"column":3,"nodeType":"184","messageId":"185","endLine":9,"endColumn":6},{"ruleId":"182","severity":1,"message":"219","line":12,"column":3,"nodeType":"184","messageId":"185","endLine":12,"endColumn":9},{"ruleId":"182","severity":1,"message":"220","line":13,"column":3,"nodeType":"184","messageId":"185","endLine":13,"endColumn":13},{"ruleId":"213","severity":1,"message":"221","line":21,"column":15,"nodeType":"215","endLine":21,"endColumn":18},{"ruleId":"182","severity":1,"message":"222","line":2,"column":8,"nodeType":"184","messageId":"185","endLine":2,"endColumn":14},{"ruleId":"182","severity":1,"message":"190","line":6,"column":3,"nodeType":"184","messageId":"185","endLine":6,"endColumn":9},{"ruleId":"182","severity":1,"message":"191","line":7,"column":3,"nodeType":"184","messageId":"185","endLine":7,"endColumn":8},{"ruleId":"182","severity":1,"message":"192","line":8,"column":3,"nodeType":"184","messageId":"185","endLine":8,"endColumn":8},{"ruleId":"182","severity":1,"message":"217","line":9,"column":3,"nodeType":"184","messageId":"185","endLine":9,"endColumn":6},{"ruleId":"182","severity":1,"message":"218","line":10,"column":3,"nodeType":"184","messageId":"185","endLine":10,"endColumn":6},{"ruleId":"182","severity":1,"message":"193","line":11,"column":3,"nodeType":"184","messageId":"185","endLine":11,"endColumn":9},{"ruleId":"182","severity":1,"message":"194","line":12,"column":3,"nodeType":"184","messageId":"185","endLine":12,"endColumn":10},{"ruleId":"182","severity":1,"message":"219","line":13,"column":3,"nodeType":"184","messageId":"185","endLine":13,"endColumn":9},{"ruleId":"182","severity":1,"message":"220","line":14,"column":3,"nodeType":"184","messageId":"185","endLine":14,"endColumn":13},{"ruleId":"182","severity":1,"message":"223","line":15,"column":3,"nodeType":"184","messageId":"185","endLine":15,"endColumn":10},{"ruleId":"182","severity":1,"message":"222","line":2,"column":8,"nodeType":"184","messageId":"185","endLine":2,"endColumn":14},{"ruleId":"182","severity":1,"message":"190","line":5,"column":3,"nodeType":"184","messageId":"185","endLine":5,"endColumn":9},{"ruleId":"182","severity":1,"message":"191","line":6,"column":3,"nodeType":"184","messageId":"185","endLine":6,"endColumn":8},{"ruleId":"182","severity":1,"message":"192","line":7,"column":3,"nodeType":"184","messageId":"185","endLine":7,"endColumn":8},{"ruleId":"182","severity":1,"message":"217","line":8,"column":3,"nodeType":"184","messageId":"185","endLine":8,"endColumn":6},{"ruleId":"182","severity":1,"message":"218","line":9,"column":3,"nodeType":"184","messageId":"185","endLine":9,"endColumn":6},{"ruleId":"182","severity":1,"message":"193","line":10,"column":3,"nodeType":"184","messageId":"185","endLine":10,"endColumn":9},{"ruleId":"182","severity":1,"message":"194","line":11,"column":3,"nodeType":"184","messageId":"185","endLine":11,"endColumn":10},{"ruleId":"182","severity":1,"message":"219","line":12,"column":3,"nodeType":"184","messageId":"185","endLine":12,"endColumn":9},{"ruleId":"182","severity":1,"message":"220","line":13,"column":3,"nodeType":"184","messageId":"185","endLine":13,"endColumn":13},{"ruleId":"182","severity":1,"message":"223","line":14,"column":3,"nodeType":"184","messageId":"185","endLine":14,"endColumn":10},{"ruleId":"182","severity":1,"message":"222","line":2,"column":8,"nodeType":"184","messageId":"185","endLine":2,"endColumn":14},{"ruleId":"182","severity":1,"message":"201","line":5,"column":8,"nodeType":"184","messageId":"185","endLine":5,"endColumn":14},{"ruleId":"182","severity":1,"message":"199","line":8,"column":8,"nodeType":"184","messageId":"185","endLine":8,"endColumn":12},{"ruleId":"182","severity":1,"message":"190","line":11,"column":3,"nodeType":"184","messageId":"185","endLine":11,"endColumn":9},{"ruleId":"182","severity":1,"message":"191","line":12,"column":3,"nodeType":"184","messageId":"185","endLine":12,"endColumn":8},{"ruleId":"182","severity":1,"message":"192","line":13,"column":3,"nodeType":"184","messageId":"185","endLine":13,"endColumn":8},{"ruleId":"182","severity":1,"message":"217","line":14,"column":3,"nodeType":"184","messageId":"185","endLine":14,"endColumn":6},{"ruleId":"182","severity":1,"message":"218","line":15,"column":3,"nodeType":"184","messageId":"185","endLine":15,"endColumn":6},{"ruleId":"182","severity":1,"message":"193","line":16,"column":3,"nodeType":"184","messageId":"185","endLine":16,"endColumn":9},{"ruleId":"182","severity":1,"message":"194","line":17,"column":3,"nodeType":"184","messageId":"185","endLine":17,"endColumn":10},{"ruleId":"182","severity":1,"message":"219","line":18,"column":3,"nodeType":"184","messageId":"185","endLine":18,"endColumn":9},{"ruleId":"182","severity":1,"message":"220","line":19,"column":3,"nodeType":"184","messageId":"185","endLine":19,"endColumn":13},{"ruleId":"182","severity":1,"message":"195","line":20,"column":3,"nodeType":"184","messageId":"185","endLine":20,"endColumn":12},{"ruleId":"186","severity":1,"message":"224","line":58,"column":6,"nodeType":"188","endLine":58,"endColumn":8,"suggestions":"225"},{"ruleId":"182","severity":1,"message":"226","line":174,"column":10,"nodeType":"184","messageId":"185","endLine":174,"endColumn":16},"no-native-reassign",["227"],"no-negated-in-lhs",["228"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["229"],"'Button' is defined but never used.","'Input' is defined but never used.","'Empty' is defined but never used.","'Avatar' is defined but never used.","'Tooltip' is defined but never used.","'Statistic' is defined but never used.","'BulbOutlined' is defined but never used.","'connect' is defined but never used.","'onlineUsersChanged' is defined but never used.","'Move' is defined but never used.","'Board' is defined but never used.","'Square' is defined but never used.","'Sider' is assigned a value but never used.","'Text' is assigned a value but never used.","'roomId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'roomIdT', 'token', and 'urlToken'. Either include them or remove the dependency array.",["230"],"React Hook useEffect has a missing dependency: 'messages'. Either include it or remove the dependency array. You can also do a functional update 'setMessages(m => ...)' if you only need 'messages' in the 'setMessages' call.",["231"],"React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["232"],"'handleClick' is assigned a value but never used.","'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["233"],"'Row' is defined but never used.","'Col' is defined but never used.","'Layout' is defined but never used.","'Typography' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'moment' is defined but never used.","'Comment' is defined but never used.","React Hook useEffect has missing dependencies: 'isFinish', 'sizeBoard', 'state.lastMove', 'state.squares', and 'username'. Either include them or remove the dependency array.",["234"],"'isFull' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"235","fix":"243"},{"desc":"244","fix":"245"},"Update the dependencies array to be: [props]",{"range":"246","text":"247"},"Update the dependencies array to be: [roomIdT, token, urlToken]",{"range":"248","text":"249"},"Update the dependencies array to be: [messages]",{"range":"250","text":"251"},"Update the dependencies array to be: [username]",{"range":"252","text":"253"},{"range":"254","text":"247"},"Update the dependencies array to be: [isFinish, sizeBoard, state.lastMove, state.squares, username]",{"range":"255","text":"256"},[1103,1105],"[props]",[1536,1538],"[roomIdT, token, urlToken]",[1838,1840],"[messages]",[2092,2094],"[username]",[565,567],[1808,1810],"[isFinish, sizeBoard, state.lastMove, state.squares, username]"]