[{"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\index.js":"1","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\App.js":"2","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\reportWebVitals.js":"3","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\store\\index.js":"4","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\history.js":"5","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\actions\\user-actions.js":"6","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\auth-redirect\\index.js":"7","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\login-form\\index.js":"8","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\the-layout\\index.js":"9","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\register-form\\index.js":"10","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\reducers\\user-reducer.js":"11","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\reducers\\header-reducer.js":"12","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\recovery-password\\index.js":"13","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\verify-account\\index.js":"14","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\constants\\action-types.js":"15","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\utils\\NetworkUtils.js":"16","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\utils\\NotificationUtils.js":"17","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\homepage\\index.js":"18","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\room\\index.js":"19","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\leaderboard\\index.js":"20","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\rooms\\index.js":"21","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\user-profile\\index.js":"22","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\history\\index.js":"23","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\header\\index.js":"24","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\api\\index.js":"25","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\actions\\header-action.js":"26","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\quick-join-button\\index.js":"27","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\chat-messages\\index.js":"28","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\game\\index.js":"29","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\move\\index.js":"30","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\leaderboard-row\\index.js":"31","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\room-item\\index.js":"32","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\invite-modal\\index.js":"33","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\online-user\\index.js":"34","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\leaderboard-item\\index.js":"35","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\board\\index.js":"36","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\square\\index.js":"37","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\timer\\index.js":"38"},{"size":574,"mtime":1609688881903,"results":"39","hashOfConfig":"40"},{"size":1495,"mtime":1609943020788,"results":"41","hashOfConfig":"40"},{"size":362,"mtime":1609688881906,"results":"42","hashOfConfig":"40"},{"size":384,"mtime":1609943020884,"results":"43","hashOfConfig":"40"},{"size":94,"mtime":1609688881902,"results":"44","hashOfConfig":"40"},{"size":392,"mtime":1609943020799,"results":"45","hashOfConfig":"40"},{"size":647,"mtime":1609688881884,"results":"46","hashOfConfig":"40"},{"size":5630,"mtime":1609943020850,"results":"47","hashOfConfig":"40"},{"size":968,"mtime":1609943020867,"results":"48","hashOfConfig":"40"},{"size":4728,"mtime":1609688881895,"results":"49","hashOfConfig":"40"},{"size":660,"mtime":1609688881905,"results":"50","hashOfConfig":"40"},{"size":554,"mtime":1609943020879,"results":"51","hashOfConfig":"40"},{"size":2523,"mtime":1609688881893,"results":"52","hashOfConfig":"40"},{"size":1112,"mtime":1609688881901,"results":"53","hashOfConfig":"40"},{"size":222,"mtime":1609943020834,"results":"54","hashOfConfig":"40"},{"size":426,"mtime":1609688881909,"results":"55","hashOfConfig":"40"},{"size":275,"mtime":1609688881910,"results":"56","hashOfConfig":"40"},{"size":6122,"mtime":1609943020840,"results":"57","hashOfConfig":"40"},{"size":5530,"mtime":1610033850403,"results":"58","hashOfConfig":"40"},{"size":2036,"mtime":1609943020845,"results":"59","hashOfConfig":"40"},{"size":1318,"mtime":1609943020862,"results":"60","hashOfConfig":"40"},{"size":2354,"mtime":1609943020874,"results":"61","hashOfConfig":"40"},{"size":740,"mtime":1609688892389,"results":"62","hashOfConfig":"40"},{"size":3426,"mtime":1609943020811,"results":"63","hashOfConfig":"40"},{"size":111,"mtime":1609688881859,"results":"64","hashOfConfig":"40"},{"size":247,"mtime":1609943020793,"results":"65","hashOfConfig":"40"},{"size":1003,"mtime":1609943020822,"results":"66","hashOfConfig":"40"},{"size":749,"mtime":1609943020805,"results":"67","hashOfConfig":"40"},{"size":4911,"mtime":1609688881870,"results":"68","hashOfConfig":"40"},{"size":703,"mtime":1609943020816,"results":"69","hashOfConfig":"40"},{"size":470,"mtime":1609688892370,"results":"70","hashOfConfig":"40"},{"size":1285,"mtime":1609943020828,"results":"71","hashOfConfig":"40"},{"size":910,"mtime":1609688892351,"results":"72","hashOfConfig":"40"},{"size":1001,"mtime":1609688892378,"results":"73","hashOfConfig":"40"},{"size":1172,"mtime":1609688892364,"results":"74","hashOfConfig":"40"},{"size":737,"mtime":1609688881867,"results":"75","hashOfConfig":"40"},{"size":210,"mtime":1609688881882,"results":"76","hashOfConfig":"40"},{"size":1346,"mtime":1610036613685,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"bk8xc",{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"80"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"80"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"80"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"80"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"80"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"80"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"80"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"80"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"80"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"80"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\index.js",[],["166","167"],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\App.js",["168","169"],"import React from 'react';\r\nimport\r\n{\r\n  Route, Router,\r\n  Switch, Redirect\r\n} from 'react-router-dom';\r\nimport './App.css';\r\nimport AuthRedirect from './containers/auth-redirect/index';\r\nimport LoginForm from './containers/login-form/index';\r\nimport RecoveryPassword from './containers/recovery-password';\r\nimport RegisterForm from './containers/register-form/index';\r\nimport Verify from './containers/verify-account';\r\nimport { history } from './history';\r\nimport LayoutCustom from './containers/the-layout/index';\r\nimport { connect } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { login } from './actions/user-actions';\r\n\r\nfunction App(props)\r\n{\r\n  useEffect(() =>\r\n  {\r\n    const token = localStorage.getItem('token');\r\n    if (token)\r\n    {\r\n      props.login(token);\r\n    }\r\n  }, [])\r\n  return (\r\n    <Router history={history}>\r\n      <Switch>\r\n        <Route exact path=\"/auth/:token\" component={AuthRedirect} />\r\n        <Route exact path=\"/login\" component={LoginForm} />\r\n        <Route exact path=\"/register\" component={RegisterForm} />\r\n        <Route exact path=\"/verify\" component={Verify} />\r\n        <Route exact path=\"/recovery\" component={RecoveryPassword} />\r\n        <Route path=\"/\" component={LayoutCustom} />\r\n      </Switch>\r\n    </Router>\r\n\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) =>\r\n{\r\n  return {\r\n    token: state.user.token,\r\n  }\r\n}\r\n\r\nconst mapDispacthToProps = { login };\r\n\r\nexport default connect(mapStateToProps, mapDispacthToProps)(App);\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\reportWebVitals.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\store\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\history.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\actions\\user-actions.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\auth-redirect\\index.js",["170"],"import React, { useEffect } from \"react\";\nimport { socket } from \"../../api\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../actions/user-actions\";\n\nconst mapDispatchToProps = { login };\nconst mapStateToProps = (state) => {\n  const { token } = state.user;\n  return { token };\n};\n\nconst AuthRedirect = (props) => {\n  useEffect(() => {\n    const token = props.match.params.token;\n    localStorage.setItem(\"token\", token);\n    props.login(token);\n    socket.emit(\"login\", { token: token });\n    props.history.push(\"/home\");\n  }, []);\n  return <></>;\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthRedirect);\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\login-form\\index.js",["171","172"],"import React, { useEffect, useState } from \"react\";\r\nimport { Form, Input, Button, Checkbox, Divider, Spin, Modal } from \"antd\";\r\nimport\r\n{\r\n  UserOutlined,\r\n  LockOutlined,\r\n  FacebookFilled,\r\n  GoogleCircleFilled,\r\n} from \"@ant-design/icons\";\r\nimport callServer from \"../../utils/NetworkUtils\";\r\nimport showNotification from \"../../utils/NotificationUtils\";\r\nimport { socket } from \"../../api\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/user-actions\";\r\nimport \"./index.css\";\r\n\r\nconst mapDispatchToProps = { login };\r\nconst mapStateToProps = (state) =>\r\n{\r\n  const { token } = state.user;\r\n  return { token };\r\n};\r\n\r\nconst LoginForm = (props) =>\r\n{\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const [recoveryPasswordUsername, setRecoveryPasswordUsername] = useState(\"\");\r\n\r\n  const showModal = () =>\r\n  {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = async () =>\r\n  {\r\n    const data = { username: recoveryPasswordUsername };\r\n    const result = await callServer(process.env.REACT_APP_HOST_NAME + '/auth/recoveryrequest', \"post\", data);\r\n    if (result.auth)\r\n    {\r\n      showNotification(\"error\", result.message);\r\n      setIsModalVisible(false);\r\n    } else\r\n    {\r\n      showNotification(\"error\", result.message);\r\n    }\r\n\r\n  };\r\n\r\n  const handleCancel = () =>\r\n  {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleRecoveryUsername = (e) =>\r\n  {\r\n    setRecoveryPasswordUsername(e.target.value);\r\n  }\r\n\r\n  useEffect(() =>\r\n  {\r\n    console.log(\"Login Form\");\r\n  }, []);\r\n\r\n  const onFinish = async (values) =>\r\n  {\r\n    console.log(\"Received values of form: \", values);\r\n    setIsLoading(true);\r\n    const data = {\r\n      ...values,\r\n    };\r\n\r\n    const result = await callServer(\r\n      process.env.REACT_APP_HOST_NAME + \"/auth/login\",\r\n      \"post\",\r\n      data\r\n    );\r\n    // console.log(result);\r\n    if (result.auth)\r\n    {\r\n      setIsLoading(false);\r\n      localStorage.setItem(\"token\", result.accessToken);\r\n      props.login(result.accessToken);\r\n      socket.emit(\"login\", { token: result.accessToken });\r\n      props.history.push(\"/home\");\r\n    } else\r\n    {\r\n      setIsLoading(false);\r\n      showNotification(\"error\", result.message);\r\n    }\r\n  };\r\n\r\n  const handleRegisterClick = () =>\r\n  {\r\n    props.history.push(\"/register\");\r\n  };\r\n\r\n  const handleFacebookLogin = () =>\r\n  {\r\n    window.open(process.env.REACT_APP_HOST_NAME + \"/auth/facebook\", \"_self\");\r\n  };\r\n\r\n  const handleGoogleLogin = () =>\r\n  {\r\n    window.open(process.env.REACT_APP_HOST_NAME + \"/auth/google\", \"_self\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h1 style={{ textAlign: \"center\", fontSize: \"32px\" }}>Login</h1>\r\n      <Form\r\n        name=\"normal_login\"\r\n        className=\"login-form\"\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n      >\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={handleGoogleLogin}\r\n          danger\r\n          className=\"login-form-button\"\r\n          style={{ margin: \"10px 0px\" }}\r\n          icon={<GoogleCircleFilled />}\r\n        >\r\n          Đăng nhập bằng Google\r\n        </Button>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={handleFacebookLogin}\r\n          className=\"login-form-button\"\r\n          style={{ margin: \"10px 0px\" }}\r\n          icon={<FacebookFilled />}\r\n        >\r\n          Đăng nhập bằng Facebook\r\n        </Button>\r\n        <Divider />\r\n        <Form.Item\r\n          name=\"username\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Username!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Tên tài khoản\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Password!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            type=\"password\"\r\n            placeholder=\"Mật khẩu\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n\r\n          <a href=\"\" className=\"login-form-forgot\" onClick={(e) => { e.preventDefault(); showModal() }}>\r\n            Quên mật khẩu\r\n          </a>\r\n        </Form.Item>\r\n        {isLoading ? (\r\n          <div className=\"loading-spinner\">\r\n            <Spin size=\"large\" />\r\n          </div>\r\n        ) : null}\r\n        <Form.Item className=\"button-row\">\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            Đăng nhập\r\n          </Button>\r\n          <div style={{ margin: \"15px 0px\", textAlign: \"center\" }}>Hoặc</div>\r\n          <Button type=\"dashed\" onClick={handleRegisterClick}>\r\n            Đăng ký\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n      <>\r\n        <Modal\r\n          centered\r\n          title=\"Khôi phục mật khẩu\"\r\n          visible={isModalVisible}\r\n          onOk={handleOk}\r\n          onCancel={handleCancel}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Username\"\r\n            onChange={e => handleRecoveryUsername(e)}\r\n          />\r\n        </Modal>\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\the-layout\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\register-form\\index.js",["173","174"],"import React, { useState, useEffect } from \"react\";\nimport { Form, Input, Button, DatePicker, Spin } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport \"./index.css\";\nimport callServer from \"../../utils/NetworkUtils\";\nimport showNotification from \"../../utils/NotificationUtils\";\nimport { socket } from \"../../api\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../actions/user-actions\";\n\nconst mapDispatchToProps = { login };\nconst mapStateToProps = (state) =>\n{\n  const { token } = state.user;\n  return { token };\n};\n\nconst RegisterForm = (props) =>\n{\n  const [isLoading, setIsLoading] = useState(false);\n\n  const onFinish = async (values) =>\n  {\n    console.log(\"Received values of form: \", values);\n    setIsLoading(true);\n    if (values.password !== values.passwordConfirm)\n    {\n      showNotification(\"error\", \"Password does not match!\");\n      return;\n    }\n\n    const data = {\n      ...values,\n      role: 0,\n      isCreatedAt: new Date(),\n    };\n\n    const result = await callServer(\n      process.env.REACT_APP_HOST_NAME + \"/auth/signup\",\n      \"post\",\n      data\n    );\n    if (result.auth)\n    {\n      setIsLoading(false);\n      // localStorage.setItem(\"token\", result.accessToken);\n      // props.login(result.accessToken);\n      // socket.emit(\"login\", { token: result.accessToken });\n      // props.history.push(\"/home\");\n      showNotification(\"success\", result.message);\n    } else\n    {\n      setIsLoading(false);\n      showNotification(\"error\", result.message);\n    }\n  };\n\n  const handleLoginClick = () =>\n  {\n    props.history.push(\"/login\");\n  };\n\n  return (\n    <div className=\"register-container\">\n      <h1 style={{ textAlign: \"center\", margin: \"40px 0px\", fontSize: \"32px\" }}>\n        Register\n      </h1>\n      <Form\n        name=\"normal_register\"\n        className=\"register-form\"\n        initialValues={{\n          remember: true,\n        }}\n        onFinish={onFinish}\n      >\n        <Form.Item\n          name=\"username\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your Username!\",\n            },\n          ]}\n        >\n          <Input\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\n            placeholder=\"Username\"\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"email\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your Email!\",\n            },\n          ]}\n        >\n          <Input\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\n            placeholder=\"Email\"\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"fullName\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your full name!\",\n            },\n          ]}\n        >\n          <Input\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\n            placeholder=\"Full name\"\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"dob\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your DOB!\",\n            },\n          ]}\n        >\n          <DatePicker placeholder=\"Date of birth\" />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your Password!\",\n            },\n          ]}\n        >\n          <Input\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"passwordConfirm\"\n          rules={[\n            {\n              required: true,\n              message: \"Please confirm your Password!\",\n            },\n          ]}\n        >\n          <Input\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n          />\n        </Form.Item>\n        {isLoading ? (\n          <div className=\"loading-spinner\">\n            <Spin size=\"large\" />\n          </div>\n        ) : null}\n        <Form.Item className=\"button-row\">\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"register-form-button\"\n          >\n            Register\n          </Button>\n\n          <div style={{ margin: \"15px 0px\", textAlign: \"center\" }}>Or</div>\n          <Button type=\"dashed\" onClick={handleLoginClick}>\n            Log in\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterForm);\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\reducers\\user-reducer.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\reducers\\header-reducer.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\recovery-password\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\verify-account\\index.js",["175"],"import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport callServer from \"../../utils/NetworkUtils\";\nimport { Button } from \"antd\";\nconst Verify = (props) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory();\n  const token = history.location.search.split(\"?\")[1];\n  const handleBackToLogin = () => {\n    props.history.push(\"/login\");\n  };\n  const verifyStart = async (data) => {\n    setIsLoading(true);\n    const result = await callServer(\n      process.env.REACT_APP_HOST_NAME + \"/auth/verify\",\n      \"post\",\n      data\n    );\n    console.log(result);\n    if (result.auth) {\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    const data = { token: token };\n    verifyStart(data);\n  }, []);\n  return (\n    <div>\n      {isLoading ? (\n        <p>Verifying </p>\n      ) : (\n        <div>\n          <p>Verified</p>\n          <Button type=\"link\" onClick={() => handleBackToLogin()}>\n            Back to login\n          </Button>\n        </div>\n      )}\n      <h1>Verify Account</h1>\n    </div>\n  );\n};\nexport default Verify;\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\constants\\action-types.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\utils\\NetworkUtils.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\utils\\NotificationUtils.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\homepage\\index.js",["176"],"import { EnterOutlined, PlusOutlined, EyeOutlined } from \"@ant-design/icons\";\r\nimport\r\n{\r\n  Avatar,\r\n  Button,\r\n  Col,\r\n  Empty,\r\n  Form,\r\n  Input,\r\n  Modal,\r\n  Row,\r\n  Tooltip,\r\n} from \"antd\";\r\nimport { React, useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { onlineUsersChanged } from \"../../actions/user-actions\";\r\nimport { socket } from \"../../api\";\r\nimport callServer from \"../../utils/NetworkUtils\";\r\nimport \"./index.css\";\r\nimport QuickJoinButton from \"./../../components/quick-join-button/index\";\r\n\r\nconst mapDispatchToProps = { onlineUsersChanged };\r\nconst mapStateToProps = (state) =>\r\n{\r\n  const { onlineUsers, token } = state.user;\r\n  return { onlineUsers, token };\r\n};\r\n\r\nconst Homepage = (props) =>\r\n{\r\n  const [roomId, setRoomId] = useState(\"\");\r\n  const [isModalVisible, setModalVisible] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleOk = () =>\r\n  {\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () =>\r\n  {\r\n    setModalVisible(false);\r\n  };\r\n\r\n  useEffect(() =>\r\n  {\r\n    socket.on(\"onlineUsersChanged\", (data) =>\r\n    {\r\n      props.onlineUsersChanged(data.onlineUsers);\r\n    });\r\n  }, []);\r\n\r\n  let onlineUsers = !props.token ? (\r\n    <Empty description=\"\" />\r\n  ) : (\r\n      props.onlineUsers.map((item) => (\r\n        <Tooltip title={item.username} placement=\"top\">\r\n          <Avatar className=\"avatar\" size=\"large\">\r\n            {item.username.charAt(0).toUpperCase()}\r\n          </Avatar>\r\n        </Tooltip>\r\n      ))\r\n    );\r\n\r\n  const openCreateRoomModal = () =>\r\n  {\r\n    setModalVisible(true);\r\n  };\r\n\r\n  const handleJoinRoom = async () =>\r\n  {\r\n    console.log(roomId);\r\n    //logged in and not logged in\r\n    //the first is logged in case\r\n    const data = { roomId: roomId };\r\n    const result = await callServer(\r\n      process.env.REACT_APP_HOST_NAME + \"/room/join\",\r\n      \"post\",\r\n      data\r\n    );\r\n    // console.log(result);\r\n    if (result.status === 200)\r\n    {\r\n      props.history.push(`/room/${result._id}`);\r\n    }\r\n  };\r\n\r\n  const handleCreateRoom = async (values) =>\r\n  {\r\n    const data = { ...values };\r\n    // console.log(data);\r\n    const result = await callServer(\r\n      process.env.REACT_APP_HOST_NAME + \"/room/add\",\r\n      \"post\",\r\n      data\r\n    );\r\n    // console.log(result);\r\n    //Call API to create a room, after that, receive room id to go to /room?id={roomId response from server}\r\n    props.history.push(`/room/${result._id}`);\r\n  };\r\n\r\n  const handleObserving = () =>\r\n  {\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <QuickJoinButton />\r\n      <Row style={{ marginTop: \"45px\" }}>\r\n        <h1 style={{ textAlign: \"center\", margin: \"auto\" }}>\r\n          Caro Online\r\n        </h1>\r\n      </Row>\r\n      <Row>\r\n        <Input\r\n          className=\"input\"\r\n          placeholder=\"ID của phòng muốn tham gia\"\r\n          onChange={(e) => setRoomId(e.target.value)}\r\n        />\r\n      </Row>\r\n      <Row gutter={[16, 0]} justify=\"center\">\r\n        <Col>\r\n          <Button\r\n            type=\"primary\"\r\n            icon={<EnterOutlined />}\r\n            onClick={() => handleJoinRoom()}\r\n          >\r\n            Tham gia\r\n          </Button>\r\n        </Col>\r\n\r\n        <Col>\r\n          <Button\r\n            icon={<EyeOutlined />}\r\n            onClick={() => handleObserving()}\r\n          >\r\n            Theo dõi\r\n          </Button>\r\n        </Col>\r\n\r\n        {props.token ? <Col>\r\n          <Button\r\n            type=\"dashed\"\r\n            icon={<PlusOutlined />}\r\n            onClick={openCreateRoomModal}\r\n          >\r\n            Tạo phòng\r\n          </Button>\r\n        </Col> : \"\"}\r\n      </Row>\r\n\r\n      {props.token ? <><h2 style={{ textAlign: \"center\", margin: \"30px auto\" }}>Đang online</h2>\r\n        <Row gutter={[16, 0]} className=\"avatar-row\" justify=\"center\">\r\n          {onlineUsers}\r\n        </Row></> : \"\"}\r\n\r\n      <Modal\r\n        centered\r\n        footer={[]}\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        <div className=\"board-modal\">\r\n          <h1>Tạo phòng</h1>\r\n\r\n          <Form\r\n            onFinish={handleCreateRoom}\r\n            name=\"createBoardForm\"\r\n            className=\"board-form\"\r\n          >\r\n            <Form.Item\r\n              style={{ marginTop: \"15px\" }}\r\n              name=\"roomName\"\r\n              rules={[{ required: true, message: \"Please input board name!\" }]}\r\n            >\r\n              <Input className=\"board-input\" placeholder=\"Room name\" />\r\n            </Form.Item>\r\n            <Row justify=\"space-between\" gutter={15}>\r\n              <Col span={12}>\r\n                <Form.Item name=\"roomPassword\" rules={[{ type: \"string\" }]}>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"board-input\"\r\n                    placeholder=\"Mật khẩu\"\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  name=\"roomTimePerTurn\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Vui lòng nhập số giây\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    type=\"number\"\r\n                    className=\"board-input\"\r\n                    placeholder=\"Số giây mỗi lượt\"\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Form.Item>\r\n              <Button\r\n                style={{ marginBottom: \"-60px\", marginTop: \"15px\" }}\r\n                type=\"primary\"\r\n                loading={loading}\r\n                onClick={() =>\r\n                {\r\n                  setLoading(!loading);\r\n                }}\r\n                htmlType=\"submit\"\r\n              >\r\n                {loading ? \"Đang tạo\" : \"Tạo phòng\"}\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Homepage);\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\room\\index.js",["177","178"],"import { Col, Row, Statistic, Empty, Button, Avatar } from \"antd\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport { React, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { socket } from \"../../api\";\r\nimport ChatMessage from \"../../components/chat-messages/index\";\r\nimport Game from \"../../components/game/index\";\r\nimport Timer from \"../../components/timer/index\";\r\nimport callServer from \"../../utils/NetworkUtils\";\r\nimport \"./index.css\";\r\nimport Move from \"./../../components/move/index\";\r\nimport { connect } from \"react-redux\";\r\nimport { roomJoined, roomLeft } from \"./../../actions/header-action\";\r\nimport { animateScroll } from \"react-scroll\";\r\n\r\nconst Room = (props) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [turnName, setTurnName] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [roomId, setRoomId] = useState(\"\");\r\n  const history = useHistory();\r\n  const urlToken = history.location.pathname.split(\"/\");\r\n  const roomIdT = urlToken[urlToken.length - 1];\r\n\r\n  useEffect(() => {\r\n    props.roomJoined([]);\r\n\r\n    setRoomId(urlToken[urlToken.length - 1]);\r\n    socket.emit(\"join\", { roomIdT, token });\r\n\r\n    socket.on(\"turnName\", (response) => {\r\n      console.log(\"---- SOCKET: ON_turnName: \", response);\r\n      setTurnName(response);\r\n    });\r\n\r\n    socket.on(\"message\", (response) => {\r\n      setMessages(messages.concat(response));\r\n      scrollToBottom();\r\n    });\r\n\r\n    socket.on(\"Username\", (response) => {\r\n      setUsername(response);\r\n      console.log(\"----Socket: ON Username -----\");\r\n      console.log(\"RESPONE: \", response);\r\n      console.log(\"USERNAME: \", username);\r\n    });\r\n\r\n    return () => {\r\n      props.roomLeft();\r\n    };\r\n  }, []);\r\n\r\n  function scrollToBottom() {\r\n    animateScroll.scrollToBottom({\r\n      containerId: \"chatBox\",\r\n    });\r\n  }\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(roomIdT + \" \" + message);\r\n\r\n    if (message) {\r\n      let newMsg = {\r\n        message,\r\n        username: \"Tôi\",\r\n      };\r\n      setMessages([...messages, newMsg]);\r\n      setMessage(\"\");\r\n\r\n      scrollToBottom();\r\n\r\n      const result = await callServer(process.env.REACT_APP_HOST_NAME + \"/message/add\", \"post\", { roomId: roomIdT, content: message });\r\n      console.log(result);\r\n      if (result.status === 200) {\r\n        socket.emit(\"sendMessage\", { roomIdT, message, token });\r\n      }\r\n      // console.log(message);\r\n    }\r\n  };\r\n  // console.log(messages);\r\n  return (\r\n    <div style={{ padding: \"200px 50px\" }}>\r\n      <Row justify=\"space-between\" align=\"middle\">\r\n        <Col span={5}>\r\n          <Row justify=\"center\" align=\"middle\" gutter={30}>\r\n            <Col>\r\n              <Avatar size={48} src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n            </Col>\r\n            <Col>\r\n              <Avatar size={48} src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n            </Col>\r\n            <Col>\r\n              <Button disabled={props.token ? false : true} type=\"primary\">\r\n                Bắt đầu trận\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Button disabled={props.token ? false : true} danger>\r\n                Xin hoà\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <Row style={{ height: \"10vh\", marginTop: \"30px\" }} justify=\"space-between\" align=\"middle\">\r\n            <Col>\r\n              <Statistic title=\"Player turn\" value=\"nhatvinh43\" />\r\n            </Col>\r\n            <Col>\r\n              <Statistic title=\"Symbol\" value=\"X \" />\r\n            </Col>\r\n            <Col>\r\n              {/* <Statistic title=\"Time left\" value=\"00:15\" /> */}\r\n              <Timer />{\" \"}\r\n            </Col>\r\n          </Row>\r\n          <Row style={{ overflowY: \"scroll\", height: \"50vh\" }}>\r\n            <Move />\r\n            <Move />\r\n            <Move />\r\n            <Move />\r\n            <Move />\r\n            <Move />\r\n            <Move />\r\n            <Move />\r\n          </Row>\r\n        </Col>\r\n\r\n        <Col className=\"playing-area\">\r\n          <Game Username={username} size={20} TurnName={turnName}></Game>\r\n        </Col>\r\n\r\n        <Col className=\"chat-box\" span={6}>\r\n          <Row id=\"chatBox\" style={{ height: \"60vh\", overflowY: \"scroll\" }} justify=\"center\" align={messages.size > 0 ? \"top\" : \"middle\"}>\r\n            <Col>\r\n              {messages.size > 0 ? (\r\n                messages.map((item, index) => <ChatMessage key={index} content={item.message} username={item.username} />)\r\n              ) : (\r\n                <Empty />\r\n              )}\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <TextArea\r\n              disabled={props.token ? false : true}\r\n              placeholder=\"Type your message here\"\r\n              autoSize={{ minRows: 2, maxRows: 2 }}\r\n              className=\"message-input-box\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              onPressEnter={(e) => sendMessage(e)}\r\n              required={true}\r\n            />\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.user.token,\r\n  };\r\n};\r\nconst mapDispatchToProps = { roomJoined, roomLeft };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Room);\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\leaderboard\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\rooms\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\user-profile\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\containers\\history\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\header\\index.js",["179","180"],"import React, { useState } from \"react\";\r\nimport { PageHeader, Button, Tooltip, Avatar, Tabs, Row, Col } from \"antd\";\r\nimport { history } from \"../../history\";\r\nimport \"./index.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { socket } from \"../../api\";\r\nimport { logout } from \"../../actions/user-actions\";\r\nimport InviteModal from \"./../invite-modal/index\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\nconst mapDispatchToProps = { logout };\r\n\r\nconst HeaderCustom = (props) =>\r\n{\r\n  const [activeKey, setActiveKey] = useState(\"home\");\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  const handleLogoutClick = () =>\r\n  {\r\n    socket.emit(\"logout\", {});\r\n    props.logout();\r\n    localStorage.removeItem(\"token\");\r\n    history.push(\"/home\");\r\n  };\r\n\r\n  const handleLoginClick = () =>\r\n  {\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  const handleRegisterClick = () =>\r\n  {\r\n    history.push(\"/register\");\r\n  };\r\n\r\n  const logout = [\r\n    <Button danger onClick={handleLogoutClick}>\r\n      Logout\r\n    </Button>,\r\n  ];\r\n  const loginAndRegister = [\r\n    <Row gutter={15} align=\"middle\">\r\n      <Col>\r\n        <Button type=\"primary\" onClick={handleRegisterClick}>\r\n          Đăng ký\r\n        </Button>\r\n      </Col>\r\n      <Col>\r\n        <Button onClick={handleLoginClick}>Đăng nhập</Button>\r\n      </Col>\r\n    </Row>,\r\n  ];\r\n  const content = props.token ? logout : loginAndRegister;\r\n\r\n  return (\r\n    <div>\r\n      <PageHeader\r\n        className=\"header\"\r\n        ghost={false}\r\n        style={{ zIndex: \"1\" }}\r\n        onBack={() => window.history.back()}\r\n        title=\"Title\"\r\n        subTitle=\"This is a subtitle\"\r\n        extra={[\r\n          <Row gutter={45} align=\"middle\">\r\n            {props.roomJoined && props.token ? (\r\n              <Row gutter={45}>\r\n                <Col>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    onClick={() =>\r\n                    {\r\n                      setModalOpen(!modalOpen);\r\n                    }}\r\n                  >\r\n                    Mời\r\n        </Button>\r\n                </Col>\r\n              </Row>\r\n\r\n\r\n            ) : \"\"}\r\n            {props.roomJoined ? \"\" : (\r\n              <Col style={{ margin: \"auto\" }}>\r\n                <Tabs\r\n                  style={{ marginTop: \"15px\" }}\r\n                  activeKey={activeKey}\r\n                  centered\r\n                  size=\"large\"\r\n                  onTabClick={(key) =>\r\n                  {\r\n                    setActiveKey(key);\r\n                    history.push(\"/\" + key);\r\n                  }}\r\n                >\r\n                  <TabPane tab=\"Tham gia\" key=\"home\" />\r\n                  <TabPane tab=\"Phòng chơi\" key=\"rooms\" />\r\n                  {props.token ? <><TabPane tab=\"Xếp hạng\" key=\"leaderboard\" />\r\n                    <TabPane tab=\"Lịch sử\" key=\"history\" /> </>\r\n                    : \"\"}\r\n                </Tabs>\r\n              </Col>\r\n            )}\r\n            <Col>{content}</Col>\r\n          </Row>,\r\n        ]}\r\n      ></PageHeader>\r\n      <InviteModal\r\n        modalOpen={modalOpen}\r\n        onClose={() =>\r\n        {\r\n          setModalOpen(!modalOpen);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) =>\r\n{\r\n  const { token } = state.user;\r\n  const { roomJoined } = state.header;\r\n  return { token, roomJoined };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderCustom);\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\api\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\actions\\header-action.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\quick-join-button\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\chat-messages\\index.js",["181","182"],"import\r\n{\r\n  Avatar,\r\n  Col,\r\n  Row,\r\n  Comment, Tooltip\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\n\r\nconst ChatMessage = (props) =>\r\n{\r\n  return (\r\n    <Row>\r\n\r\n      <Comment\r\n        author={<a>{props.username}</a>}\r\n        avatar={\r\n          <Avatar\r\n            src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n            alt=\"Han Solo\"\r\n          />\r\n        }\r\n        content={\r\n          <p>\r\n            {props.content}\r\n          </p>\r\n        }\r\n        datetime={\r\n          <Tooltip title={moment().format(\"YYYY-MM-DD HH:mm:ss\")}>\r\n            <span>{moment().fromNow()}</span>\r\n          </Tooltip>\r\n        }\r\n      />\r\n    </Row>\r\n\r\n  );\r\n};\r\n\r\nexport default ChatMessage;\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\game\\index.js",["183","184","185","186","187"],"import { React, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { socket } from \"../../api\";\nimport Board from \"../../components/board/index\";\nimport { Col, Row, Statistic } from 'antd';\nimport \"./index.css\";\nimport Move from './../move/index';\n\n\nfunction Game(props)\n{\n  const token = localStorage.getItem(\"token\");\n  const _history = useHistory();\n  const urlToken = _history.location.pathname.split(\"/\");\n  const roomIdT = urlToken[urlToken.length - 1];\n  const [isFinish, setIsFinish] = useState(false);\n  const [isMyTurn, setIsMyTurn] = useState(true);\n  //const [turnName, setTurnName] = useState(props.turnName);\n  const [state, setState] = useState({\n    squares: initMatrix(props.size),\n    lastMove: -1,\n  });\n  const username = props.Username;\n  const sizeBoard = props.size;\n  const turnName = props.TurnName;\n\n  useEffect(() =>\n  {\n    socket.on(\"sendMove\", (response) =>\n    {\n      // console.log(\" ON sendMove ---- Opponent username:\", response.username);\n      // console.log(\" ON sendMove ---- Opponent turnname:\", response.opponentTurnName);\n      if (response.username !== username && isFinish === false)\n      {\n        let squares = state.squares;\n        const i = Math.floor(response.move / sizeBoard);\n        const j = response.move % sizeBoard;\n        squares[i][j] = response.opponentTurnName;\n        setState({\n          squares: squares,\n          lastMove: response.move,\n        });\n        setIsMyTurn(true);\n        if (calculateWinner(state.squares, state.lastMove))\n        {\n          setIsFinish(true);\n        }\n      }\n    });\n  }, []);\n\n  const sendMove = async (move, opponentTurnName) =>\n  {\n    socket.emit(\"sendMove\", { roomIdT, move, token, opponentTurnName });\n  };\n\n  const handleClick = (i) =>\n  {\n    let squares = state.squares;\n    let x = Math.floor(i / squares[0].length);\n    let y = i % squares[0].length;\n    if (\n      !isMyTurn ||\n      isFinish ||\n      calculateWinner(state.squares, state.lastMove) ||\n      squares[x][y]\n    )\n    {\n      return;\n    }\n    squares[x][y] = turnName;\n    setState({\n      squares,\n      lastMove: i,\n    });\n    setIsMyTurn(false);\n    if (calculateWinner(squares, i))\n    {\n      setIsFinish(true);\n    }\n    sendMove(i, turnName);\n  };\n\n  // const winner = calculateWinner(state.squares, state.lastMove);\n  // let status;\n  // if (winner) {\n  //   status = \"Winner: \" + winner;\n  // } else {\n  //   if (isFull(state.squares)) status = \"### DRAW ###\";\n  //   else {\n  //     var opponentTurnName = turnName === \"X\" ? \"O\" : \"X\";\n  //     status = \"Next player: \" + (isMyTurn ? turnName : opponentTurnName);\n  //   }\n  // }\n  return (\n    <Col className=\"game-area\">\n      <Board\n        squares={state.squares}\n        onClick={(i) => handleClick(i)}\n        size={props.size}\n      />\n    </Col>\n  );\n}\n\nfunction calculateWinner(squares, lastMove)\n{\n  if (lastMove < 0) return null;\n  var i = Math.floor(lastMove / squares[0].length);\n  var j = lastMove % squares[i].length;\n  var prevTurn = squares[i][j];\n  console.log(\"CAL WINNER:\", checkWin(squares, i, j));\n  if (checkWin(squares, i, j)) return prevTurn;\n  return null;\n}\n\nfunction isValidCord(sizeBoard, x, y)\n{\n  return !(x < 0 || x >= sizeBoard || y < 0 || y >= sizeBoard);\n}\n\n// i,j là nước mới đánh\n// return true khi nước cờ (i,j) dành chiến thắng\n//        false khi chưa ai thắng\nfunction checkWin(squares, i, j)\n{\n  var prevTurn = squares[i][j];\n  var count = 1;\n  var x = i;\n  var y = j;\n\n  // Thứ tự hướng duyệt:\n  // 1. dọc : xuống, lên\n  // 2. ngang: xuống, lên\n  // 3. chéo chính: xuống, lên\n  // 4. chéo phụ: xuống , lên\n  var dX = [0, 0, 1, -1, 1, -1, -1, 1];\n  var dY = [1, -1, 0, 0, 1, -1, 1, -1];\n\n  // k= 0,1  --> duyệt dọc\n  // k= 2,3  --> duyệt ngang\n  // k= 4,5  --> duyệt chéo chính\n  // k= 6,7  --> duyệt chéo phụ\n  for (var k = 0; k < dX.length; ++k)\n  {\n    // k chẵn thì reset biến count\n    // ví dụ k= 0; k= 1 thì vẫn là duyệt trên 1 cột nên count giữ nguyên để phía dưới cộng dồn\n    if (k % 2 === 0)\n    {\n      count = 1;\n    }\n\n    while (\n      isValidCord(squares[0].length, x + dX[k], y + dY[k]) &&\n      squares[(x += dX[k])][(y += dY[k])] === prevTurn\n    )\n    {\n      ++count;\n      if (count === 5)\n      {\n        return true;\n      }\n    }\n    // đặt lại giá trị ban đầu để duyệt theo hướng khác\n    x = i;\n    y = j;\n  }\n  return false;\n}\n\nfunction isFull(squares)\n{\n  for (let i = 0; i < squares[0].length; i++)\n  {\n    for (let j = 0; j < squares[0].length; j++)\n    {\n      if (squares[i][j]) return false;\n    }\n  }\n  return true;\n}\nfunction initMatrix(size)\n{\n  var matrix = [];\n  for (var i = 0; i < size; i++)\n  {\n    matrix[i] = [];\n    for (var j = 0; j < size; j++)\n    {\n      matrix[i][j] = null;\n    }\n  }\n  return matrix;\n}\nexport default Game;\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\move\\index.js",["188"],"import\r\n{\r\n  Avatar,\r\n\r\n\r\n\r\n  Comment, Tooltip\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport \"./index.css\";\r\n\r\nconst Move = (props) =>\r\n{\r\n  return (\r\n    <Comment\r\n      className=\"move\"\r\n      author={<a>Han Solo</a>}\r\n      avatar={\r\n        <Avatar\r\n          src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n          alt=\"Han Solo\"\r\n        />\r\n      }\r\n      content={<p>{props.comment ? props.comment : \"Di chuyển tới (1,3)\"}</p>}\r\n      datetime={\r\n        <Tooltip title={moment().format(\"YYYY-MM-DD HH:mm:ss\")}>\r\n          <span>{moment().fromNow()}</span>\r\n        </Tooltip>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default Move;\r\n","C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\leaderboard-row\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\room-item\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\invite-modal\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\online-user\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\leaderboard-item\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\board\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\square\\index.js",[],"C:\\Users\\QUOCVIET\\Desktop\\WEB\\WEBFIN-UserClient\\src\\components\\timer\\index.js",["189"],{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","severity":1,"message":"195","line":5,"column":11,"nodeType":"196","messageId":"197","endLine":5,"endColumn":19},{"ruleId":"198","severity":1,"message":"199","line":28,"column":6,"nodeType":"200","endLine":28,"endColumn":8,"suggestions":"201"},{"ruleId":"198","severity":1,"message":"199","line":19,"column":6,"nodeType":"200","endLine":19,"endColumn":8,"suggestions":"202"},{"ruleId":"194","severity":1,"message":"203","line":2,"column":31,"nodeType":"196","messageId":"197","endLine":2,"endColumn":39},{"ruleId":"204","severity":1,"message":"205","line":172,"column":11,"nodeType":"206","endLine":172,"endColumn":105},{"ruleId":"194","severity":1,"message":"207","line":1,"column":27,"nodeType":"196","messageId":"197","endLine":1,"endColumn":36},{"ruleId":"194","severity":1,"message":"208","line":7,"column":10,"nodeType":"196","messageId":"197","endLine":7,"endColumn":16},{"ruleId":"198","severity":1,"message":"209","line":27,"column":6,"nodeType":"200","endLine":27,"endColumn":8,"suggestions":"210"},{"ruleId":"198","severity":1,"message":"199","line":51,"column":6,"nodeType":"200","endLine":51,"endColumn":8,"suggestions":"211"},{"ruleId":"194","severity":1,"message":"212","line":22,"column":10,"nodeType":"196","messageId":"197","endLine":22,"endColumn":16},{"ruleId":"198","severity":1,"message":"213","line":53,"column":6,"nodeType":"200","endLine":53,"endColumn":8,"suggestions":"214"},{"ruleId":"194","severity":1,"message":"215","line":2,"column":30,"nodeType":"196","messageId":"197","endLine":2,"endColumn":37},{"ruleId":"194","severity":1,"message":"216","line":2,"column":39,"nodeType":"196","messageId":"197","endLine":2,"endColumn":45},{"ruleId":"194","severity":1,"message":"217","line":4,"column":3,"nodeType":"196","messageId":"197","endLine":4,"endColumn":6},{"ruleId":"204","severity":1,"message":"218","line":17,"column":17,"nodeType":"206","endLine":17,"endColumn":20},{"ruleId":"194","severity":1,"message":"219","line":5,"column":15,"nodeType":"196","messageId":"197","endLine":5,"endColumn":18},{"ruleId":"194","severity":1,"message":"220","line":5,"column":20,"nodeType":"196","messageId":"197","endLine":5,"endColumn":29},{"ruleId":"194","severity":1,"message":"221","line":7,"column":8,"nodeType":"196","messageId":"197","endLine":7,"endColumn":12},{"ruleId":"198","severity":1,"message":"222","line":50,"column":6,"nodeType":"200","endLine":50,"endColumn":8,"suggestions":"223"},{"ruleId":"194","severity":1,"message":"224","line":171,"column":10,"nodeType":"196","messageId":"197","endLine":171,"endColumn":16},{"ruleId":"204","severity":1,"message":"218","line":18,"column":15,"nodeType":"206","endLine":18,"endColumn":18},{"ruleId":"198","severity":1,"message":"225","line":20,"column":6,"nodeType":"200","endLine":20,"endColumn":18,"suggestions":"226"},"no-native-reassign",["227"],"no-negated-in-lhs",["228"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["229"],["230"],"'Checkbox' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","'socket' is defined but never used.","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["231"],["232"],"'roomId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'messages', 'props', 'roomIdT', 'token', 'urlToken', and 'username'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["233"],"'Tooltip' is defined but never used.","'Avatar' is defined but never used.","'Col' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Row' is defined but never used.","'Statistic' is defined but never used.","'Move' is defined but never used.","React Hook useEffect has missing dependencies: 'isFinish', 'sizeBoard', 'state.lastMove', 'state.squares', and 'username'. Either include them or remove the dependency array.",["234"],"'isFull' is defined but never used.","React Hook useEffect has missing dependencies: 'counter' and 'isStop'. Either include them or remove the dependency array. You can also do a functional update 'setCounter(c => ...)' if you only need 'counter' in the 'setCounter' call.",["235"],"no-global-assign","no-unsafe-negation",{"desc":"236","fix":"237"},{"desc":"236","fix":"238"},{"desc":"239","fix":"240"},{"desc":"236","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},"Update the dependencies array to be: [props]",{"range":"248","text":"249"},{"range":"250","text":"249"},"Update the dependencies array to be: [token]",{"range":"251","text":"252"},{"range":"253","text":"249"},"Update the dependencies array to be: [messages, props, roomIdT, token, urlToken, username]",{"range":"254","text":"255"},"Update the dependencies array to be: [isFinish, sizeBoard, state.lastMove, state.squares, username]",{"range":"256","text":"257"},"Update the dependencies array to be: [counter, isStop, state.time]",{"range":"258","text":"259"},[805,807],"[props]",[547,549],[778,780],"[token]",[1194,1196],[1855,1857],"[messages, props, roomIdT, token, urlToken, username]",[1612,1614],"[isFinish, sizeBoard, state.lastMove, state.squares, username]",[586,598],"[counter, isStop, state.time]"]